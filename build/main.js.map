{
  "version": 3,
  "sources": ["../node_modules/preact/src/constants.js", "../node_modules/preact/src/util.js", "../node_modules/preact/src/options.js", "../node_modules/preact/src/create-element.js", "../node_modules/preact/src/component.js", "../node_modules/preact/src/create-context.js", "../node_modules/preact/src/diff/children.js", "../node_modules/preact/src/diff/props.js", "../node_modules/preact/src/diff/index.js", "../node_modules/preact/src/render.js", "../node_modules/preact/src/clone-element.js", "../node_modules/preact/src/diff/catch-error.js", "../build_tools/preact-shim.js", "../node_modules/howler/dist/howler.js", "../jscc_temp/src/main.ts", "../jscc_temp/src/display/menu.ts", "../jscc_temp/src/game.ts", "../jscc_temp/src/utils/enums.ts", "../jscc_temp/src/utils/utils.ts", "../jscc_temp/src/leaderboard/replays.ts", "../jscc_temp/src/settings.ts", "../jscc_temp/src/utils/data.ts", "../jscc_temp/src/utils/decorators.ts", "../jscc_temp/src/utils/randomizer.ts", "../jscc_temp/src/utils/enum.ts", "../jscc_temp/src/display/sound/sound.ts", "../jscc_temp/src/display/tetrion/preview.ts", "../jscc_temp/src/logic/hold.ts", "../jscc_temp/src/logic/view.ts", "../jscc_temp/src/utils/blackjack.ts", "../jscc_temp/src/display/tetrion/piece.ts", "../jscc_temp/src/display/tetrion/stack.ts", "../jscc_temp/src/display/tetrion/matrix.ts", "../jscc_temp/src/utils/lang.ts", "../jscc_temp/src/display/tetrion/messages.ts", "../jscc_temp/src/display/tetrion/stats.ts", "../jscc_temp/src/utils/string.ts", "../jscc_temp/src/utils/math.ts", "../jscc_temp/src/random_stuff.ts", "../jscc_temp/src/display/size.ts", "../jscc_temp/src/touch.ts", "../jscc_temp/src/gametypes/sprint.ts", "../jscc_temp/src/gametypes/base.ts", "../jscc_temp/src/gametypes/dig.ts", "../jscc_temp/src/gametypes/marathon.ts", "../jscc_temp/src/gametypes/master.ts", "../jscc_temp/src/gametypes/retro.ts", "../jscc_temp/src/gametypes/scoreattack.ts", "../jscc_temp/src/gametypes/grades.ts", "../jscc_temp/src/gametypes/survival.ts", "../jscc_temp/src/components/main.tsx", "../jscc_temp/src/components/center/SectionMiddle.tsx", "../jscc_temp/src/components/center/AudioMenu.tsx", "../jscc_temp/src/components/settings/GroupListSetting.tsx", "../jscc_temp/src/components/utils/ButtonGroup.tsx", "../node_modules/preact/hooks/src/index.js", "../jscc_temp/src/components/settings/GroupSetting.tsx", "../jscc_temp/src/components/settings/GroupSliderSetting.tsx", "../jscc_temp/src/components/utils/Btn.tsx", "../jscc_temp/src/components/center/ControlsMenu.tsx", "../jscc_temp/src/components/utils/ButtonGroupList.tsx", "../jscc_temp/src/components/utils/Icon.tsx", "../jscc_temp/src/components/center/DigMenu.tsx", "../jscc_temp/src/components/center/FailedMenu.tsx", "../jscc_temp/src/components/center/GradesMenu.tsx", "../jscc_temp/src/components/center/GraphicsMenu.tsx", "../jscc_temp/src/components/center/MainMenu.tsx", "../jscc_temp/src/components/center/MarathonMenu.tsx", "../jscc_temp/src/components/center/MasterMenu.tsx", "../jscc_temp/src/components/center/PauseMenu.tsx", "../jscc_temp/src/components/center/RankingsMenu.tsx", "../jscc_temp/src/components/center/ReplayMenu.tsx", "../jscc_temp/src/components/center/RetroMenu.tsx", "../jscc_temp/src/components/center/SettingsMenu.tsx", "../jscc_temp/src/components/center/SprintMenu.tsx", "../jscc_temp/src/components/center/SurvialMenu.tsx", "../jscc_temp/src/components/center/TuningMenu.tsx", "../jscc_temp/src/components/left/SectionLeft.tsx", "../jscc_temp/src/components/left/Stats.tsx", "../jscc_temp/src/components/right/SectionRight.tsx", "../jscc_temp/src/components/utils/ProgressBar.tsx", "../jscc_temp/src/utils/random-id.ts", "../jscc_temp/src/components/utils/LineShower.tsx"],
  "sourcesContent": ["export const EMPTY_OBJ = {};\r\nexport const EMPTY_ARR = [];\r\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\r\n", "import { EMPTY_ARR } from \"./constants\";\r\n\r\n/**\r\n * Assign properties from `props` to `obj`\r\n * @template O, P The obj and props types\r\n * @param {O} obj The object to copy properties to\r\n * @param {P} props The object to copy properties from\r\n * @returns {O & P}\r\n */\r\nexport function assign(obj, props) {\r\n\t// @ts-ignore We change the type of `obj` to be `O & P`\r\n\tfor (let i in props) obj[i] = props[i];\r\n\treturn /** @type {O & P} */ (obj);\r\n}\r\n\r\n/**\r\n * Remove a child node from its parent if attached. This is a workaround for\r\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\r\n * is smaller than including a dedicated polyfill.\r\n * @param {Node} node The node to remove\r\n */\r\nexport function removeNode(node) {\r\n\tlet parentNode = node.parentNode;\r\n\tif (parentNode) parentNode.removeChild(node);\r\n}\r\n\r\nexport const slice = EMPTY_ARR.slice;\r\n", "import { _catchError } from './diff/catch-error';\r\n\r\n/**\r\n * The `option` object can potentially contain callback functions\r\n * that are called during various stages of our renderer. This is the\r\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\r\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\r\n * for a full list of available option hooks (most editors/IDEs allow you to\r\n * ctrl+click or cmd+click on mac the type definition below).\r\n * @type {import('./internal').Options}\r\n */\r\nconst options = {\r\n\t_catchError\r\n};\r\n\r\nexport default options;\r\n", "import { slice } from './util';\r\nimport options from './options';\r\n\r\nlet vnodeId = 0;\r\n\r\n/**\r\n * Create an virtual node (used for JSX)\r\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\r\n * constructor for this virtual node\r\n * @param {object | null | undefined} [props] The properties of the virtual node\r\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\r\n * @returns {import('./internal').VNode}\r\n */\r\nexport function createElement(type, props, children) {\r\n\tlet normalizedProps = {},\r\n\t\tkey,\r\n\t\tref,\r\n\t\ti;\r\n\tfor (i in props) {\r\n\t\tif (i == 'key') key = props[i];\r\n\t\telse if (i == 'ref') ref = props[i];\r\n\t\telse normalizedProps[i] = props[i];\r\n\t}\r\n\r\n\tif (arguments.length > 2) {\r\n\t\tnormalizedProps.children =\r\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\r\n\t}\r\n\r\n\t// If a Component VNode, check for and apply defaultProps\r\n\t// Note: type may be undefined in development, must never error here.\r\n\tif (typeof type == 'function' && type.defaultProps != null) {\r\n\t\tfor (i in type.defaultProps) {\r\n\t\t\tif (normalizedProps[i] === undefined) {\r\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn createVNode(type, normalizedProps, key, ref, null);\r\n}\r\n\r\n/**\r\n * Create a VNode (used internally by Preact)\r\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\r\n * Constructor for this virtual node\r\n * @param {object | string | number | null} props The properties of this virtual node.\r\n * If this virtual node represents a text node, this is the text of the node (string or number).\r\n * @param {string | number | null} key The key for this virtual node, used when\r\n * diffing it against its children\r\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\r\n * receive a reference to its created child\r\n * @returns {import('./internal').VNode}\r\n */\r\nexport function createVNode(type, props, key, ref, original) {\r\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\r\n\t// Do not inline into createElement and coerceToVNode!\r\n\tconst vnode = {\r\n\t\ttype,\r\n\t\tprops,\r\n\t\tkey,\r\n\t\tref,\r\n\t\t_children: null,\r\n\t\t_parent: null,\r\n\t\t_depth: 0,\r\n\t\t_dom: null,\r\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\r\n\t\t// be set to dom.nextSibling which can return `null` and it is important\r\n\t\t// to be able to distinguish between an uninitialized _nextDom and\r\n\t\t// a _nextDom that has been set to `null`\r\n\t\t_nextDom: undefined,\r\n\t\t_component: null,\r\n\t\t_hydrating: null,\r\n\t\tconstructor: undefined,\r\n\t\t_original: original == null ? ++vnodeId : original\r\n\t};\r\n\r\n\t// Only invoke the vnode hook if this was *not* a direct copy:\r\n\tif (original == null && options.vnode != null) options.vnode(vnode);\r\n\r\n\treturn vnode;\r\n}\r\n\r\nexport function createRef() {\r\n\treturn { current: null };\r\n}\r\n\r\nexport function Fragment(props) {\r\n\treturn props.children;\r\n}\r\n\r\n/**\r\n * Check if a the argument is a valid Preact VNode.\r\n * @param {*} vnode\r\n * @returns {vnode is import('./internal').VNode}\r\n */\r\nexport const isValidElement = vnode =>\r\n\tvnode != null && vnode.constructor === undefined;\r\n", "import { assign } from './util';\r\nimport { diff, commitRoot } from './diff/index';\r\nimport options from './options';\r\nimport { Fragment } from './create-element';\r\n\r\n/**\r\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\r\n * trigger rendering\r\n * @param {object} props The initial component props\r\n * @param {object} context The initial context from parent components'\r\n * getChildContext\r\n */\r\nexport function Component(props, context) {\r\n\tthis.props = props;\r\n\tthis.context = context;\r\n}\r\n\r\n/**\r\n * Update component state and schedule a re-render.\r\n * @this {import('./internal').Component}\r\n * @param {object | ((s: object, p: object) => object)} update A hash of state\r\n * properties to update with new values or a function that given the current\r\n * state and props returns a new partial state\r\n * @param {() => void} [callback] A function to be called once component state is\r\n * updated\r\n */\r\nComponent.prototype.setState = function(update, callback) {\r\n\t// only clone state when copying to nextState the first time.\r\n\tlet s;\r\n\tif (this._nextState != null && this._nextState !== this.state) {\r\n\t\ts = this._nextState;\r\n\t} else {\r\n\t\ts = this._nextState = assign({}, this.state);\r\n\t}\r\n\r\n\tif (typeof update == 'function') {\r\n\t\t// Some libraries like `immer` mark the current state as readonly,\r\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\r\n\t\tupdate = update(assign({}, s), this.props);\r\n\t}\r\n\r\n\tif (update) {\r\n\t\tassign(s, update);\r\n\t}\r\n\r\n\t// Skip update if updater function returned null\r\n\tif (update == null) return;\r\n\r\n\tif (this._vnode) {\r\n\t\tif (callback) this._renderCallbacks.push(callback);\r\n\t\tenqueueRender(this);\r\n\t}\r\n};\r\n\r\n/**\r\n * Immediately perform a synchronous re-render of the component\r\n * @this {import('./internal').Component}\r\n * @param {() => void} [callback] A function to be called after component is\r\n * re-rendered\r\n */\r\nComponent.prototype.forceUpdate = function(callback) {\r\n\tif (this._vnode) {\r\n\t\t// Set render mode so that we can differentiate where the render request\r\n\t\t// is coming from. We need this because forceUpdate should never call\r\n\t\t// shouldComponentUpdate\r\n\t\tthis._force = true;\r\n\t\tif (callback) this._renderCallbacks.push(callback);\r\n\t\tenqueueRender(this);\r\n\t}\r\n};\r\n\r\n/**\r\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\r\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\r\n * @param {object} props Props (eg: JSX attributes) received from parent\r\n * element/component\r\n * @param {object} state The component's current state\r\n * @param {object} context Context object, as returned by the nearest\r\n * ancestor's `getChildContext()`\r\n * @returns {import('./index').ComponentChildren | void}\r\n */\r\nComponent.prototype.render = Fragment;\r\n\r\n/**\r\n * @param {import('./internal').VNode} vnode\r\n * @param {number | null} [childIndex]\r\n */\r\nexport function getDomSibling(vnode, childIndex) {\r\n\tif (childIndex == null) {\r\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\r\n\t\treturn vnode._parent\r\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\r\n\t\t\t: null;\r\n\t}\r\n\r\n\tlet sibling;\r\n\tfor (; childIndex < vnode._children.length; childIndex++) {\r\n\t\tsibling = vnode._children[childIndex];\r\n\r\n\t\tif (sibling != null && sibling._dom != null) {\r\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\r\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\r\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\r\n\t\t\treturn sibling._dom;\r\n\t\t}\r\n\t}\r\n\r\n\t// If we get here, we have not found a DOM node in this vnode's children.\r\n\t// We must resume from this vnode's sibling (in it's parent _children array)\r\n\t// Only climb up and search the parent if we aren't searching through a DOM\r\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\r\n\t// the search)\r\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\r\n}\r\n\r\n/**\r\n * Trigger in-place re-rendering of a component.\r\n * @param {import('./internal').Component} component The component to rerender\r\n */\r\nfunction renderComponent(component) {\r\n\tlet vnode = component._vnode,\r\n\t\toldDom = vnode._dom,\r\n\t\tparentDom = component._parentDom;\r\n\r\n\tif (parentDom) {\r\n\t\tlet commitQueue = [];\r\n\t\tconst oldVNode = assign({}, vnode);\r\n\t\toldVNode._original = vnode._original + 1;\r\n\r\n\t\tdiff(\r\n\t\t\tparentDom,\r\n\t\t\tvnode,\r\n\t\t\toldVNode,\r\n\t\t\tcomponent._globalContext,\r\n\t\t\tparentDom.ownerSVGElement !== undefined,\r\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\r\n\t\t\tcommitQueue,\r\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\r\n\t\t\tvnode._hydrating\r\n\t\t);\r\n\t\tcommitRoot(commitQueue, vnode);\r\n\r\n\t\tif (vnode._dom != oldDom) {\r\n\t\t\tupdateParentDomPointers(vnode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {import('./internal').VNode} vnode\r\n */\r\nfunction updateParentDomPointers(vnode) {\r\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\r\n\t\tvnode._dom = vnode._component.base = null;\r\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\r\n\t\t\tlet child = vnode._children[i];\r\n\t\t\tif (child != null && child._dom != null) {\r\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn updateParentDomPointers(vnode);\r\n\t}\r\n}\r\n\r\n/**\r\n * The render queue\r\n * @type {Array<import('./internal').Component>}\r\n */\r\nlet rerenderQueue = [];\r\n\r\n/**\r\n * Asynchronously schedule a callback\r\n * @type {(cb: () => void) => void}\r\n */\r\n/* istanbul ignore next */\r\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\r\nconst defer =\r\n\ttypeof Promise == 'function'\r\n\t\t? Promise.prototype.then.bind(Promise.resolve())\r\n\t\t: setTimeout;\r\n\r\n/*\r\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\r\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\r\n * do, and when their effects will be applied. See the links below for some further reading on designing\r\n * asynchronous APIs.\r\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\r\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\r\n */\r\n\r\nlet prevDebounce;\r\n\r\n/**\r\n * Enqueue a rerender of a component\r\n * @param {import('./internal').Component} c The component to rerender\r\n */\r\nexport function enqueueRender(c) {\r\n\tif (\r\n\t\t(!c._dirty &&\r\n\t\t\t(c._dirty = true) &&\r\n\t\t\trerenderQueue.push(c) &&\r\n\t\t\t!process._rerenderCount++) ||\r\n\t\tprevDebounce !== options.debounceRendering\r\n\t) {\r\n\t\tprevDebounce = options.debounceRendering;\r\n\t\t(prevDebounce || defer)(process);\r\n\t}\r\n}\r\n\r\n/** Flush the render queue by rerendering all queued components */\r\nfunction process() {\r\n\tlet queue;\r\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\r\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\r\n\t\trerenderQueue = [];\r\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\r\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\r\n\t\tqueue.some(c => {\r\n\t\t\tif (c._dirty) renderComponent(c);\r\n\t\t});\r\n\t}\r\n}\r\nprocess._rerenderCount = 0;\r\n", "import { enqueueRender } from './component';\r\n\r\nexport let i = 0;\r\n\r\nexport function createContext(defaultValue, contextId) {\r\n\tcontextId = '__cC' + i++;\r\n\r\n\tconst context = {\r\n\t\t_id: contextId,\r\n\t\t_defaultValue: defaultValue,\r\n\t\t/** @type {import('./internal').FunctionComponent} */\r\n\t\tConsumer(props, contextValue) {\r\n\t\t\t// return props.children(\r\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\r\n\t\t\t// );\r\n\t\t\treturn props.children(contextValue);\r\n\t\t},\r\n\t\t/** @type {import('./internal').FunctionComponent} */\r\n\t\tProvider(props) {\r\n\t\t\tif (!this.getChildContext) {\r\n\t\t\t\tlet subs = [];\r\n\t\t\t\tlet ctx = {};\r\n\t\t\t\tctx[contextId] = this;\r\n\r\n\t\t\t\tthis.getChildContext = () => ctx;\r\n\r\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\r\n\t\t\t\t\tif (this.props.value !== _props.value) {\r\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\r\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\r\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\r\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\r\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\r\n\t\t\t\t\t\t// subs.some(c => {\r\n\t\t\t\t\t\t// \tc.context = _props.value;\r\n\t\t\t\t\t\t// \tenqueueRender(c);\r\n\t\t\t\t\t\t// });\r\n\r\n\t\t\t\t\t\t// subs.some(c => {\r\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\r\n\t\t\t\t\t\t// \tenqueueRender(c);\r\n\t\t\t\t\t\t// });\r\n\t\t\t\t\t\tsubs.some(enqueueRender);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.sub = c => {\r\n\t\t\t\t\tsubs.push(c);\r\n\t\t\t\t\tlet old = c.componentWillUnmount;\r\n\t\t\t\t\tc.componentWillUnmount = () => {\r\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\r\n\t\t\t\t\t\tif (old) old.call(c);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn props.children;\r\n\t\t}\r\n\t};\r\n\r\n\t// Devtools needs access to the context object when it\r\n\t// encounters a Provider. This is necessary to support\r\n\t// setting `displayName` on the context object instead\r\n\t// of on the component itself. See:\r\n\t// https://reactjs.org/docs/context.html#contextdisplayname\r\n\r\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\r\n}\r\n", "import { diff, unmount, applyRef } from './index';\r\nimport { createVNode, Fragment } from '../create-element';\r\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\r\nimport { getDomSibling } from '../component';\r\n\r\n/**\r\n * Diff the children of a virtual node\r\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\r\n * children are being diffed\r\n * @param {import('../internal').ComponentChildren[]} renderResult\r\n * @param {import('../internal').VNode} newParentVNode The new virtual\r\n * node whose children should be diff'ed against oldParentVNode\r\n * @param {import('../internal').VNode} oldParentVNode The old virtual\r\n * node whose children should be diff'ed against newParentVNode\r\n * @param {object} globalContext The current context object - modified by getChildContext\r\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\r\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\r\n * @param {Array<import('../internal').Component>} commitQueue List of components\r\n * which have callbacks to invoke in commitRoot\r\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\r\n * element any new dom elements should be placed around. Likely `null` on first\r\n * render (except when hydrating). Can be a sibling DOM element when diffing\r\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\r\n * @param {boolean} isHydrating Whether or not we are in hydration\r\n */\r\nexport function diffChildren(\r\n\tparentDom,\r\n\trenderResult,\r\n\tnewParentVNode,\r\n\toldParentVNode,\r\n\tglobalContext,\r\n\tisSvg,\r\n\texcessDomChildren,\r\n\tcommitQueue,\r\n\toldDom,\r\n\tisHydrating\r\n) {\r\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\r\n\r\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\r\n\t// as EMPTY_OBJ._children should be `undefined`.\r\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\r\n\r\n\tlet oldChildrenLength = oldChildren.length;\r\n\r\n\tnewParentVNode._children = [];\r\n\tfor (i = 0; i < renderResult.length; i++) {\r\n\t\tchildVNode = renderResult[i];\r\n\r\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\r\n\t\t\tchildVNode = newParentVNode._children[i] = null;\r\n\t\t}\r\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\r\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\r\n\t\t// it's own DOM & etc. pointers\r\n\t\telse if (\r\n\t\t\ttypeof childVNode == 'string' ||\r\n\t\t\ttypeof childVNode == 'number' ||\r\n\t\t\t// eslint-disable-next-line valid-typeof\r\n\t\t\ttypeof childVNode == 'bigint'\r\n\t\t) {\r\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\r\n\t\t\t\tnull,\r\n\t\t\t\tchildVNode,\r\n\t\t\t\tnull,\r\n\t\t\t\tnull,\r\n\t\t\t\tchildVNode\r\n\t\t\t);\r\n\t\t} else if (Array.isArray(childVNode)) {\r\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\r\n\t\t\t\tFragment,\r\n\t\t\t\t{ children: childVNode },\r\n\t\t\t\tnull,\r\n\t\t\t\tnull,\r\n\t\t\t\tnull\r\n\t\t\t);\r\n\t\t} else if (childVNode._depth > 0) {\r\n\t\t\t// VNode is already in use, clone it. This can happen in the following\r\n\t\t\t// scenario:\r\n\t\t\t//   const reuse = <div />\r\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\r\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\r\n\t\t\t\tchildVNode.type,\r\n\t\t\t\tchildVNode.props,\r\n\t\t\t\tchildVNode.key,\r\n\t\t\t\tnull,\r\n\t\t\t\tchildVNode._original\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\r\n\t\t}\r\n\r\n\t\t// Terser removes the `continue` here and wraps the loop body\r\n\t\t// in a `if (childVNode) { ... } condition\r\n\t\tif (childVNode == null) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tchildVNode._parent = newParentVNode;\r\n\t\tchildVNode._depth = newParentVNode._depth + 1;\r\n\r\n\t\t// Check if we find a corresponding element in oldChildren.\r\n\t\t// If found, delete the array item by setting to `undefined`.\r\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\r\n\t\t// (holes).\r\n\t\toldVNode = oldChildren[i];\r\n\r\n\t\tif (\r\n\t\t\toldVNode === null ||\r\n\t\t\t(oldVNode &&\r\n\t\t\t\tchildVNode.key == oldVNode.key &&\r\n\t\t\t\tchildVNode.type === oldVNode.type)\r\n\t\t) {\r\n\t\t\toldChildren[i] = undefined;\r\n\t\t} else {\r\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\r\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\r\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\r\n\t\t\t\toldVNode = oldChildren[j];\r\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\r\n\t\t\t\t// We always match by type (in either case).\r\n\t\t\t\tif (\r\n\t\t\t\t\toldVNode &&\r\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\r\n\t\t\t\t\tchildVNode.type === oldVNode.type\r\n\t\t\t\t) {\r\n\t\t\t\t\toldChildren[j] = undefined;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\toldVNode = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toldVNode = oldVNode || EMPTY_OBJ;\r\n\r\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\r\n\t\tdiff(\r\n\t\t\tparentDom,\r\n\t\t\tchildVNode,\r\n\t\t\toldVNode,\r\n\t\t\tglobalContext,\r\n\t\t\tisSvg,\r\n\t\t\texcessDomChildren,\r\n\t\t\tcommitQueue,\r\n\t\t\toldDom,\r\n\t\t\tisHydrating\r\n\t\t);\r\n\r\n\t\tnewDom = childVNode._dom;\r\n\r\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\r\n\t\t\tif (!refs) refs = [];\r\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\r\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\r\n\t\t}\r\n\r\n\t\tif (newDom != null) {\r\n\t\t\tif (firstChildDom == null) {\r\n\t\t\t\tfirstChildDom = newDom;\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\ttypeof childVNode.type == 'function' &&\r\n\t\t\t\tchildVNode._children === oldVNode._children\r\n\t\t\t) {\r\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\r\n\t\t\t\t\tchildVNode,\r\n\t\t\t\t\toldDom,\r\n\t\t\t\t\tparentDom\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\toldDom = placeChild(\r\n\t\t\t\t\tparentDom,\r\n\t\t\t\t\tchildVNode,\r\n\t\t\t\t\toldVNode,\r\n\t\t\t\t\toldChildren,\r\n\t\t\t\t\tnewDom,\r\n\t\t\t\t\toldDom\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof newParentVNode.type == 'function') {\r\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\r\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\r\n\t\t\t\t//\r\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\r\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\r\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\r\n\t\t\t\t// node's nextSibling.\r\n\t\t\t\tnewParentVNode._nextDom = oldDom;\r\n\t\t\t}\r\n\t\t} else if (\r\n\t\t\toldDom &&\r\n\t\t\toldVNode._dom == oldDom &&\r\n\t\t\toldDom.parentNode != parentDom\r\n\t\t) {\r\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\r\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\r\n\t\t\toldDom = getDomSibling(oldVNode);\r\n\t\t}\r\n\t}\r\n\r\n\tnewParentVNode._dom = firstChildDom;\r\n\r\n\t// Remove remaining oldChildren if there are any.\r\n\tfor (i = oldChildrenLength; i--; ) {\r\n\t\tif (oldChildren[i] != null) {\r\n\t\t\tif (\r\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\r\n\t\t\t\toldChildren[i]._dom != null &&\r\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\r\n\t\t\t) {\r\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\r\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\r\n\t\t\t\t// _nextDom to it\r\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\r\n\t\t\t}\r\n\r\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t// Set refs only after unmount\r\n\tif (refs) {\r\n\t\tfor (i = 0; i < refs.length; i++) {\r\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction reorderChildren(childVNode, oldDom, parentDom) {\r\n\t// Note: VNodes in nested suspended trees may be missing _children.\r\n\tlet c = childVNode._children;\r\n\tlet tmp = 0;\r\n\tfor (; c && tmp < c.length; tmp++) {\r\n\t\tlet vnode = c[tmp];\r\n\t\tif (vnode) {\r\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\r\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\r\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\r\n\t\t\t// (childVNode here).\r\n\t\t\tvnode._parent = childVNode;\r\n\r\n\t\t\tif (typeof vnode.type == 'function') {\r\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\r\n\t\t\t} else {\r\n\t\t\t\toldDom = placeChild(\r\n\t\t\t\t\tparentDom,\r\n\t\t\t\t\tvnode,\r\n\t\t\t\t\tvnode,\r\n\t\t\t\t\tc,\r\n\t\t\t\t\tvnode._dom,\r\n\t\t\t\t\toldDom\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn oldDom;\r\n}\r\n\r\n/**\r\n * Flatten and loop through the children of a virtual node\r\n * @param {import('../index').ComponentChildren} children The unflattened\r\n * children of a virtual node\r\n * @returns {import('../internal').VNode[]}\r\n */\r\nexport function toChildArray(children, out) {\r\n\tout = out || [];\r\n\tif (children == null || typeof children == 'boolean') {\r\n\t} else if (Array.isArray(children)) {\r\n\t\tchildren.some(child => {\r\n\t\t\ttoChildArray(child, out);\r\n\t\t});\r\n\t} else {\r\n\t\tout.push(children);\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nfunction placeChild(\r\n\tparentDom,\r\n\tchildVNode,\r\n\toldVNode,\r\n\toldChildren,\r\n\tnewDom,\r\n\toldDom\r\n) {\r\n\tlet nextDom;\r\n\tif (childVNode._nextDom !== undefined) {\r\n\t\t// Only Fragments or components that return Fragment like VNodes will\r\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\r\n\t\t// of last DOM child of this child VNode\r\n\t\tnextDom = childVNode._nextDom;\r\n\r\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\r\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\r\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\r\n\t\t// can clean up the property\r\n\t\tchildVNode._nextDom = undefined;\r\n\t} else if (\r\n\t\toldVNode == null ||\r\n\t\tnewDom != oldDom ||\r\n\t\tnewDom.parentNode == null\r\n\t) {\r\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\r\n\t\t\tparentDom.appendChild(newDom);\r\n\t\t\tnextDom = null;\r\n\t\t} else {\r\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\r\n\t\t\tfor (\r\n\t\t\t\tlet sibDom = oldDom, j = 0;\r\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\r\n\t\t\t\tj += 2\r\n\t\t\t) {\r\n\t\t\t\tif (sibDom == newDom) {\r\n\t\t\t\t\tbreak outer;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tparentDom.insertBefore(newDom, oldDom);\r\n\t\t\tnextDom = oldDom;\r\n\t\t}\r\n\t}\r\n\r\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\r\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\r\n\t// See more detail in create-element.js:createVNode\r\n\tif (nextDom !== undefined) {\r\n\t\toldDom = nextDom;\r\n\t} else {\r\n\t\toldDom = newDom.nextSibling;\r\n\t}\r\n\r\n\treturn oldDom;\r\n}\r\n", "import { IS_NON_DIMENSIONAL } from '../constants';\r\nimport options from '../options';\r\n\r\n/**\r\n * Diff the old and new properties of a VNode and apply changes to the DOM node\r\n * @param {import('../internal').PreactElement} dom The DOM node to apply\r\n * changes to\r\n * @param {object} newProps The new props\r\n * @param {object} oldProps The old props\r\n * @param {boolean} isSvg Whether or not this node is an SVG node\r\n * @param {boolean} hydrate Whether or not we are in hydration mode\r\n */\r\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\r\n\tlet i;\r\n\r\n\tfor (i in oldProps) {\r\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\r\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\r\n\t\t}\r\n\t}\r\n\r\n\tfor (i in newProps) {\r\n\t\tif (\r\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\r\n\t\t\ti !== 'children' &&\r\n\t\t\ti !== 'key' &&\r\n\t\t\ti !== 'value' &&\r\n\t\t\ti !== 'checked' &&\r\n\t\t\toldProps[i] !== newProps[i]\r\n\t\t) {\r\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction setStyle(style, key, value) {\r\n\tif (key[0] === '-') {\r\n\t\tstyle.setProperty(key, value);\r\n\t} else if (value == null) {\r\n\t\tstyle[key] = '';\r\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\r\n\t\tstyle[key] = value;\r\n\t} else {\r\n\t\tstyle[key] = value + 'px';\r\n\t}\r\n}\r\n\r\n/**\r\n * Set a property value on a DOM node\r\n * @param {import('../internal').PreactElement} dom The DOM node to modify\r\n * @param {string} name The name of the property to set\r\n * @param {*} value The value to set the property to\r\n * @param {*} oldValue The old value the property had\r\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\r\n */\r\nexport function setProperty(dom, name, value, oldValue, isSvg) {\r\n\tlet useCapture;\r\n\r\n\to: if (name === 'style') {\r\n\t\tif (typeof value == 'string') {\r\n\t\t\tdom.style.cssText = value;\r\n\t\t} else {\r\n\t\t\tif (typeof oldValue == 'string') {\r\n\t\t\t\tdom.style.cssText = oldValue = '';\r\n\t\t\t}\r\n\r\n\t\t\tif (oldValue) {\r\n\t\t\t\tfor (name in oldValue) {\r\n\t\t\t\t\tif (!(value && name in value)) {\r\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\tfor (name in value) {\r\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\r\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\r\n\telse if (name[0] === 'o' && name[1] === 'n') {\r\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\r\n\r\n\t\t// Infer correct casing for DOM built-in events:\r\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\r\n\t\telse name = name.slice(2);\r\n\r\n\t\tif (!dom._listeners) dom._listeners = {};\r\n\t\tdom._listeners[name + useCapture] = value;\r\n\r\n\t\tif (value) {\r\n\t\t\tif (!oldValue) {\r\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\r\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\r\n\t\t\tdom.removeEventListener(name, handler, useCapture);\r\n\t\t}\r\n\t} else if (name !== 'dangerouslySetInnerHTML') {\r\n\t\tif (isSvg) {\r\n\t\t\t// Normalize incorrect prop usage for SVG:\r\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\r\n\t\t\t// - className --> class\r\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\r\n\t\t} else if (\r\n\t\t\tname !== 'href' &&\r\n\t\t\tname !== 'list' &&\r\n\t\t\tname !== 'form' &&\r\n\t\t\t// Default value in browsers is `-1` and an empty string is\r\n\t\t\t// cast to `0` instead\r\n\t\t\tname !== 'tabIndex' &&\r\n\t\t\tname !== 'download' &&\r\n\t\t\tname in dom\r\n\t\t) {\r\n\t\t\ttry {\r\n\t\t\t\tdom[name] = value == null ? '' : value;\r\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\r\n\t\t\t\tbreak o;\r\n\t\t\t} catch (e) {}\r\n\t\t}\r\n\r\n\t\t// ARIA-attributes have a different notion of boolean values.\r\n\t\t// The value `false` is different from the attribute not\r\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\r\n\t\t// ARIA-attributes we could treat false as a removal, but the\r\n\t\t// amount of exceptions would cost us too many bytes. On top of\r\n\t\t// that other VDOM frameworks also always stringify `false`.\r\n\r\n\t\tif (typeof value === 'function') {\r\n\t\t\t// never serialize functions as attribute values\r\n\t\t} else if (\r\n\t\t\tvalue != null &&\r\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\r\n\t\t) {\r\n\t\t\tdom.setAttribute(name, value);\r\n\t\t} else {\r\n\t\t\tdom.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Proxy an event to hooked event handlers\r\n * @param {Event} e The event object from the browser\r\n * @private\r\n */\r\nfunction eventProxy(e) {\r\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\r\n}\r\n\r\nfunction eventProxyCapture(e) {\r\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\r\n}\r\n", "import { EMPTY_OBJ } from '../constants';\r\nimport { Component, getDomSibling } from '../component';\r\nimport { Fragment } from '../create-element';\r\nimport { diffChildren } from './children';\r\nimport { diffProps, setProperty } from './props';\r\nimport { assign, removeNode, slice } from '../util';\r\nimport options from '../options';\r\n\r\n/**\r\n * Diff two virtual nodes and apply proper changes to the DOM\r\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\r\n * @param {import('../internal').VNode} newVNode The new virtual node\r\n * @param {import('../internal').VNode} oldVNode The old virtual node\r\n * @param {object} globalContext The current context object. Modified by getChildContext\r\n * @param {boolean} isSvg Whether or not this element is an SVG node\r\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\r\n * @param {Array<import('../internal').Component>} commitQueue List of components\r\n * which have callbacks to invoke in commitRoot\r\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\r\n * element any new dom elements should be placed around. Likely `null` on first\r\n * render (except when hydrating). Can be a sibling DOM element when diffing\r\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\r\n * @param {boolean} [isHydrating] Whether or not we are in hydration\r\n */\r\nexport function diff(\r\n\tparentDom,\r\n\tnewVNode,\r\n\toldVNode,\r\n\tglobalContext,\r\n\tisSvg,\r\n\texcessDomChildren,\r\n\tcommitQueue,\r\n\toldDom,\r\n\tisHydrating\r\n) {\r\n\tlet tmp,\r\n\t\tnewType = newVNode.type;\r\n\r\n\t// When passing through createElement it assigns the object\r\n\t// constructor as undefined. This to prevent JSON-injection.\r\n\tif (newVNode.constructor !== undefined) return null;\r\n\r\n\t// If the previous diff bailed out, resume creating/hydrating.\r\n\tif (oldVNode._hydrating != null) {\r\n\t\tisHydrating = oldVNode._hydrating;\r\n\t\toldDom = newVNode._dom = oldVNode._dom;\r\n\t\t// if we resume, we want the tree to be \"unlocked\"\r\n\t\tnewVNode._hydrating = null;\r\n\t\texcessDomChildren = [oldDom];\r\n\t}\r\n\r\n\tif ((tmp = options._diff)) tmp(newVNode);\r\n\r\n\ttry {\r\n\t\touter: if (typeof newType == 'function') {\r\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\r\n\t\t\tlet newProps = newVNode.props;\r\n\r\n\t\t\t// Necessary for createContext api. Setting this property will pass\r\n\t\t\t// the context value as `this.context` just for this component.\r\n\t\t\ttmp = newType.contextType;\r\n\t\t\tlet provider = tmp && globalContext[tmp._id];\r\n\t\t\tlet componentContext = tmp\r\n\t\t\t\t? provider\r\n\t\t\t\t\t? provider.props.value\r\n\t\t\t\t\t: tmp._defaultValue\r\n\t\t\t\t: globalContext;\r\n\r\n\t\t\t// Get component and set it to `c`\r\n\t\t\tif (oldVNode._component) {\r\n\t\t\t\tc = newVNode._component = oldVNode._component;\r\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\r\n\t\t\t} else {\r\n\t\t\t\t// Instantiate the new component\r\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\r\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\r\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\r\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\r\n\t\t\t\t\tc.constructor = newType;\r\n\t\t\t\t\tc.render = doRender;\r\n\t\t\t\t}\r\n\t\t\t\tif (provider) provider.sub(c);\r\n\r\n\t\t\t\tc.props = newProps;\r\n\t\t\t\tif (!c.state) c.state = {};\r\n\t\t\t\tc.context = componentContext;\r\n\t\t\t\tc._globalContext = globalContext;\r\n\t\t\t\tisNew = c._dirty = true;\r\n\t\t\t\tc._renderCallbacks = [];\r\n\t\t\t}\r\n\r\n\t\t\t// Invoke getDerivedStateFromProps\r\n\t\t\tif (c._nextState == null) {\r\n\t\t\t\tc._nextState = c.state;\r\n\t\t\t}\r\n\t\t\tif (newType.getDerivedStateFromProps != null) {\r\n\t\t\t\tif (c._nextState == c.state) {\r\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tassign(\r\n\t\t\t\t\tc._nextState,\r\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\toldProps = c.props;\r\n\t\t\toldState = c.state;\r\n\r\n\t\t\t// Invoke pre-render lifecycle methods\r\n\t\t\tif (isNew) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\r\n\t\t\t\t\tc.componentWillMount != null\r\n\t\t\t\t) {\r\n\t\t\t\t\tc.componentWillMount();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c.componentDidMount != null) {\r\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (\r\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\r\n\t\t\t\t\tnewProps !== oldProps &&\r\n\t\t\t\t\tc.componentWillReceiveProps != null\r\n\t\t\t\t) {\r\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t(!c._force &&\r\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\r\n\t\t\t\t\t\tc.shouldComponentUpdate(\r\n\t\t\t\t\t\t\tnewProps,\r\n\t\t\t\t\t\t\tc._nextState,\r\n\t\t\t\t\t\t\tcomponentContext\r\n\t\t\t\t\t\t) === false) ||\r\n\t\t\t\t\tnewVNode._original === oldVNode._original\r\n\t\t\t\t) {\r\n\t\t\t\t\tc.props = newProps;\r\n\t\t\t\t\tc.state = c._nextState;\r\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\r\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\r\n\t\t\t\t\tc._vnode = newVNode;\r\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\r\n\t\t\t\t\tnewVNode._children = oldVNode._children;\r\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\r\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (c._renderCallbacks.length) {\r\n\t\t\t\t\t\tcommitQueue.push(c);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak outer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c.componentWillUpdate != null) {\r\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (c.componentDidUpdate != null) {\r\n\t\t\t\t\tc._renderCallbacks.push(() => {\r\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tc.context = componentContext;\r\n\t\t\tc.props = newProps;\r\n\t\t\tc.state = c._nextState;\r\n\r\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\r\n\r\n\t\t\tc._dirty = false;\r\n\t\t\tc._vnode = newVNode;\r\n\t\t\tc._parentDom = parentDom;\r\n\r\n\t\t\ttmp = c.render(c.props, c.state, c.context);\r\n\r\n\t\t\t// Handle setState called in render, see #2553\r\n\t\t\tc.state = c._nextState;\r\n\r\n\t\t\tif (c.getChildContext != null) {\r\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\r\n\t\t\t}\r\n\r\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\r\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\r\n\t\t\t}\r\n\r\n\t\t\tlet isTopLevelFragment =\r\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\r\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\r\n\r\n\t\t\tdiffChildren(\r\n\t\t\t\tparentDom,\r\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\r\n\t\t\t\tnewVNode,\r\n\t\t\t\toldVNode,\r\n\t\t\t\tglobalContext,\r\n\t\t\t\tisSvg,\r\n\t\t\t\texcessDomChildren,\r\n\t\t\t\tcommitQueue,\r\n\t\t\t\toldDom,\r\n\t\t\t\tisHydrating\r\n\t\t\t);\r\n\r\n\t\t\tc.base = newVNode._dom;\r\n\r\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\r\n\t\t\tnewVNode._hydrating = null;\r\n\r\n\t\t\tif (c._renderCallbacks.length) {\r\n\t\t\t\tcommitQueue.push(c);\r\n\t\t\t}\r\n\r\n\t\t\tif (clearProcessingException) {\r\n\t\t\t\tc._pendingError = c._processingException = null;\r\n\t\t\t}\r\n\r\n\t\t\tc._force = false;\r\n\t\t} else if (\r\n\t\t\texcessDomChildren == null &&\r\n\t\t\tnewVNode._original === oldVNode._original\r\n\t\t) {\r\n\t\t\tnewVNode._children = oldVNode._children;\r\n\t\t\tnewVNode._dom = oldVNode._dom;\r\n\t\t} else {\r\n\t\t\tnewVNode._dom = diffElementNodes(\r\n\t\t\t\toldVNode._dom,\r\n\t\t\t\tnewVNode,\r\n\t\t\t\toldVNode,\r\n\t\t\t\tglobalContext,\r\n\t\t\t\tisSvg,\r\n\t\t\t\texcessDomChildren,\r\n\t\t\t\tcommitQueue,\r\n\t\t\t\tisHydrating\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\r\n\t} catch (e) {\r\n\t\tnewVNode._original = null;\r\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\r\n\t\tif (isHydrating || excessDomChildren != null) {\r\n\t\t\tnewVNode._dom = oldDom;\r\n\t\t\tnewVNode._hydrating = !!isHydrating;\r\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\r\n\t\t\t// ^ could possibly be simplified to:\r\n\t\t\t// excessDomChildren.length = 0;\r\n\t\t}\r\n\t\toptions._catchError(e, newVNode, oldVNode);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {Array<import('../internal').Component>} commitQueue List of components\r\n * which have callbacks to invoke in commitRoot\r\n * @param {import('../internal').VNode} root\r\n */\r\nexport function commitRoot(commitQueue, root) {\r\n\tif (options._commit) options._commit(root, commitQueue);\r\n\r\n\tcommitQueue.some(c => {\r\n\t\ttry {\r\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\r\n\t\t\tcommitQueue = c._renderCallbacks;\r\n\t\t\tc._renderCallbacks = [];\r\n\t\t\tcommitQueue.some(cb => {\r\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\r\n\t\t\t\tcb.call(c);\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\toptions._catchError(e, c._vnode);\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Diff two virtual nodes representing DOM element\r\n * @param {import('../internal').PreactElement} dom The DOM element representing\r\n * the virtual nodes being diffed\r\n * @param {import('../internal').VNode} newVNode The new virtual node\r\n * @param {import('../internal').VNode} oldVNode The old virtual node\r\n * @param {object} globalContext The current context object\r\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\r\n * @param {*} excessDomChildren\r\n * @param {Array<import('../internal').Component>} commitQueue List of components\r\n * which have callbacks to invoke in commitRoot\r\n * @param {boolean} isHydrating Whether or not we are in hydration\r\n * @returns {import('../internal').PreactElement}\r\n */\r\nfunction diffElementNodes(\r\n\tdom,\r\n\tnewVNode,\r\n\toldVNode,\r\n\tglobalContext,\r\n\tisSvg,\r\n\texcessDomChildren,\r\n\tcommitQueue,\r\n\tisHydrating\r\n) {\r\n\tlet oldProps = oldVNode.props;\r\n\tlet newProps = newVNode.props;\r\n\tlet nodeType = newVNode.type;\r\n\tlet i = 0;\r\n\r\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\r\n\tif (nodeType === 'svg') isSvg = true;\r\n\r\n\tif (excessDomChildren != null) {\r\n\t\tfor (; i < excessDomChildren.length; i++) {\r\n\t\t\tconst child = excessDomChildren[i];\r\n\r\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\r\n\t\t\t// argument matches an element in excessDomChildren, remove it from\r\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\r\n\t\t\tif (\r\n\t\t\t\tchild &&\r\n\t\t\t\t'setAttribute' in child === !!nodeType &&\r\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\r\n\t\t\t) {\r\n\t\t\t\tdom = child;\r\n\t\t\t\texcessDomChildren[i] = null;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (dom == null) {\r\n\t\tif (nodeType === null) {\r\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\r\n\t\t\treturn document.createTextNode(newProps);\r\n\t\t}\r\n\r\n\t\tif (isSvg) {\r\n\t\t\tdom = document.createElementNS(\r\n\t\t\t\t'http://www.w3.org/2000/svg',\r\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\r\n\t\t\t\tnodeType\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tdom = document.createElement(\r\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\r\n\t\t\t\tnodeType,\r\n\t\t\t\tnewProps.is && newProps\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// we created a new parent, so none of the previously attached children can be reused:\r\n\t\texcessDomChildren = null;\r\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\r\n\t\tisHydrating = false;\r\n\t}\r\n\r\n\tif (nodeType === null) {\r\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\r\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\r\n\t\t\tdom.data = newProps;\r\n\t\t}\r\n\t} else {\r\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\r\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\r\n\r\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\r\n\r\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\r\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\r\n\r\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\r\n\t\t// @TODO we should warn in debug mode when props don't match here.\r\n\t\tif (!isHydrating) {\r\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\r\n\t\t\t// we should read the existing DOM attributes to diff them\r\n\t\t\tif (excessDomChildren != null) {\r\n\t\t\t\toldProps = {};\r\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\r\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (newHtml || oldHtml) {\r\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\r\n\t\t\t\tif (\r\n\t\t\t\t\t!newHtml ||\r\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\r\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\r\n\t\t\t\t) {\r\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\r\n\r\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\r\n\t\tif (newHtml) {\r\n\t\t\tnewVNode._children = [];\r\n\t\t} else {\r\n\t\t\ti = newVNode.props.children;\r\n\t\t\tdiffChildren(\r\n\t\t\t\tdom,\r\n\t\t\t\tArray.isArray(i) ? i : [i],\r\n\t\t\t\tnewVNode,\r\n\t\t\t\toldVNode,\r\n\t\t\t\tglobalContext,\r\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\r\n\t\t\t\texcessDomChildren,\r\n\t\t\t\tcommitQueue,\r\n\t\t\t\texcessDomChildren\r\n\t\t\t\t\t? excessDomChildren[0]\r\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\r\n\t\t\t\tisHydrating\r\n\t\t\t);\r\n\r\n\t\t\t// Remove children that are not part of any vnode.\r\n\t\t\tif (excessDomChildren != null) {\r\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\r\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// (as above, don't diff props during hydration)\r\n\t\tif (!isHydrating) {\r\n\t\t\tif (\r\n\t\t\t\t'value' in newProps &&\r\n\t\t\t\t(i = newProps.value) !== undefined &&\r\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\r\n\t\t\t\t// despite the attribute not being present. When the attribute\r\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\r\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\r\n\t\t\t\t(i !== oldProps.value ||\r\n\t\t\t\t\ti !== dom.value ||\r\n\t\t\t\t\t(nodeType === 'progress' && !i))\r\n\t\t\t) {\r\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t'checked' in newProps &&\r\n\t\t\t\t(i = newProps.checked) !== undefined &&\r\n\t\t\t\ti !== dom.checked\r\n\t\t\t) {\r\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn dom;\r\n}\r\n\r\n/**\r\n * Invoke or update a ref, depending on whether it is a function or object ref.\r\n * @param {object|function} ref\r\n * @param {any} value\r\n * @param {import('../internal').VNode} vnode\r\n */\r\nexport function applyRef(ref, value, vnode) {\r\n\ttry {\r\n\t\tif (typeof ref == 'function') ref(value);\r\n\t\telse ref.current = value;\r\n\t} catch (e) {\r\n\t\toptions._catchError(e, vnode);\r\n\t}\r\n}\r\n\r\n/**\r\n * Unmount a virtual node from the tree and apply DOM changes\r\n * @param {import('../internal').VNode} vnode The virtual node to unmount\r\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\r\n * initiated the unmount\r\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\r\n * current element is already detached from the DOM.\r\n */\r\nexport function unmount(vnode, parentVNode, skipRemove) {\r\n\tlet r;\r\n\tif (options.unmount) options.unmount(vnode);\r\n\r\n\tif ((r = vnode.ref)) {\r\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\r\n\t}\r\n\r\n\tif ((r = vnode._component) != null) {\r\n\t\tif (r.componentWillUnmount) {\r\n\t\t\ttry {\r\n\t\t\t\tr.componentWillUnmount();\r\n\t\t\t} catch (e) {\r\n\t\t\t\toptions._catchError(e, parentVNode);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tr.base = r._parentDom = null;\r\n\t}\r\n\r\n\tif ((r = vnode._children)) {\r\n\t\tfor (let i = 0; i < r.length; i++) {\r\n\t\t\tif (r[i]) {\r\n\t\t\t\tunmount(r[i], parentVNode, typeof vnode.type != 'function');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (!skipRemove && vnode._dom != null) removeNode(vnode._dom);\r\n\r\n\t// Must be set to `undefined` to properly clean up `_nextDom`\r\n\t// for which `null` is a valid value. See comment in `create-element.js`\r\n\tvnode._dom = vnode._nextDom = undefined;\r\n}\r\n\r\n/** The `.render()` method for a PFC backing instance. */\r\nfunction doRender(props, state, context) {\r\n\treturn this.constructor(props, context);\r\n}\r\n", "import { EMPTY_OBJ } from './constants';\r\nimport { commitRoot, diff } from './diff/index';\r\nimport { createElement, Fragment } from './create-element';\r\nimport options from './options';\r\nimport { slice } from './util';\r\n\r\n/**\r\n * Render a Preact virtual node into a DOM element\r\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\r\n * @param {import('./internal').PreactElement} parentDom The DOM element to\r\n * render into\r\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\r\n * existing DOM tree rooted at `replaceNode`\r\n */\r\nexport function render(vnode, parentDom, replaceNode) {\r\n\tif (options._root) options._root(vnode, parentDom);\r\n\r\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\r\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\r\n\t// element..\r\n\tlet isHydrating = typeof replaceNode === 'function';\r\n\r\n\t// To be able to support calling `render()` multiple times on the same\r\n\t// DOM node, we need to obtain a reference to the previous tree. We do\r\n\t// this by assigning a new `_children` property to DOM nodes which points\r\n\t// to the last rendered tree. By default this property is not present, which\r\n\t// means that we are mounting a new tree for the first time.\r\n\tlet oldVNode = isHydrating\r\n\t\t? null\r\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\r\n\r\n\tvnode = (\r\n\t\t(!isHydrating && replaceNode) ||\r\n\t\tparentDom\r\n\t)._children = createElement(Fragment, null, [vnode]);\r\n\r\n\t// List of effects that need to be called after diffing.\r\n\tlet commitQueue = [];\r\n\tdiff(\r\n\t\tparentDom,\r\n\t\t// Determine the new vnode tree and store it on the DOM element on\r\n\t\t// our custom `_children` property.\r\n\t\tvnode,\r\n\t\toldVNode || EMPTY_OBJ,\r\n\t\tEMPTY_OBJ,\r\n\t\tparentDom.ownerSVGElement !== undefined,\r\n\t\t!isHydrating && replaceNode\r\n\t\t\t? [replaceNode]\r\n\t\t\t: oldVNode\r\n\t\t\t? null\r\n\t\t\t: parentDom.firstChild\r\n\t\t\t? slice.call(parentDom.childNodes)\r\n\t\t\t: null,\r\n\t\tcommitQueue,\r\n\t\t!isHydrating && replaceNode\r\n\t\t\t? replaceNode\r\n\t\t\t: oldVNode\r\n\t\t\t? oldVNode._dom\r\n\t\t\t: parentDom.firstChild,\r\n\t\tisHydrating\r\n\t);\r\n\r\n\t// Flush all queued effects\r\n\tcommitRoot(commitQueue, vnode);\r\n}\r\n\r\n/**\r\n * Update an existing DOM element with data from a Preact virtual node\r\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\r\n * @param {import('./internal').PreactElement} parentDom The DOM element to\r\n * update\r\n */\r\nexport function hydrate(vnode, parentDom) {\r\n\trender(vnode, parentDom, hydrate);\r\n}\r\n", "import { assign, slice } from './util';\r\nimport { createVNode } from './create-element';\r\n\r\n/**\r\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\r\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\r\n * @param {object} props Attributes/props to add when cloning\r\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\r\n * @returns {import('./internal').VNode}\r\n */\r\nexport function cloneElement(vnode, props, children) {\r\n\tlet normalizedProps = assign({}, vnode.props),\r\n\t\tkey,\r\n\t\tref,\r\n\t\ti;\r\n\tfor (i in props) {\r\n\t\tif (i == 'key') key = props[i];\r\n\t\telse if (i == 'ref') ref = props[i];\r\n\t\telse normalizedProps[i] = props[i];\r\n\t}\r\n\r\n\tif (arguments.length > 2) {\r\n\t\tnormalizedProps.children =\r\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\r\n\t}\r\n\r\n\treturn createVNode(\r\n\t\tvnode.type,\r\n\t\tnormalizedProps,\r\n\t\tkey || vnode.key,\r\n\t\tref || vnode.ref,\r\n\t\tnull\r\n\t);\r\n}\r\n", "/**\r\n * Find the closest error boundary to a thrown error and call it\r\n * @param {object} error The thrown value\r\n * @param {import('../internal').VNode} vnode The vnode that threw\r\n * the error that was caught (except for unmounting when this parameter\r\n * is the highest parent that was being unmounted)\r\n */\r\nexport function _catchError(error, vnode) {\r\n\t/** @type {import('../internal').Component} */\r\n\tlet component, ctor, handled;\r\n\r\n\tfor (; (vnode = vnode._parent); ) {\r\n\t\tif ((component = vnode._component) && !component._processingException) {\r\n\t\t\ttry {\r\n\t\t\t\tctor = component.constructor;\r\n\r\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\r\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\r\n\t\t\t\t\thandled = component._dirty;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (component.componentDidCatch != null) {\r\n\t\t\t\t\tcomponent.componentDidCatch(error);\r\n\t\t\t\t\thandled = component._dirty;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\r\n\t\t\t\tif (handled) {\r\n\t\t\t\t\treturn (component._pendingError = component);\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\terror = e;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthrow error;\r\n}\r\n", "import { h, Fragment } from \"preact\";\n\nexport { h, Fragment };", "/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, \u221E]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n", "/*\r\nDesigned by simonlc\r\nOverhauled by farter\r\nEnhanced by Dr Ocelot\r\nRemade by MasterOfBob777\r\n*/\r\nimport { h, render } from \"preact\";\r\nimport { data as initMenuData , main as initMenu  } from \"./display/menu\";\r\nimport { resize } from \"./display/size\";\r\nimport { $ } from \"./utils/utils\";\r\nimport MainComponent from \"./components/main\";\r\n\r\n// boom.\r\n/*\r\nlet focused = true;\r\n\r\nwindow.addEventListener(\"focus\", () => {\r\n\ttry {\r\n\t\tfocused = true;\r\n\t\tif (Mutable.alarm) {\r\n\t\t\tsound.playSFX(\"alarm\");\r\n\t\t}\r\n\t\tsound.unmutebgm();\r\n\t} catch (error) {}\r\n});\r\n\r\nwindow.addEventListener(\"blur\", () => {\r\n\ttry {\r\n\t\tfocused = false;\r\n\t\tsound.stopSFX(\"alarm\");\r\n\t\tsound.mutebgm();\r\n\t} catch (error) {}\r\n});\r\n*/\r\ninitMenuData()\r\n\r\nrender(h(MainComponent, {}), $(\"content\"));\r\n\r\naddEventListener(\"resize\", resize, false);\r\naddEventListener(\"load\", resize, false);\r\n\r\ninitMenu();\r\n", "import { Game } from \"../game\";\r\nimport { SettingMap, settings } from \"../settings\";\r\nimport { Elements, setBinds, version } from \"../utils/data\";\r\nimport { $setText, $$ } from \"../utils/utils\";\r\nimport { resize } from \"./size\";\r\nimport { sound } from \"./sound/sound\";\r\n\r\nlet setLoop;\r\nlet arrowReleased = true;\r\nlet arrowDelay = 0;\r\n\r\nexport function resetGameSettings() {\r\n\tGame.settings = Game.defaultGameSettings;\r\n\tlocalStorage.setItem(\"Game.settings\", JSON.stringify(Game.settings));\r\n}\r\n\r\nexport function changeGameSetting(game: string, key: string, val: number) {\r\n\tGame.settings[game][key].val = val;\r\n\tlocalStorage.setItem(\"Game.settings\", JSON.stringify(Game.settings));\r\n}\r\n\r\n/**\r\n * Show and hide menus.\r\n */\r\nlet menuStack = [];\r\n\r\nexport function menu(menuIndex?, stackOper?) {\r\n\tconst menus = $$(\".menu\");\r\n\r\n\tsound.init();\r\n\tlet current;\r\n\tfor (let i = 0, len = menus.length; i < len; i++) {\r\n\t\tif (menus[i].classList.contains(\"on\")) {\r\n\t\t\tcurrent = i;\r\n\t\t}\r\n\t\tmenus[i].classList.remove(\"on\");\r\n\t}\r\n\r\n\tif (menuIndex !== undefined) {\r\n\t\tmenus[menuIndex].classList.add(\"on\");\r\n\t}\r\n\r\n\tif (stackOper === 1) {\r\n\t\tif (current !== undefined) {\r\n\t\t\tmenuStack.push(current);\r\n\t\t}\r\n\t} else if (stackOper === -1) {\r\n\t\tcurrent = menuStack.pop();\r\n\t\tif (current !== undefined && menuIndex === undefined) {\r\n\t\t\tmenus[current].classList.add(\"on\");\r\n\t\t}\r\n\t} else if (stackOper !== 0) {\r\n\t\tmenuStack = [];\r\n\t}\r\n}\r\n\r\nlet s;\r\nlet settingsArrow;\r\n\r\n/**\r\n * Settings Menu\r\n */\r\nexport function settingsLoop() {\r\n\tif (arrowReleased || arrowDelay >= 6) {\r\n\t\tif (settingsArrow) {\r\n\t\t\tsettings[s] =\r\n\t\t\t\tsettings[s] === 0 ? settings[s].length - 1 : settings[s] - 1;\r\n\t\t} else {\r\n\t\t\tsettings[s] =\r\n\t\t\t\tsettings[s] === settings[s].length - 1 ? 0 : settings[s] + 1;\r\n\t\t}\r\n\t\tarrowReleased = false;\r\n\t} else {\r\n\t\tarrowDelay++;\r\n\t}\r\n\tsetLoop = setTimeout(settingsLoop, 50);\r\n}\r\n// TODO DRY this.\r\nexport function arrowRelease(e) {\r\n\tresize();\r\n\tarrowReleased = true;\r\n\tarrowDelay = 0;\r\n\tclearTimeout(setLoop);\r\n\tthis.onmouseup = undefined;\r\n\tthis.onmouseout = undefined;\r\n\tthis.ontouchend = undefined;\r\n\tthis.ontouchcancel = undefined;\r\n\tif (e && e.preventDefault) {\r\n\t\te.preventDefault();\r\n\t} //avoid selection by touch\r\n}\r\n\r\nexport function left(e) {\r\n\tsettingsArrow = 1;\r\n\ts = this.parentNode.id;\r\n\tthis.onmouseup = arrowRelease;\r\n\tthis.onmouseout = arrowRelease;\r\n\tthis.ontouchend = arrowRelease;\r\n\tthis.ontouchcancel = arrowRelease;\r\n\tif (e && e.preventDefault) {\r\n\t\te.preventDefault();\r\n\t} //avoid selection by touch\r\n\tsettingsLoop();\r\n}\r\n\r\nexport function right(e) {\r\n\tsettingsArrow = 0;\r\n\ts = this.parentNode.id;\r\n\tthis.onmouseup = arrowRelease;\r\n\tthis.onmouseout = arrowRelease;\r\n\tthis.ontouchend = arrowRelease;\r\n\tthis.ontouchcancel = arrowRelease;\r\n\tif (e && e.preventDefault) {\r\n\t\te.preventDefault();\r\n\t} //avoid selection by touch\r\n\tsettingsLoop();\r\n}\r\n\r\nfunction parseVersion(v) {\r\n\treturn v ? v.split(\".\").map(Number) : [0, 0, 0];\r\n}\r\n\r\nfunction differentVersion(v1, v2) {\r\n\tconst v1p = parseVersion(v1);\r\n\tconst v2p = parseVersion(v2);\r\n\r\n\treturn v1p[0] !== v2p[0] || v1p[1] !== v2p[1];\r\n}\r\n\r\nexport function data() {\r\n\tif (differentVersion(localStorage.getItem(\"version\"), version)) {\r\n\t\tlocalStorage.removeItem(\"settings\");\r\n\t\tlocalStorage.removeItem(\"Game.settings\");\r\n\t\tlocalStorage.removeItem(\"binds\");\r\n\t\tlocalStorage.setItem(\"version\", version);\r\n\t\tresetGameSettings();\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tconst storedSettings = localStorage.getItem(\"settings\");\r\n\tif (storedSettings) {\r\n\t\t// console.log(\"not reset\")\r\n\t\tconst parsed = JSON.parse(storedSettings);\r\n\t\tfor (const setting in parsed) {\r\n\t\t\tsettings[setting] = parsed[setting];\r\n\t\t}\r\n\t}\r\n\r\n\tconst bindData = localStorage.getItem(\"binds\");\r\n\tif (bindData) {\r\n\t\tsetBinds(JSON.parse(bindData));\r\n\t}\r\n}\r\n\r\nexport function main() {\r\n\tfor (const s in settings) {\r\n\t\tconst setting = settings.getRaw(s as keyof SettingMap);\r\n\r\n\t\tconst div = document.createElement(\"div\");\r\n\t\tconst sname = document.createElement(\"b\");\r\n\t\tconst iLeft = document.createElement(\"i\");\r\n\t\tconst span = document.createElement(\"span\");\r\n\t\tconst iRight = document.createElement(\"i\");\r\n\r\n\t\tdiv.id = s;\r\n\t\t$setText(sname, setting.displayName());\r\n\t\t$setText(span, setting.value);\r\n\t\tiLeft.className = \"material-icons left\";\r\n\t\tiRight.className = \"material-icons right\";\r\n\t\t$setText(iLeft, \"\\uE314\");\r\n\t\t$setText(iRight, \"\\uE315\");\r\n\t\tiLeft.onmousedown = left;\r\n\t\tiLeft.ontouchstart = left;\r\n\t\tiRight.onmousedown = right;\r\n\t\tiRight.ontouchstart = right;\r\n\r\n\t\tElements.set.appendChild(div);\r\n\t\tdiv.appendChild(sname);\r\n\t\tdiv.appendChild(iLeft);\r\n\t\tdiv.appendChild(span);\r\n\t\tdiv.appendChild(iRight);\r\n\t}\r\n}\r\n", "import { GameState, GameType as GameTypeEnum, Gravity } from \"./utils/enums\";\nimport { GameType } from \"./gametypes/base\";\nimport { menu } from \"./display/menu\";\nimport { $, $setText, clear } from \"./utils/utils\";\nimport { run as runReplay } from \"./leaderboard/replays\";\nimport { rng } from \"./utils/randomizer\";\nimport {\n\tflags,\n\tgravityUnit,\n\tsprintRanks,\n\tMutable,\n\tElements,\n} from \"./utils/data\";\nimport { settings } from \"./settings\";\nimport { sound } from \"./display/sound/sound\";\nimport { preview } from \"./display/tetrion/preview\";\nimport { stack } from \"./display/tetrion/stack\";\nimport { resize } from \"./display/size\";\nimport { piece, resetPiece } from \"./display/tetrion/piece\";\nimport { hold } from \"./logic/hold\";\nimport { makeSprite } from \"./logic/view\";\nimport { t } from \"./utils/lang\";\nimport { updateMatrixPosition } from \"./display/tetrion/matrix\";\nimport { statistics, statisticsStack } from \"./display/tetrion/stats\";\nimport { clearTetrisMessage } from \"./display/tetrion/messages\";\nimport {\n\tscoreNesRefresh,\n\ttetRateNesRefresh,\n\tupdateScoreTime,\n} from \"./random_stuff\";\nimport { Sprint } from \"./gametypes/sprint\";\nimport { Dig } from \"./gametypes/dig\";\nimport { Marathon } from \"./gametypes/marathon\";\nimport { Master } from \"./gametypes/master\";\nimport { Retro } from \"./gametypes/retro\";\nimport { ScoreAttack } from \"./gametypes/scoreattack\";\nimport { Grades } from \"./gametypes/grades\";\nimport { Survival } from \"./gametypes/survival\";\n\n// TODO: Check all settings and make them work better with the new settings system.\n\nexport class Game {\n\tstatic type: GameTypeEnum = 0;\n\n\tstatic params: {\n\t\t[x: string]: any;\n\t\tproMode?: any;\n\t\ttournament?: boolean;\n\t\tallowHardDrop?: any;\n\t\tclassicRule?: any;\n\t\tdelayStrictness?: any;\n\t\tentryDelay?: any;\n\t\tnoGravity?: any;\n\t\tpieceSet?: any;\n\t\tbType?: any;\n\t\tstartingLevel?: any;\n\t\tbackFire?: any;\n\t\trecordPB?: any;\n\t\tmarathonLimit?: any;\n\t\tlevelCap?: any;\n\t\tinvisibleMarathon?: any;\n\t\tretroSkin?: any;\n\t\tdigraceType?: any;\n\t\tdigOffset?: any;\n\t} = {};\n\n\tstatic state: GameState = GameState.NotPlayed;\n\n\t/**\n\t * Pausing variables\n\t */\n\tstatic startPauseTime;\n\n\tstatic pauseTime;\n\n\tstatic paused = false;\n\n\t/**\n\t * Resets all the settings and starts the game.\n\t */\n\tstatic init(gt: GameTypeEnum | \"replay\", params?) {\n\n\t\tif (gt !== \"replay\") {\n\t\t\tGame.types[Game.type].done();\n\t\t}\n\n\t\ttry {\n\t\t\tsound.killbgm();\n\t\t} catch (e) {}\n\t\tconst linevectorEle = $<HTMLImageElement>(\"linevector\");\n\t\tconst levelEle = $(\"level\");\n\n\t\t$(\"ivalue\").style.color = \"#ffffff\";\n\t\tlinevectorEle.classList.remove(\"drought-flash\");\n\t\tlinevectorEle.src = \"./assets/linevector.svg\";\n\t\tlevelEle.classList.remove(\"level-flash\");\n\n\t\tMutable.leveltgm = 0;\n\t\tMutable.leveltgmvisible = 0;\n\t\tMutable.scoreNes = 0;\n\t\tMutable.newScore = 0n;\n\t\tMutable.tetRateNes = 0;\n\t\tMutable.tetNes = 0;\n\t\tMutable.nontetNes = 0;\n\t\tscoreNesRefresh();\n\t\ttetRateNesRefresh();\n\t\tMutable.lineDrought = 0;\n\t\tMutable.lineAmount = 0;\n\t\tmakeSprite();\n\n\t\tsound.init();\n\n\t\t//Reset\n\t\tMutable.column = 0;\n\t\tMutable.keysDown = 0;\n\t\tMutable.lastKeys = 0;\n\t\tMutable.released = 255;\n\t\t// TODO: check if this is needed\n\t\tresetPiece();\n\t\tpreview.reset();\n\t\t//preview.draw();\n\t\tMutable.frame = 0;\n\t\tMutable.frameSkipped = 0;\n\t\tMutable.lastPos = \"reset\";\n\t\tstack[\"new\"](10, 20, 4);\n\t\tMutable.toGreyRow = stack.height - 1;\n\t\thold.piece = undefined;\n\t\tif (settings.Gravity === Gravity.Auto) Mutable.gravity = gravityUnit;\n\t\tMutable.b2b = 0;\n\t\tMutable.combo = 0;\n\t\tMutable.allclear = 0;\n\t\tMutable.statsFinesse = 0;\n\t\tMutable.lines = 0;\n\t\tMutable.score = 0n;\n\t\tMutable.piecesSet = 0;\n\n\t\tif (Game.type == GameTypeEnum.Retro) {\n\t\t\tMutable.level = Game.params.startingLevel;\n\t\t} else {\n\t\t\tMutable.level = 0;\n\t\t}\n\n\t\tMutable.digLines = [];\n\t\tif (Game.params.noGravity == true) {\n\t\t\tsettings.Gravity = 1;\n\t\t}\n\n\t\tclear(Elements.stackCtx);\n\t\tclear(Elements.activeCtx);\n\t\tclear(Elements.holdCtx);\n\n\t\tif (gt === \"replay\") {\n\t\t\trunReplay(params);\n\t\t} else {\n\t\t\tMutable.watchingReplay = false;\n\t\t\tGame.type = gt;\n\t\t\tGame.params = params || {};\n\t\t\t//setup game parameters\n\t\t\tGame.types[Game.type].init();\n\n\t\t\tconst seed = ~~(Math.random() * 2147483645) + 1;\n\t\t\trng.seed = seed;\n\n\t\t\tMutable.replay = {};\n\t\t\tMutable.replay.keys = {};\n\t\t\t// TODO Make new seed and rng method.\n\t\t\tMutable.replay.seed = seed;\n\t\t\tMutable.replay.type = Game.type;\n\t\t\tMutable.replay.params = Game.params;\n\t\t\tMutable.replay.settings = settings;\n\t\t}\n\n\t\tif (Game.type === 7) {\n\t\t\tsound.cutsidebgm();\n\t\t\tsound.loadbgm(\"survival\");\n\t\t\tsound.loadsidebgm(\"survivaldire\");\n\t\t}\n\n\t\tif (Game.type === undefined) {\n\t\t\tGame.type = 0;\n\t\t\tsound.loadbgm(\"sprint\");\n\t\t} //sometimes happens.....\n\n\t\tif (\n\t\t\tGame.type !== GameTypeEnum.Sprint &&\n\t\t\tGame.type !== GameTypeEnum.ScoreAttack &&\n\t\t\tGame.type !== GameTypeEnum.Retro\n\t\t) {\n\t\t\tif (Game.params.bType == true) {\n\t\t\t\tMutable.lineLimit = 25;\n\t\t\t} else {\n\t\t\t\tMutable.lineLimit = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (Game.params.tournament === true) {\n\t\t\t$(\"b\").classList.add(\"tournament\");\n\t\t} else {\n\t\t\t$(\"b\").classList.remove(\"tournament\");\n\t\t}\n\n\t\t//html5 mobile device sound\n\n\t\tmenu();\n\n\t\t// Only start a loop if one is not running already.\n\t\t// don't keep looping when not played\n\t\t// console.log(paused,Game.state);\n\t\tif (Game.paused || Game.state === GameState.NotPlayed) {\n\t\t\t// console.log(\"start inloop\",inloop);\n\t\t\tGame.inloop = true;\n\t\t\twindow.requestAnimationFrame(() => Game.gameLoop());\n\t\t}\n\t\tGame.startTime = Date.now();\n\t\tGame.startPauseTime = 0;\n\t\tGame.pauseTime = 0;\n\t\tMutable.scoreTime = 0;\n\t\tGame.paused = false;\n\t\tstatisticsStack();\n\t\tpreview.draw();\n\t\tGame.state = GameState.Countdown;\n\n\t\tresize();\n\t}\n\n\tstatic types: { [key: number]: GameType } = {};\n\n\tstatic addGameType(num: GameTypeEnum, type: GameType) {\n\t\tGame.types[num] = type;\n\t}\n\n\tstatic inloop = false;\n\n\tstatic pause() {\n\t\tif (\n\t\t\tGame.state === GameState.Normal ||\n\t\t\tGame.state === GameState.Paused\n\t\t) {\n\t\t\tGame.paused = true;\n\t\t\tGame.startPauseTime = Date.now();\n\t\t\t$setText(Elements.msg, \"Paused\");\n\t\t\tmenu(4);\n\t\t}\n\t}\n\n\tstatic unpause() {\n\t\tGame.paused = false;\n\t\tGame.pauseTime += Date.now() - Game.startPauseTime;\n\t\t$setText(Elements.msg, \"\");\n\t\tmenu();\n\t\t// console.log(\"start inloop\", inloop);\n\t\tGame.inloop = true;\n\t\twindow.requestAnimationFrame(() => Game.gameLoop());\n\t}\n\n\tstatic defaultGameSettings = {\n\t\tmarathon: {\n\t\t\tlimit: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 3,\n\t\t\t},\n\t\t\tdelay: {\n\t\t\t\tval: 1,\n\t\t\t\tmax: 2,\n\t\t\t},\n\t\t\tnograv: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t\tinvisible: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t\tcap: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t},\n\t\tsprint: {\n\t\t\tlimit: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 2,\n\t\t\t},\n\t\t\tpiece: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 2,\n\t\t\t},\n\t\t\tbackfire: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 3,\n\t\t\t},\n\t\t},\n\t\tdig: {\n\t\t\tchecker: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t\tzen: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t},\n\t\tsurvival: {\n\t\t\tzen: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t\tslevel: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 4,\n\t\t\t},\n\t\t},\n\t\tmaster: {\n\t\t\tlock: {\n\t\t\t\tval: 1,\n\t\t\t\tmax: 2,\n\t\t\t},\n\t\t},\n\t\tretro: {\n\t\t\ttype: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t\tskin: {\n\t\t\t\tval: 1,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t\tdrop: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t\tlevel: {\n\t\t\t\tval: 0,\n\t\t\t\tmax: 19,\n\t\t\t},\n\t\t\tflash: {\n\t\t\t\tval: 1,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t},\n\t\tgrades: {\n\t\t\trule: {\n\t\t\t\tval: 1,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t},\n\t};\n\n\tstatic settings = Game.defaultGameSettings;\n\n\tstatic startTime;\n\n\tstatic mainLoop() {\n\t\t// for breaking\n\t\tif (\n\t\t\t!(Mutable.lastKeys & flags.holdPiece) &&\n\t\t\tflags.holdPiece & Mutable.keysDown\n\t\t) {\n\t\t\tpiece.hold(); // may cause death\n\t\t}\n\t\tif (Game.state === GameState.Loss) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tflags.rotLeft & Mutable.keysDown &&\n\t\t\t!(Mutable.lastKeys & flags.rotLeft)\n\t\t) {\n\t\t\tpiece.rotate(-1);\n\t\t\tpiece.finesse++;\n\t\t} else if (\n\t\t\tflags.rotRight & Mutable.keysDown &&\n\t\t\t!(Mutable.lastKeys & flags.rotRight)\n\t\t) {\n\t\t\tpiece.rotate(1);\n\t\t\tpiece.finesse++;\n\t\t} else if (\n\t\t\tflags.rot180 & Mutable.keysDown &&\n\t\t\t!(Mutable.lastKeys & flags.rot180)\n\t\t) {\n\t\t\t//if (Game.type !== 8 || true) {\n\t\t\tpiece.rotate(2);\n\t\t\tpiece.finesse++;\n\t\t\t//}\n\t\t}\n\n\t\tpiece.checkShift();\n\n\t\tif (flags.moveDown & Mutable.keysDown) {\n\t\t\tpiece.shiftDown();\n\t\t\t//piece.finesse++;\n\t\t}\n\t\tif (\n\t\t\t!(Mutable.lastKeys & flags.hardDrop) &&\n\t\t\tflags.hardDrop & Mutable.keysDown\n\t\t) {\n\t\t\tMutable.frameLastHarddropDown = Mutable.frame;\n\t\t\tpiece.hardDrop();\n\t\t}\n\n\t\tpiece.update(); // may turn to locked, even lock out death.\n\n\t\tGame.types[Game.type].update();\n\t}\n\n\t/**\n\t * Runs every frame.\n\t */\n\tstatic update() {\n\t\t//TODO Das preservation broken.\n\t\tif (Mutable.lastKeys !== Mutable.keysDown && !Mutable.watchingReplay) {\n\t\t\tMutable.replay.keys[Mutable.frame] = Mutable.keysDown;\n\t\t} else if (Mutable.frame in Mutable.replay.keys) {\n\t\t\tMutable.keysDown = Mutable.replay.keys[Mutable.frame];\n\t\t}\n\n\t\t/* \n\t\tif (piece.dead) {\n\t\t\tpiece.new(preview.next());\n\t\t}\n\t\t*/\n\n\t\tGame.mainLoop();\n\n\t\tupdateScoreTime();\n\n\t\tif (Mutable.lastKeys !== Mutable.keysDown) {\n\t\t\tMutable.lastKeys = Mutable.keysDown;\n\t\t}\n\t}\n\n\tstatic gameLoop() {\n\t\t//if (Mutable.frame % 60 == 0) console.log(\"running\");\n\t\tconst fps = 60;\n\t\tupdateMatrixPosition();\n\t\tif (Mutable.lockflash > 0) {\n\t\t\tif (piece.tetro != undefined) {\n\t\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\t\tif (Mutable.lockflashTetro[i][j] > 0) {\n\t\t\t\t\t\t\tElements.stackCtx.fillStyle = \"#ffffff\";\n\t\t\t\t\t\t\tElements.stackCtx.fillRect(\n\t\t\t\t\t\t\t\t(Mutable.lockflashX + i) * Mutable.cellSize,\n\t\t\t\t\t\t\t\t(Math.floor(Mutable.lockflashY + j) - 4) *\n\t\t\t\t\t\t\t\t\tMutable.cellSize,\n\t\t\t\t\t\t\t\tMutable.cellSize,\n\t\t\t\t\t\t\t\tMutable.cellSize\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tMutable.lockflash--;\n\t\t} else if (Mutable.lockflashOn) {\n\t\t\tstack.draw();\n\n\t\t\tMutable.lockflash = 0;\n\t\t\tMutable.lockflashOn = false;\n\t\t}\n\t\tif (\n\t\t\t(Game.state !== 0 && Game.state !== 4 && Game.state !== 2) ||\n\t\t\tMutable.killAllbgm == true\n\t\t) {\n\t\t\tsound.killbgm();\n\t\t\tMutable.alarm = false;\n\t\t\tsound.stopSFX(\"alarm\");\n\t\t\t$(\"bgStack\").classList.remove(\"alarm\");\n\t\t}\n\t\tconst timeEle = $(\"time\");\n\t\tif (Game.type === GameTypeEnum.Sprint) {\n\t\t\tconst sprintPB = parseFloat(localStorage.getItem(\"sprint40pb\"));\n\t\t\tif (Mutable.scoreTime >= sprintPB + 100) {\n\t\t\t\tElements.timeCtx.fillStyle = \"#f00\";\n\t\t\t\ttimeEle.classList.add(\"drought-flash\");\n\n\t\t\t\tif (settings.ResetPB) {\n\t\t\t\t\tGame.init(Game.type, Game.params);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tElements.timeCtx.fillStyle = \"#fff\";\n\t\t\t\ttimeEle.classList.remove(\"drought-flash\");\n\t\t\t}\n\t\t} else {\n\t\t\tElements.timeCtx.fillStyle = \"#fff\";\n\t\t\ttimeEle.classList.remove(\"drought-flash\");\n\t\t}\n\n\t\tif (!Game.paused && Game.state !== 3) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/unbound-method\n\t\t\twindow.requestAnimationFrame(Game.gameLoop);\n\n\t\t\tconst repeat =\n\t\t\t\t~~(\n\t\t\t\t\t((Date.now() - Game.startTime - Game.pauseTime) / 1000) *\n\t\t\t\t\tfps\n\t\t\t\t) - Mutable.frame;\n\t\t\tif (repeat > 1) {\n\t\t\t\tMutable.frameSkipped += repeat - 1;\n\t\t\t} else if (repeat <= 0) {\n\t\t\t\tMutable.frameSkipped += repeat - 1;\n\t\t\t}\n\n\t\t\tfor (let repf = 0; repf < repeat; repf++) {\n\t\t\t\t//TODO check to see how pause works in replays.\n\n\t\t\t\tif (Game.state === GameState.Normal) {\n\t\t\t\t\t// Playing\n\n\t\t\t\t\tGame.update();\n\t\t\t\t} else if (\n\t\t\t\t\tGame.state === GameState.Countdown ||\n\t\t\t\t\tGame.state === GameState.Paused\n\t\t\t\t) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tMutable.lastKeys !== Mutable.keysDown &&\n\t\t\t\t\t\t!Mutable.watchingReplay\n\t\t\t\t\t) {\n\t\t\t\t\t\tMutable.replay.keys[Mutable.frame] = Mutable.keysDown;\n\t\t\t\t\t} else if (Mutable.frame in Mutable.replay.keys) {\n\t\t\t\t\t\tMutable.keysDown = Mutable.replay.keys[Mutable.frame];\n\t\t\t\t\t}\n\t\t\t\t\t// DAS Preload\n\t\t\t\t\tif (Mutable.keysDown & flags.moveLeft) {\n\t\t\t\t\t\t// if (Game.params.classicTuning !== true) {\n\t\t\t\t\t\tpiece.shiftDelay = settings.DAS;\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tpiece.shiftReleased = false;\n\t\t\t\t\t\tpiece.shiftDir = -1;\n\t\t\t\t\t} else if (Mutable.keysDown & flags.moveRight) {\n\t\t\t\t\t\t// if (Game.params.classicTuning !== true) {\n\t\t\t\t\t\tpiece.shiftDelay = settings.DAS;\n\t\t\t\t\t\t// }\n\t\t\t\t\t\tpiece.shiftReleased = false;\n\t\t\t\t\t\tpiece.shiftDir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpiece.shiftDelay = 0;\n\t\t\t\t\t\tpiece.shiftReleased = true;\n\t\t\t\t\t\tpiece.shiftDir = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (settings.IRSMode != 0) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tflags.rotLeft & Mutable.keysDown &&\n\t\t\t\t\t\t\t!(Mutable.lastKeys & flags.rotLeft)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst amt = 3;\n\t\t\t\t\t\t\tif (settings.IRSMode == 3) {\n\t\t\t\t\t\t\t\tpiece.irsDir =\n\t\t\t\t\t\t\t\t\t((piece.irsDir + 1 + amt) % 4) - 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpiece.irsDir = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (settings.InitialVis) {\n\t\t\t\t\t\t\t\tsound.playSFX(\"rotate\");\n\t\t\t\t\t\t\t\tpreview.draw();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tflags.rotRight & Mutable.keysDown &&\n\t\t\t\t\t\t\t!(Mutable.lastKeys & flags.rotRight)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst amt = 1;\n\t\t\t\t\t\t\tif (settings.IRSMode == 3) {\n\t\t\t\t\t\t\t\tpiece.irsDir =\n\t\t\t\t\t\t\t\t\t((piece.irsDir + 1 + amt) % 4) - 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpiece.irsDir = amt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (settings.InitialVis) {\n\t\t\t\t\t\t\t\tsound.playSFX(\"rotate\");\n\t\t\t\t\t\t\t\tpreview.draw();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tflags.rot180 & Mutable.keysDown &&\n\t\t\t\t\t\t\t!(Mutable.lastKeys & flags.rot180)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst amt = 2;\n\t\t\t\t\t\t\tif (settings.IRSMode == 3) {\n\t\t\t\t\t\t\t\tpiece.irsDir =\n\t\t\t\t\t\t\t\t\t((piece.irsDir + 1 + amt) % 4) - 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpiece.irsDir = amt;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (settings.InitialVis) {\n\t\t\t\t\t\t\t\tsound.playSFX(\"rotate\");\n\t\t\t\t\t\t\t\tpreview.draw();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tpiece.irsDir != 0 &&\n\t\t\t\t\t\t\t(flags.rotLeft & Mutable.keysDown) == 0 &&\n\t\t\t\t\t\t\t(flags.rotRight & Mutable.keysDown) == 0 &&\n\t\t\t\t\t\t\t(flags.rot180 & Mutable.keysDown) == 0 &&\n\t\t\t\t\t\t\tsettings.IRSMode == 2\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tpiece.irsDir = 0;\n\t\t\t\t\t\t\tif (settings.InitialVis) {\n\t\t\t\t\t\t\t\tsound.playSFX(\"rotate\");\n\t\t\t\t\t\t\t\tpreview.draw();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst irsIndicator = $(\"irs-indicator\");\n\t\t\t\t\tif (\n\t\t\t\t\t\t!(Mutable.lastKeys & flags.holdPiece) &&\n\t\t\t\t\t\tflags.holdPiece & Mutable.keysDown &&\n\t\t\t\t\t\tpiece.ihs == false &&\n\t\t\t\t\t\tsettings.IHSMode != 0\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (Game.type !== 8) {\n\t\t\t\t\t\t\tpiece.ihs = true;\n\t\t\t\t\t\t\tirsIndicator.classList.add(\"gone\");\n\t\t\t\t\t\t\tif (settings.InitialVis) {\n\t\t\t\t\t\t\t\thold.draw();\n\t\t\t\t\t\t\t\tpreview.draw();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tpiece.ihs == true &&\n\t\t\t\t\t\t(flags.holdPiece & Mutable.keysDown) !== 16 &&\n\t\t\t\t\t\tsettings.IHSMode == 2\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (Game.type !== 8) {\n\t\t\t\t\t\t\tpiece.ihs = false;\n\t\t\t\t\t\t\t$(\"ihs-indicator\").classList.add(\"gone\");\n\t\t\t\t\t\t\tif (settings.InitialVis) {\n\t\t\t\t\t\t\t\thold.draw();\n\t\t\t\t\t\t\t\tpreview.draw();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Mutable.lastKeys !== Mutable.keysDown) {\n\t\t\t\t\t\tMutable.lastKeys = Mutable.keysDown;\n\t\t\t\t\t}\n\t\t\t\t\tconst { delayStrictness, tournament } = Game.params;\n\t\t\t\t\tlet time1;\n\t\t\t\t\tlet time2;\n\t\t\t\t\tif (tournament === true) {\n\t\t\t\t\t\ttime1 = 10;\n\t\t\t\t\t\ttime2 = 20;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttime1 = 5;\n\t\t\t\t\t\ttime2 = 10;\n\t\t\t\t\t}\n\t\t\t\t\tif (Game.state === GameState.Countdown) {\n\t\t\t\t\t\t// Count Down\n\t\t\t\t\t\tif (piece.irsDir !== 0) {\n\t\t\t\t\t\t\tirsIndicator.classList.remove(\"gone\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (piece.ihs === true) {\n\t\t\t\t\t\t\t$(\"ihs-indicator\").classList.remove(\"gone\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst strictInd = $(\"strict-ind\");\n\t\t\t\t\t\tconst myVideo = $(\"myVideo\");\n\t\t\t\t\t\tif (delayStrictness === 2) {\n\t\t\t\t\t\t\tmyVideo.classList.remove(\"gone\");\n\t\t\t\t\t\t\tstrictInd.classList.remove(\"gone\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmyVideo.classList.add(\"gone\");\n\t\t\t\t\t\t\tstrictInd.classList.add(\"gone\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Mutable.frame === 0) {\n\t\t\t\t\t\t\tstatisticsStack();\n\t\t\t\t\t\t\tmakeSprite();\n\n\t\t\t\t\t\t\tMutable.playedLevelingbgmGrades = [false, false];\n\t\t\t\t\t\t\tMutable.playedLevelingbgmMarathon = [false, false];\n\t\t\t\t\t\t\tMutable.killAllbgm = true;\n\t\t\t\t\t\t\t$setText(Elements.msg, t(\"ready\"));\n\t\t\t\t\t\t\tclearTetrisMessage();\n\t\t\t\t\t\t\t$(\"msgdiv\").classList.remove(\"startanim\");\n\t\t\t\t\t\t\tif (tournament === true) {\n\t\t\t\t\t\t\t\tsound.playSFX(\"tourneyready\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsound.playSFX(\"ready\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tMutable.clearRows = [];\n\t\t\t\t\t\t\tsound.killbgm();\n\t\t\t\t\t\t} else if (Mutable.frame === ~~((fps * time1) / 6)) {\n\t\t\t\t\t\t\tMutable.killAllbgm = false;\n\t\t\t\t\t\t\tif (tournament === true) {\n\t\t\t\t\t\t\t\t$setText(Elements.msg, \"START!\");\n\t\t\t\t\t\t\t\tsound.playSFX(\"tourneystart\");\n\n\t\t\t\t\t\t\t\t$(\"msgdiv\").classList.add(\"startanim\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$setText(Elements.msg, t(\"start\"));\n\t\t\t\t\t\t\t\tsound.playSFX(\"go\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpreview.draw();\n\t\t\t\t\t\t\tsound.killbgm();\n\t\t\t\t\t\t} else if (Mutable.frame === ~~((fps * time2) / 6)) {\n\t\t\t\t\t\t\t$(\"msgdiv\").classList.remove(\"startanim\");\n\t\t\t\t\t\t\t$setText(Elements.msg, \"\");\n\t\t\t\t\t\t\tMutable.scoreStartTime = Date.now();\n\t\t\t\t\t\t\tif (Game.type === GameTypeEnum.Master) {\n\t\t\t\t\t\t\t\tif (delayStrictness === 2) {\n\t\t\t\t\t\t\t\t\tsound.playbgm(\"masterstrict\");\n\t\t\t\t\t\t\t\t\tsound.playsidebgm(\"masterstrictdire\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsound.playbgm(\"master\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Game.type === GameTypeEnum.Marathon) {\n\t\t\t\t\t\t\t\tsound.playbgm(\"marathon\");\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tGame.type === GameTypeEnum.Sprint ||\n\t\t\t\t\t\t\t\tGame.type === GameTypeEnum.Dig ||\n\t\t\t\t\t\t\t\tGame.type === GameTypeEnum.ScoreAttack\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsound.playbgm(\"sprint\");\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tGame.type === GameTypeEnum.Survival ||\n\t\t\t\t\t\t\t\tGame.type === 7\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsound.cutsidebgm();\n\t\t\t\t\t\t\t\tsound.playbgm(\"survival\");\n\t\t\t\t\t\t\t\tsound.playsidebgm(\"survivaldire\");\n\t\t\t\t\t\t\t} else if (Game.type === GameTypeEnum.Retro) {\n\t\t\t\t\t\t\t\tif (Game.params.proMode == false) {\n\t\t\t\t\t\t\t\t\tsound.playbgm(\"retro\");\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsound.cutsidebgm();\n\t\t\t\t\t\t\t\t\tsound.playbgm(\"retropro\");\n\t\t\t\t\t\t\t\t\tsound.playsidebgm(\"retroprodrought\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (Game.type === GameTypeEnum.Grades) {\n\t\t\t\t\t\t\t\tsound.playbgm(\"grade1\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsound.lowersidebgm();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tMutable.scoreTime = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// are\n\t\t\t\t\t\tif (Mutable.lineClear == 4) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tGame.type === GameTypeEnum.Retro &&\n\t\t\t\t\t\t\t\tGame.settings.retro.flash.val === 1\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (piece.are % 2 == 0) {\n\t\t\t\t\t\t\t\t\tdocument.body.style.backgroundColor =\n\t\t\t\t\t\t\t\t\t\t\"white\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdocument.body.style.backgroundColor =\n\t\t\t\t\t\t\t\t\t\t\"black\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (piece.irsDir !== 0) {\n\t\t\t\t\t\t\tirsIndicator.classList.remove(\"gone\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (piece.ihs === true) {\n\t\t\t\t\t\t\t$(\"ihs-indicator\").classList.remove(\"gone\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (piece.are >= Mutable.lineARE) {\n\t\t\t\t\t\t\tstack.clearLines();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpiece.are++;\n\t\t\t\t\t\tupdateScoreTime();\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(Game.state === GameState.Countdown &&\n\t\t\t\t\t\t\tMutable.frame >= (fps * time2) / 6) ||\n\t\t\t\t\t\t(Game.state === GameState.Paused &&\n\t\t\t\t\t\t\tpiece.are >= piece.areLimit)\n\t\t\t\t\t) {\n\t\t\t\t\t\tdocument.body.style.backgroundColor = \"black\";\n\t\t\t\t\t\tGame.state = GameState.Normal;\n\t\t\t\t\t\t// console.time(\"123\");\n\t\t\t\t\t\tif (piece.ihs && Game.type !== 8) {\n\t\t\t\t\t\t\thold.soundCancel = 1;\n\t\t\t\t\t\t\tpiece.index = preview.next();\n\t\t\t\t\t\t\tsound.playSFX(\"initialhold\");\n\t\t\t\t\t\t\tpiece.hold();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpiece[\"new\"](preview.next());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpiece.draw();\n\t\t\t\t\t\t// console.timeEnd(\"123\");\n\t\t\t\t\t\t// console.log(Mutable.frame);\n\t\t\t\t\t\tupdateScoreTime();\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tGame.state === GameState.Loss ||\n\t\t\t\t\tGame.state === GameState.Win\n\t\t\t\t) {\n\t\t\t\t\t$(\"stack\").classList.remove(\"invisible-replay\");\n\t\t\t\t\t$(\"stack\").classList.remove(\"invisible\");\n\t\t\t\t\tif (Mutable.toGreyRow >= stack.hiddenHeight) {\n\t\t\t\t\t\t// Fade to grey animation played when player loses.\n\t\t\t\t\t\tif (Mutable.frame % 2) {\n\t\t\t\t\t\t\tfor (let x = 0; x < stack.width; x++) {\n\t\t\t\t\t\t\t\t/* farter */ //WTF gamestate-1\n\t\t\t\t\t\t\t\tif (stack.grid[x][Mutable.toGreyRow])\n\t\t\t\t\t\t\t\t\tstack.grid[x][Mutable.toGreyRow] =\n\t\t\t\t\t\t\t\t\t\tGame.state === GameState.Loss ? 8 : 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstack.draw();\n\n\t\t\t\t\t\t\tMutable.toGreyRow--;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//clear(activeCtx);\n\t\t\t\t\t\t//piece.dead = true;\n\t\t\t\t\t\t// trysubmitscore(); disabled score submissions because they don't work\n\t\t\t\t\t\tGame.state = GameState.NotPlayed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tMutable.frame++;\n\t\t\t}\n\n\t\t\tstatistics();\n\n\t\t\t// TODO improve this with 'dirty' flags.\n\t\t\t/* farter */ // as you draw for lock delay brightness gradient... give this up..\n\n\t\t\tif (\n\t\t\t\tpiece.x !== Mutable.lastX ||\n\t\t\t\tMath.floor(piece.y) !== Mutable.lastY ||\n\t\t\t\tpiece.pos !== Mutable.lastPos ||\n\t\t\t\tpiece.lockDelay !== Mutable.lastLockDelay ||\n\t\t\t\tpiece.dirty\n\t\t\t) {\n\t\t\t\tpiece.draw();\n\t\t\t}\n\t\t\tMutable.lastX = piece.x;\n\t\t\tMutable.lastY = Math.floor(piece.y);\n\t\t\tMutable.lastPos = piece.pos;\n\t\t\tMutable.lastLockDelay = piece.lockDelay;\n\t\t\tpiece.dirty = false;\n\n\t\t\tif (stack.dirty) {\n\t\t\t\tstack.draw();\n\t\t\t}\n\t\t\tif (preview.dirty) {\n\t\t\t\tpreview.draw();\n\t\t\t}\n\t\t} else {\n\t\t\t// console.log(\"stop inloop\",inloop)\n\t\t\tGame.inloop = false;\n\t\t}\n\t}\n\n\t// called after piece lock, may be called multple times when die-in-one-frame\n\tstatic checkWin() {\n\t\tif (\n\t\t\tGame.type === GameTypeEnum.Sprint ||\n\t\t\t(Game.type === GameTypeEnum.Retro && Game.params.bType == true)\n\t\t) {\n\t\t\t// 40L\n\t\t\tif (Mutable.lines >= Mutable.lineLimit) {\n\t\t\t\tGame.state = GameState.Win;\n\t\t\t\tif (Game.params?.backFire) {\n\t\t\t\t\tElements.msg.innerHTML = \"GREAT!\";\n\t\t\t\t} else {\n\t\t\t\t\tlet rank = null;\n\t\t\t\t\tconst time =\n\t\t\t\t\t\t(Date.now() - Mutable.scoreStartTime - Game.pauseTime) /\n\t\t\t\t\t\t1000;\n\n\t\t\t\t\tfor (let i = 0; i < sprintRanks.length; i++) {\n\t\t\t\t\t\tif (time > sprintRanks[i].t) {\n\t\t\t\t\t\t\trank = sprintRanks[i];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (Game.type !== 8) {\n\t\t\t\t\t\tElements.msg.innerHTML =\n\t\t\t\t\t\t\t\"<small>\" + rank.b + \"</small>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpiece.dead = true;\n\t\t\t\tmenu(3);\n\t\t\t\tsound.playSFX(\"endingstart\");\n\t\t\t\tsound.playvox(\"win\");\n\t\t\t\tGame.types[Game.type].win();\n\t\t\t}\n\t\t} else {\n\t\t\tlet isend = false;\n\t\t\tif (Game.type === GameTypeEnum.Marathon) {\n\t\t\t\t// Marathon\n\t\t\t\tif (\n\t\t\t\t\tsettings.Gravity !== 0 &&\n\t\t\t\t\tMutable.lines >= 200 &&\n\t\t\t\t\tGame.params.noGravity != true\n\t\t\t\t) {\n\t\t\t\t\t// not Auto, limit to 200 Lines\n\t\t\t\t\t// isend = true;\n\t\t\t\t} else if (\n\t\t\t\t\tGame.params.marathonLimit != undefined &&\n\t\t\t\t\tMutable.lines >= Game.params.marathonLimit\n\t\t\t\t) {\n\t\t\t\t\tisend = true;\n\t\t\t\t}\n\t\t\t} else if (Game.type === GameTypeEnum.ScoreAttack) {\n\t\t\t\t// Score Attack\n\t\t\t\tif (Mutable.lines >= Mutable.lineLimit) {\n\t\t\t\t\t// not Auto, limit to 200 Lines\n\t\t\t\t\tisend = true;\n\t\t\t\t}\n\t\t\t} else if (Game.type === GameTypeEnum.Dig) {\n\t\t\t\t// Dig race\n\t\t\t\tif (Mutable.digLines.length === 0) {\n\t\t\t\t\tisend = true;\n\t\t\t\t}\n\t\t\t} else if (Game.type === GameTypeEnum.Master) {\n\t\t\t\t// 20G\n\t\t\t\tif (Mutable.lines >= 300) {\n\t\t\t\t\t// 200 + 100\n\t\t\t\t\tisend = true;\n\t\t\t\t}\n\t\t\t} else if (Game.type === 7) {\n\t\t\t\t// dig zen\n\t\t\t\tif (Mutable.lines >= 400) {\n\t\t\t\t\t// 300 + 100\n\t\t\t\t\tisend = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isend) {\n\t\t\t\tGame.state = GameState.Win;\n\t\t\t\t$setText(Elements.msg, \"GREAT!\");\n\t\t\t\tpiece.dead = true;\n\t\t\t\tmenu(3);\n\t\t\t\tsound.playSFX(\"endingstart\");\n\t\t\t\tsound.playvox(\"win\");\n\t\t\t}\n\t\t}\n\t}\n}\n\nGame.addGameType(GameTypeEnum.Sprint, new Sprint());\nGame.addGameType(GameTypeEnum.Marathon, new Marathon());\nGame.addGameType(GameTypeEnum.ScoreAttack, new ScoreAttack());\nGame.addGameType(GameTypeEnum.Dig, new Dig());\nGame.addGameType(GameTypeEnum.Master, new Master());\nGame.addGameType(GameTypeEnum.Retro, new Retro());\nGame.addGameType(GameTypeEnum.Grades, new Grades());\nGame.addGameType(GameTypeEnum.Survival, new Survival());\n// Game.addGameType(GameTypeEnum.DigZen, new DigZen);\n", "export enum GameType {\n\tSprint = 0,\n\tMarathon = 1,\n\tSurvival = 3,\n\tDig = 4,\n\tScoreAttack = 5,\n\tMaster = 6,\n\tUnknown = 7,\n\tRetro = 8,\n\tGrades = 9,\n}\n\nexport enum Mino {\n\tI,\n\tJ,\n\tL,\n\tO,\n\tS,\n\tT,\n\tZ,\n}\n\nexport enum GameState {\n\tNormal = 0,\n\tWin = 1,\n\tCountdown = 2,\n\tNotPlayed = 3,\n\tPaused = 4, // maybe?\n\tLoss = 5,\n\tBlockOut = 9,\n}\n\nexport enum Gravity {\n\t\"Auto\" = 0,\n\t\"0G\" = 1,\n\t\"1/64G\" = 2,\n\t\"1/32G\" = 3,\n\t\"1/16G\" = 4,\n\t\"1/8G\" = 5,\n\t\"1/4G\" = 6,\n\t\"1/2G\" = 7,\n\t\"1G\" = 8,\n\t\"20G\" = 9,\n}\n\nexport enum SoftDrop {\n\t\"Auto\" = 0,\n\t\"0G\" = 1,\n\t\"1/64G\" = 2,\n\t\"1/32G\" = 3,\n\t\"1/16G\" = 4,\n\t\"1/8G\" = 5,\n\t\"1/4G\" = 6,\n\t\"1/2G\" = 7,\n\t\"1G\" = 8,\n\t\"20G\" = 9,\n}\n\nexport enum RotSys {\n\t\"Super\" = 0,\n\t\"C2\" = 1,\n\t\"Arika\" = 2,\n\t\"DTET\" = 3,\n\t\"QQ\" = 4,\n\t\"Atari\" = 5,\n\t\"Tengen\" = 6,\n\t\"N-Blox\" = 7,\n\t\"Nintendo\" = 8,\n\t\"MS\" = 9,\n\t\"E-60\" = 10,\n\t\"IBM PC\" = 11,\n\t\"JJ\" = 12,\n\t\"5k\" = 13,\n\t\"Plus\" = 14,\n\t\"DX\" = 15,\n}\n\nexport enum Size {\n\tFull = 0,\n\tSmall = 1,\n\tMedium = 2,\n\tLarge = 3,\n\t\"Extra Large\" = 4,\n}\n\nexport enum Soundbank {\n\tPPT = 0,\n\tTGM3 = 1,\n\tNullPM = 2,\n\tYotipo = 3,\n\tTOJ = 4,\n\tRetro = 5,\n\tFriends = 6,\n\tT99 = 7,\n\t\".com\" = 8,\n\tParty = 9,\n\tUltimate = 10,\n\tAce = 11,\n\t\"Tetr.js\" = 12,\n}\n\nexport enum Block {\n\t\"Bevelled\" = 0,\n\t\"Flat\" = 1,\n\t\"Glossy\" = 2,\n\t\"Arika\" = 3,\n\t\"Aqua\" = 4,\n\t\"Arcade\" = 5,\n\t\"N-Blox\" = 6,\n\t\"Bone\" = 7,\n\t\"Retro\" = 8,\n\t\"Friends\" = 9,\n\t\"T99\" = 10,\n\t\".com\" = 11,\n\t\"PPT\" = 12,\n}\n\nexport enum NextType {\n\t\"TGM3\" = 0,\n\t\"NullPM\" = 1,\n\t\"TGM1\" = 2,\n\t\"Tetr.js\" = 3,\n}\n\nexport enum Voicebank {\n\t\"Alexey\",\n\t\"Friends\",\n\t\"TOJ\",\n}\n\nexport enum Ghost {\n\t\"Grey\" = 0,\n\t\"Colored\" = 1,\n\t\"Off\" = 2,\n\t\"Hidden\" = 3,\n}\n\nexport enum Outline {\n\t\"Off\",\n\t\"On\",\n\t\"Hidden\",\n\t\"Only\",\n}\n\nexport enum IRSMode {\n\tOff = 0,\n\tTap = 1,\n\tHold = 2,\n\tAdditive = 3,\n}\n\nexport enum IHSMode {\n\tOff = 0,\n\tTap = 1,\n\tHold = 2,\n}", "export const $ = <T extends HTMLElement>(id) =>\n\tdocument.getElementById(id) as T;\n\ndeclare function querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;\ndeclare function querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;\ndeclare function querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;\n\nexport const $$ = ((selectors) => document.querySelectorAll(selectors)) as typeof querySelectorAll;\nexport const $tag = <K extends keyof HTMLElementTagNameMap>(qualifiedName: K) =>\n\tdocument.getElementsByTagName(qualifiedName);\nexport const $setText = (ele, text) => (ele.textContent = text);\n/**\n * Clear canvas.\n */\nexport function clear(ctx) {\n\tctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n}\n\nexport function range(start, end, inc?) {\n\tinc = inc || 1;\n\tconst array = [];\n\tfor (let i = start; i < end; i += inc) {\n\t\tarray.push(i);\n\t}\n\treturn array;\n}\n", "import { menu } from \"../display/menu\";\nimport { Game } from \"../game\";\nimport { settings } from \"../settings\";\nimport { Mutable } from \"../utils/data\";\nimport { rng } from \"../utils/randomizer\";\nimport { $ } from \"../utils/utils\";\n\n// TODO: refactor this to death\n\nconst replaydata = $<HTMLInputElement>(\"replaydata\");\n\nexport function tryreplaydata() {\n\t/*\n\tvar strreplay = prompt(\"Paste replay data here: \u5728\u6B64\u8D34\u5165\u5F55\u50CF\u6570\u636E\uFF1A\");\n\tif (strreplay === null)\n\treturn;\n\t*/\n\tconst strreplay = replaydata.value;\n\tGame.init(\"replay\", strreplay);\n}\n\nexport function showreplaydata(strreplay) {\n\t/*\n\tvar objblob = new Blob([strreplay],{type:\"text/plain\"});\n\tvar url=URL.createObjectURL(objblob);\n\twindow.open(url);\n\t*/\n\treplaydata.value = strreplay;\n\treplaydata.select();\n\tmenu(6, 1);\n}\n\nexport function curreplaydata() {\n\t//var strreplay = Compress(JSON.stringify(replay));\n\tconst objKeys = Mutable.replay.keys;\n\tMutable.replay.keys = keysEncode(Mutable.replay.keys);\n\tconst strreplay = JSON.stringify(Mutable.replay);\n\tMutable.replay.keys = objKeys;\n\t//strreplay = strreplay + Compress(strreplay);\n\treturn strreplay;\n}\n\nexport function run(params) {\n\tMutable.watchingReplay = true;\n\tif (params !== undefined) {\n\t\ttry {\n\t\t\tif (typeof params !== \"string\") throw \"wtf\";\n\t\t\tif (params === \"\" || params.slice(0, 1) !== \"{\")\n\t\t\t\tthrow \"please paste replay data, correctly...\";\n\t\t\tMutable.replay = JSON.parse(params);\n\t\t\tif (typeof Mutable.replay !== \"object\") throw \"json parse fail\";\n\t\t\tif (\n\t\t\t\tMutable.replay.type === undefined ||\n\t\t\t\tMutable.replay.keys === undefined ||\n\t\t\t\tMutable.replay.settings === undefined ||\n\t\t\t\tMutable.replay.seed === undefined\n\t\t\t) {\n\t\t\t\tthrow \"something's missing...\";\n\t\t\t}\n\t\t\tMutable.replay.keys = keysDecode(Mutable.replay.keys);\n\t\t\tif (Mutable.replay.keys === null) throw \"keys decode fail\";\n\t\t} catch (e) {\n\t\t\talert(\"invalid replay data... \u56DE\u653E\u6570\u636E\u6709\u8BEF...\\n\" + e.toString());\n\t\t\treturn;\n\t\t}\n\t}\n\tGame.type = Mutable.replay.type;\n\tGame.params = Mutable.replay.params;\n\tsettings.setSettings(\"replay\", Mutable.replay.settings); // by reference\n\trng.seed = Mutable.replay.seed;\n}\n", "import { RotSysData } from \"./utils/data\";\nimport { getStringKeys } from \"./utils/enum\";\nimport {\n\tGravity,\n\tSoftDrop,\n\tRotSys,\n\tSize,\n\tSoundbank,\n\tNextType,\n\tVoicebank,\n\tBlock,\n\tGhost,\n\tOutline,\n\tIRSMode,\n\tIHSMode,\n} from \"./utils/enums\";\n\nabstract class Setting<T = number, U = T> {\n\tname: string;\n\n\tvalue: T;\n\n\tdefaultValue: T;\n\n\tvalidator: (value: T) => boolean;\n\n\tcustomGet: (value: T) => U = (v: unknown) => v as U;\n\n\tconstructor(\n\t\tname: string,\n\t\tdefaultValue: T,\n\t\tvalidator: (value: T) => boolean\n\t) {\n\t\tthis.name = name;\n\t\tthis.value = defaultValue;\n\t\tthis.defaultValue = defaultValue;\n\t\tthis.validator = validator;\n\t}\n\n\tset(value: T) {\n\t\tif (this.validator(value)) {\n\t\t\tthis.value = value;\n\t\t\treturn true;\n\t\t}\n\t\tconsole.warn(`Invalid value for setting ${this.name}: ${value}`);\n\t\treturn false;\n\t}\n\n\tget(): U {\n\t\treturn this.customGet(this.value);\n\t}\n\n\tdisplayName(): string {\n\t\treturn this.value.toString();\n\t}\n\n\treset() {\n\t\tthis.value = this.defaultValue;\n\t}\n\n\tsetCustomGet(get) {\n\t\tthis.customGet = get;\n\t\treturn this;\n\t}\n\n\tcreateElement(parent: HTMLElement) {\n\t\t// TODO: Implement\n\t}\n}\n\nclass EnumSetting<T extends number, U = T> extends Setting<T, U> {\n\tvalues: string[];\n\n\tconstructor(name: string, defaultValue: T, values: string[]) {\n\t\tsuper(name, defaultValue, (value: T) => {\n\t\t\treturn values[value] !== undefined;\n\t\t});\n\t\tthis.values = values;\n\t}\n\n\tdisplayName() {\n\t\treturn this.values[this.value];\n\t}\n}\n\nclass RangeSetting<U = number> extends Setting<number, U> {\n\tmin: number;\n\n\tmax: number;\n\n\tstep: number;\n\n\tconstructor(\n\t\tname: string,\n\t\tdefaultValue: number,\n\t\tmin: number,\n\t\tmax: number,\n\t\tstep = 1\n\t) {\n\t\tsuper(name, defaultValue, (value: number) => {\n\t\t\tif (value >= min && value <= max) {\n\t\t\t\tthis.value = Math.ceil(value / step) * step;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t\tthis.step = step;\n\t}\n}\n\nclass BooleanSetting extends Setting<boolean> {\n\tconstructor(name: string, defaultValue: boolean) {\n\t\tsuper(\n\t\t\tname,\n\t\t\tdefaultValue,\n\t\t\t(value: boolean) => typeof value === \"boolean\"\n\t\t);\n\t}\n\n\tdisplayName(): string {\n\t\treturn this.value ? \"On\" : \"Off\";\n\t}\n}\n\nclass NamedBooleanSetting extends BooleanSetting {\n\tdisplay: string[];\n\n\tconstructor(name: string, defaultValue: boolean, display: string[]) {\n\t\tsuper(name, defaultValue);\n\t\tthis.display = display;\n\t}\n\n\tdisplayName() {\n\t\treturn this.display[this.value ? 0 : 1];\n\t}\n}\n\nconst gravities = [\n\t\"Auto\",\n\t\"0G\",\n\t\"1/64G\",\n\t\"1/32G\",\n\t\"1/16G\",\n\t\"1/8G\",\n\t\"1/4G\",\n\t\"1/2G\",\n\t\"1G\",\n\t\"20G\",\n];\n\nexport interface SettingMap {\n\tDAS: RangeSetting;\n\tARR: RangeSetting;\n\tGravity: EnumSetting<Gravity>;\n\tSoftDrop: EnumSetting<SoftDrop>;\n\tLockDelay: RangeSetting;\n\tRotSys: EnumSetting<\n\t\tRotSys,\n\t\t{\n\t\t\tinitinfo: number[][];\n\t\t\toffset: number[][][];\n\t\t\tcolor: number[];\n\t\t\tid: RotSys;\n\t\t}\n\t>;\n\tNext: RangeSetting;\n\tSize: EnumSetting<Size>;\n\tSound: BooleanSetting;\n\tVolume: RangeSetting;\n\tMusicVol: RangeSetting;\n\tSoundbank: EnumSetting<Soundbank>;\n\tNextSound: BooleanSetting;\n\tNextType: EnumSetting<NextType>;\n\tVoice: BooleanSetting;\n\tVoicebank: EnumSetting<Voicebank>;\n\tBlock: EnumSetting<Block>;\n\tGhost: EnumSetting<Ghost>;\n\tGrid: BooleanSetting;\n\tOutline: EnumSetting<Outline>;\n\tDASCut: BooleanSetting;\n\tNextSide: NamedBooleanSetting;\n\tMessages: NamedBooleanSetting;\n\tMatrixSway: BooleanSetting;\n\tIRSMode: EnumSetting<IRSMode>;\n\tIHSMode: EnumSetting<IHSMode>;\n\tInitialVis: BooleanSetting;\n\tMonochrome: BooleanSetting;\n\tResetPB: BooleanSetting;\n}\n\nconst defaultSettings: SettingMap = {\n\tDAS: new RangeSetting(\"DAS\", 10, 0, 30),\n\tARR: new RangeSetting(\"ARR\", 2, 0, 30),\n\tGravity: new EnumSetting<Gravity>(\"Gravity\", 0, gravities),\n\tSoftDrop: new EnumSetting<SoftDrop>(\"Soft Drop\", 0, gravities),\n\tLockDelay: new RangeSetting(\"Lock Delay\", 30, 0, 100),\n\tRotSys: new EnumSetting<RotSys, typeof RotSysData[RotSys]>(\n\t\t\"Rotation System\",\n\t\t0,\n\t\tgetStringKeys(RotSys)\n\t).setCustomGet((value) => RotSysData[value]),\n\tNext: new RangeSetting(\"Next\", 6, 0, 6),\n\tSize: new EnumSetting<Size>(\"Size\", 0, getStringKeys(Size)),\n\tSound: new BooleanSetting(\"Sound\", true),\n\tVolume: new RangeSetting(\"Volume\", 50, 0, 100),\n\tMusicVol: new RangeSetting(\"Music Volume\", 50, 0, 100),\n\tSoundbank: new EnumSetting<Soundbank>(\n\t\t\"Soundbank\",\n\t\t12,\n\t\tgetStringKeys(Soundbank)\n\t),\n\tNextSound: new BooleanSetting(\"Next Sound\", true),\n\tNextType: new EnumSetting<NextType>(\n\t\t\"Next Type\",\n\t\t3,\n\t\tgetStringKeys(NextType)\n\t),\n\tVoice: new BooleanSetting(\"Voice\", false),\n\tVoicebank: new EnumSetting<Voicebank>(\n\t\t\"Voicebank\",\n\t\t2,\n\t\tgetStringKeys(Voicebank)\n\t),\n\tBlock: new EnumSetting<Block>(\"Block\", 13, getStringKeys(Block)),\n\tGhost: new EnumSetting<Ghost>(\"Ghost\", 1, getStringKeys(Ghost)),\n\tGrid: new BooleanSetting(\"Grid\", true),\n\tOutline: new EnumSetting<Outline>(\"Outline\", 1, getStringKeys(Outline)),\n\tDASCut: new BooleanSetting(\"DAS Cut\", false),\n\tNextSide: new NamedBooleanSetting(\"Next Side\", false, [\"Right\", \"Left\"]),\n\tMessages: new NamedBooleanSetting(\"Messages\", true, [\"Right\", \"Left\"]),\n\tMatrixSway: new BooleanSetting(\"Matrix Sway\", true),\n\tIRSMode: new EnumSetting<IRSMode>(\"IRS Mode\", 0, getStringKeys(IRSMode)),\n\tIHSMode: new EnumSetting<IHSMode>(\"IHS Mode\", 0, getStringKeys(IHSMode)),\n\tInitialVis: new BooleanSetting(\"Initial Visibility\", true),\n\tMonochrome: new BooleanSetting(\"Monochrome\", false),\n\tResetPB: new BooleanSetting(\"Reset PB\", false),\n};\n\ntype getSettingTypes<T extends keyof SettingMap> =\n\tSettingMap[T] extends Setting<infer K, infer U> ? [K, U] : never;\ntype SimpleReturn<T> = (...args: any[]) => T;\n\nclass SettingManager {\n\t#settings: Record<string, SettingMap> = {};\n\n\t#currentName = \"default\";\n\n\tsetSettings(name: string, settings: SettingMap) {\n\t\tthis.#settings[name] = settings;\n\t}\n\n\tset<T extends keyof SettingMap>(name: T, value: getSettingTypes<T>[0]) {\n\t\tconst val = (\n\t\t\tthis.#settings[this.#currentName][name].set as SimpleReturn<boolean>\n\t\t)(value);\n\t\tif (this.#currentName === \"default\") {\n\t\t\tconst settingsCopy = {};\n\t\t\tfor (const key in this.#settings[\"default\"]) {\n\t\t\t\tsettingsCopy[key] = this.#settings[\"default\"][key].value;\n\t\t\t}\n\t\t\tlocalStorage.setItem(\"settings\", JSON.stringify(settingsCopy));\n\t\t}\n\t\treturn val;\n\t}\n\n\tget<T extends keyof SettingMap>(name: T): getSettingTypes<T>[1] {\n\t\treturn this.#settings[this.#currentName][name].get();\n\t}\n\n\tgetRaw<T extends keyof SettingMap>(name: T): SettingMap[T] {\n\t\treturn this.#settings[this.#currentName][name];\n\t}\n\n\tswitchSettings(name: string) {\n\t\tthis.#currentName = name;\n\t}\n}\n\nfor (const name in defaultSettings) {\n\tObject.defineProperty(SettingManager.prototype, name, {\n\t\tget() {\n\t\t\treturn this.get(name);\n\t\t},\n\t\tset(value) {\n\t\t\tthis.set(name, value);\n\t\t},\n\t});\n}\n\nexport const settings: SettingManager & {\n\t[T in keyof SettingMap]: SettingMap[T] extends Setting<infer K, infer U>\n\t\t? K & U\n\t\t: never;\n} = new SettingManager() as any;\n\nsettings.setSettings(\"default\", defaultSettings);\n", "import { lazy } from \"./decorators\";\nimport { Mino, RotSys } from \"./enums\";\nimport { rng } from \"./randomizer\";\nimport { $, $$ } from \"./utils\";\n\nexport const version = \"0.7.7\";\n\nexport class Mutable {\n\t// Scoreing related status\n\tstatic allclear = 0;\n\n\tstatic combo = 0;\n\n\tstatic level = 0;\n\n\tstatic leveltgm = 0;\n\n\tstatic leveltgmvisible = 0;\n\n\t// Stats related status\n\tstatic lines = 0;\n\n\tstatic lineAmount = 0;\n\n\tstatic lineARE = 0;\n\n\tstatic lineAREb = 0;\n\n\tstatic lineDrought = 0;\n\n\tstatic score = 0n;\n\n\tstatic newScore = 0n;\n\n\tstatic statsFinesse = 0;\n\n\tstatic piecesSet = 0;\n\n\tstatic scoreTime = 0;\n\n\tstatic scoreStartTime = 0;\n\n\tstatic digLines = [];\n\n\tstatic b2b = 0;\n\n\tstatic gravity = 0;\n\n\tstatic gravityArr = (() => {\n\t\tconst array = [];\n\t\tarray.push(0);\n\t\tfor (let i = 1; i < 64; i *= 2) array.push(i / 64);\n\t\tfor (let i = 1; i <= 20; i += 19) array.push(i);\n\t\treturn array;\n\t})();\n\n\tstatic lineLimit = 0;\n\n\t/**\n\t * Playfield.\n\t */\n\tstatic cellSize = 0;\n\n\tstatic column = 0;\n\n\tstatic lockDelayLimit = undefined;\n\n\tstatic sdArray = [];\n\n\tstatic frame = 0;\n\n\tstatic frameSkipped = 0;\n\n\t/**\n\t * for dig challenge mode\n\t */\n\tstatic frameLastRise = 0;\n\n\tstatic frameLastHarddropDown = 0;\n\n\t/**\n\t * for dig zen mode\n\t */\n\tstatic digZenBuffer = 0;\n\n\tstatic lastPiecesSet = 0;\n\n\tstatic toGreyRow = 0;\n\n\t//TODO Make dirty flags for each canvas, draw them all at once during frame call.\n\tstatic lastX = 0;\n\n\tstatic lastY = 0;\n\n\tstatic lastPos: number | string = 0;\n\n\tstatic lastLockDelay = 0;\n\n\tstatic usedHardDrop = false;\n\n\tstatic spinY = 0;\n\n\tstatic spinX = 0;\n\n\tstatic rotationFailed = false;\n\n\tstatic classicRuleDelayLast = 0;\n\n\tstatic lastYFrame = 0;\n\n\tstatic classicSoftDrop = 0;\n\n\tstatic classicGravTest = 0;\n\n\tstatic classicStoredY = 0;\n\n\tstatic stepSEPlayed: boolean;\n\n\tstatic keysDown = 0;\n\n\tstatic lastKeys = 0;\n\n\tstatic released = 0;\n\n\tstatic alarm = false;\n\n\tstatic replay: any;\n\n\tstatic watchingReplay: boolean;\n\n\tstatic lineClear = 0;\n\n\tstatic playedLevelingbgmGrades = [false, false];\n\n\tstatic playedLevelingbgmMarathon = [false, false];\n\n\tstatic lastbgmTime = 0;\n\n\tstatic killAllbgm = false;\n\n\tstatic currentLoading = \"\";\n\n\tstatic scoreNes = 0;\n\n\tstatic nontetNes = 0;\n\n\tstatic tetNes = 0;\n\n\tstatic tetRateNes = 0;\n\n\tstatic isSpin = false;\n\n\tstatic isMini = false;\n\n\tstatic lockflashX = 0;\n\n\tstatic lockflashY = 0;\n\n\tstatic lockflashTetro;\n\n\tstatic lockflash = 0;\n\n\tstatic lockflashOn = false;\n\n\tstatic alarmtest = false;\n\n\tstatic clearRows = [];\n\n\tstatic levelCheck = 0;\n}\n\n\nexport const defaultBinds: { [key: string]: number } = {\n\tpause: 27,\n\tmoveLeft: 37,\n\tmoveRight: 39,\n\tmoveLeft3: 0,\n\tmoveRight3: 0,\n\tmoveDown: 40,\n\thardDrop: 32,\n\tholdPiece: 67,\n\trotRight: 88,\n\trotLeft: 90,\n\trot180: 16,\n\tretry: 82,\n}\n\nexport let binds: { [key: string]: number } = JSON.parse(JSON.stringify(defaultBinds));\n\nexport function setBinds(newBinds) {\n\tbinds = JSON.parse(JSON.stringify(newBinds));\n}\n\nexport const flags = {\n\thardDrop: 1,\n\tmoveRight: 2,\n\tmoveLeft: 4,\n\tmoveDown: 8,\n\tholdPiece: 16,\n\trotRight: 32,\n\trotLeft: 64,\n\trot180: 128,\n\tmoveRight3: 256,\n\tmoveLeft3: 512,\n};\n\nexport const uitypes =\n\t\"ppt,tgm,npm,yotipo,toj,nes,tf,99,com,party,ultimate,ace,tetrjs\".split(\",\");\n\nconst base = 1 / 65536;\n\nexport const speedTableTGM = [\n\t{ level: 0, speed: base * 1024 },\n\t{ level: 30, speed: base * 1536 },\n\t{ level: 35, speed: base * 2048 },\n\t{ level: 40, speed: base * 2560 },\n\t{ level: 50, speed: base * 3072 },\n\t{ level: 60, speed: base * 4096 },\n\t{ level: 70, speed: base * 8192 },\n\t{ level: 80, speed: base * 12288 },\n\t{ level: 90, speed: base * 16384 },\n\t{ level: 100, speed: base * 20480 },\n\t{ level: 120, speed: base * 24576 },\n\t{ level: 140, speed: base * 28672 },\n\t{ level: 160, speed: base * 32768 },\n\t{ level: 170, speed: base * 36865 },\n\t{ level: 200, speed: base * 1024 },\n\t{ level: 220, speed: base * 8192 },\n\t{ level: 230, speed: base * 16384 },\n\t{ level: 233, speed: base * 24576 },\n\t{ level: 236, speed: base * 32768 },\n\t{ level: 239, speed: base * 40960 },\n\t{ level: 243, speed: base * 49152 },\n\t{ level: 247, speed: base * 57344 },\n\t{ level: 251, speed: 1 },\n\t{ level: 300, speed: 2 },\n\t{ level: 330, speed: 3 },\n\t{ level: 360, speed: 4 },\n\t{ level: 400, speed: 5 },\n\t{ level: 420, speed: 4 },\n\t{ level: 450, speed: 3 },\n\t{ level: 500, speed: 20 },\n\t{ level: 9999999999999, speed: 20 },\n];\n\nexport const miscTableTGM = [\n\t{\n\t\tlevel: 0,\n\t\tare: 25,\n\t\tareline: 40,\n\t\tarelineb: 0,\n\t\tdas: 14,\n\t\tlockdelay: 30,\n\t},\n\t{\n\t\tlevel: 500,\n\t\tare: 25,\n\t\tareline: 25,\n\t\tarelineb: 0,\n\t\tdas: 8,\n\t\tlockdelay: 30,\n\t},\n\t{\n\t\tlevel: 600,\n\t\tare: 25,\n\t\tareline: 16,\n\t\tarelineb: -9,\n\t\tdas: 8,\n\t\tlockdelay: 30,\n\t},\n\t{\n\t\tlevel: 700,\n\t\tare: 16,\n\t\tareline: 12,\n\t\tarelineb: -4,\n\t\tdas: 8,\n\t\tlockdelay: 30,\n\t},\n\t{\n\t\tlevel: 800,\n\t\tare: 12,\n\t\tareline: 6,\n\t\tarelineb: -6,\n\t\tdas: 8,\n\t\tlockdelay: 30,\n\t},\n\t{\n\t\tlevel: 900,\n\t\tare: 12,\n\t\tareline: 6,\n\t\tarelineb: -6,\n\t\tdas: 6,\n\t\tlockdelay: 17,\n\t},\n\t{\n\t\tlevel: 1000,\n\t\tare: 6,\n\t\tareline: 6,\n\t\tarelineb: 0,\n\t\tdas: 6,\n\t\tlockdelay: 17,\n\t},\n\t{\n\t\tlevel: 1100,\n\t\tare: 5,\n\t\tareline: 6,\n\t\tarelineb: 0,\n\t\tdas: 6,\n\t\tlockdelay: 15,\n\t},\n\t{\n\t\tlevel: 1200,\n\t\tare: 4,\n\t\tareline: 6,\n\t\tarelineb: 0,\n\t\tdas: 6,\n\t\tlockdelay: 15,\n\t},\n\t{\n\t\tlevel: 99999999999999,\n\t\tare: 4,\n\t\tareline: 6,\n\t\tdas: 6,\n\t\tlockdelay: 15,\n\t},\n];\n\n/**\n * Piece data\n */\n\n// [r][x][y]\nexport const TetroI = [\n\t[\n\t\t[0, 1, 0, 0],\n\t\t[0, 1, 0, 0],\n\t\t[0, 1, 0, 0],\n\t\t[0, 1, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t\t[1, 1, 1, 1],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 1, 0],\n\t\t[0, 0, 1, 0],\n\t\t[0, 0, 1, 0],\n\t\t[0, 0, 1, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[1, 1, 1, 1],\n\t\t[0, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n];\nexport const TetroJ = [\n\t[\n\t\t[2, 2, 0, 0],\n\t\t[0, 2, 0, 0],\n\t\t[0, 2, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[2, 2, 2, 0],\n\t\t[2, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 2, 0, 0],\n\t\t[0, 2, 0, 0],\n\t\t[0, 2, 2, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 2, 0],\n\t\t[2, 2, 2, 0],\n\t\t[0, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n];\nexport const TetroL = [\n\t[\n\t\t[0, 3, 0, 0],\n\t\t[0, 3, 0, 0],\n\t\t[3, 3, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[3, 3, 3, 0],\n\t\t[0, 0, 3, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 3, 3, 0],\n\t\t[0, 3, 0, 0],\n\t\t[0, 3, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[3, 0, 0, 0],\n\t\t[3, 3, 3, 0],\n\t\t[0, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n];\nexport const TetroO = [\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[4, 4, 0, 0],\n\t\t[4, 4, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[4, 4, 0, 0],\n\t\t[4, 4, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[4, 4, 0, 0],\n\t\t[4, 4, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[4, 4, 0, 0],\n\t\t[4, 4, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n];\nexport const TetroS = [\n\t[\n\t\t[0, 5, 0, 0],\n\t\t[5, 5, 0, 0],\n\t\t[5, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[5, 5, 0, 0],\n\t\t[0, 5, 5, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 5, 0],\n\t\t[0, 5, 5, 0],\n\t\t[0, 5, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[5, 5, 0, 0],\n\t\t[0, 5, 5, 0],\n\t\t[0, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n];\nexport const TetroT = [\n\t[\n\t\t[0, 6, 0, 0],\n\t\t[6, 6, 0, 0],\n\t\t[0, 6, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[6, 6, 6, 0],\n\t\t[0, 6, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 6, 0, 0],\n\t\t[0, 6, 6, 0],\n\t\t[0, 6, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 6, 0, 0],\n\t\t[6, 6, 6, 0],\n\t\t[0, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n];\nexport const TetroZ = [\n\t[\n\t\t[7, 0, 0, 0],\n\t\t[7, 7, 0, 0],\n\t\t[0, 7, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[0, 7, 7, 0],\n\t\t[7, 7, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 7, 0, 0],\n\t\t[0, 7, 7, 0],\n\t\t[0, 0, 7, 0],\n\t\t[0, 0, 0, 0],\n\t],\n\t[\n\t\t[0, 7, 7, 0],\n\t\t[7, 7, 0, 0],\n\t\t[0, 0, 0, 0],\n\t\t[0, 0, 0, 0],\n\t],\n];\n// [r][MINX MINY MAXX MAXY]\nexport const RectI = [\n\t[0, 1, 4, 2],\n\t[2, 0, 3, 4],\n\t[0, 2, 4, 3],\n\t[1, 0, 2, 4],\n]; // hacked for next display\nexport const RectJ = [\n\t[0, 0, 3, 2],\n\t[1, 0, 3, 3],\n\t[0, 1, 3, 3],\n\t[0, 0, 2, 3],\n];\nexport const RectL = [\n\t[0, 0, 3, 2],\n\t[1, 0, 3, 3],\n\t[0, 1, 3, 3],\n\t[0, 0, 2, 3],\n];\nexport const RectO = [\n\t[1, 0, 3, 2],\n\t[1, 0, 3, 2],\n\t[1, 0, 3, 2],\n\t[1, 0, 3, 2],\n];\nexport const RectS = [\n\t[0, 0, 3, 2],\n\t[1, 0, 3, 3],\n\t[0, 1, 3, 3],\n\t[0, 0, 2, 3],\n];\nexport const RectT = [\n\t[0, 0, 3, 2],\n\t[1, 0, 3, 3],\n\t[0, 1, 3, 3],\n\t[0, 0, 2, 3],\n];\nexport const RectZ = [\n\t[0, 0, 3, 2],\n\t[1, 0, 3, 3],\n\t[0, 1, 3, 3],\n\t[0, 0, 2, 3],\n];\n\nexport const SpinCheckI = {\n\thighX: [\n\t\t[1, 2, 2, 1],\n\t\t[1, 3, 1, 3],\n\t\t[1, 2, 2, 1],\n\t\t[0, 2, 0, 2],\n\t],\n\thighY: [\n\t\t[0, 2, 0, 2],\n\t\t[1, 2, 2, 1],\n\t\t[1, 3, 1, 3],\n\t\t[1, 2, 2, 1],\n\t],\n\tlowX: [\n\t\t[-1, 4, -1, 4],\n\t\t[2, 2, 2, 2],\n\t\t[-1, 4, -1, 4],\n\t\t[1, 1, 1, 1],\n\t],\n\tlowY: [\n\t\t[1, 1, 1, 1],\n\t\t[-1, 4, -1, 4],\n\t\t[2, 2, 2, 2],\n\t\t[-1, 4, -1, 4],\n\t],\n};\nexport const SpinCheckJ = {\n\thighX: [\n\t\t[1, 2],\n\t\t[2, 2],\n\t\t[1, 0],\n\t\t[0, 0],\n\t],\n\thighY: [\n\t\t[0, 0],\n\t\t[1, 2],\n\t\t[2, 2],\n\t\t[1, 0],\n\t],\n\tlowX: [\n\t\t[0, 2],\n\t\t[0, 0],\n\t\t[2, 0],\n\t\t[2, 2],\n\t],\n\tlowY: [\n\t\t[2, 2],\n\t\t[0, 2],\n\t\t[0, 0],\n\t\t[2, 0],\n\t],\n};\nexport const SpinCheckL = {\n\thighX: [\n\t\t[1, 0],\n\t\t[2, 2],\n\t\t[1, 2],\n\t\t[0, 0],\n\t],\n\thighY: [\n\t\t[0, 0],\n\t\t[1, 0],\n\t\t[2, 2],\n\t\t[1, 2],\n\t],\n\tlowX: [\n\t\t[2, 0],\n\t\t[0, 0],\n\t\t[0, 2],\n\t\t[2, 2],\n\t],\n\tlowY: [\n\t\t[2, 2],\n\t\t[2, 0],\n\t\t[0, 0],\n\t\t[0, 3],\n\t],\n};\nexport const SpinCheckS = {\n\thighX: [\n\t\t[0, 2],\n\t\t[1, 2],\n\t\t[2, 0],\n\t\t[1, 0],\n\t],\n\thighY: [\n\t\t[0, 1],\n\t\t[2, 0],\n\t\t[2, 1],\n\t\t[0, 2],\n\t],\n\tlowX: [\n\t\t[0, -1],\n\t\t[1, 2],\n\t\t[-1, 3],\n\t\t[1, 0],\n\t],\n\tlowY: [\n\t\t[0, 1],\n\t\t[-1, 3],\n\t\t[2, 1],\n\t\t[3, -1],\n\t],\n};\nexport const SpinCheckT = {\n\thighX: [\n\t\t[0, 2],\n\t\t[2, 2],\n\t\t[0, 2],\n\t\t[0, 0],\n\t],\n\thighY: [\n\t\t[0, 0],\n\t\t[0, 2],\n\t\t[2, 2],\n\t\t[0, 2],\n\t],\n\tlowX: [\n\t\t[0, 2],\n\t\t[0, 0],\n\t\t[0, 2],\n\t\t[2, 2],\n\t],\n\tlowY: [\n\t\t[2, 2],\n\t\t[0, 2],\n\t\t[0, 0],\n\t\t[0, 2],\n\t],\n};\nexport const SpinCheckZ = {\n\thighX: [\n\t\t[2, 0],\n\t\t[2, 1],\n\t\t[0, 2],\n\t\t[0, 1],\n\t],\n\thighY: [\n\t\t[0, 1],\n\t\t[2, 0],\n\t\t[2, 1],\n\t\t[0, 2],\n\t],\n\tlowX: [\n\t\t[-1, 3],\n\t\t[2, 1],\n\t\t[3, -1],\n\t\t[0, 1],\n\t],\n\tlowY: [\n\t\t[0, 1],\n\t\t[-1, 3],\n\t\t[2, 1],\n\t\t[3, -1],\n\t],\n};\n\nexport const WKTableSRSI_R = [\n\t[\n\t\t[0, 0],\n\t\t[-2, 0],\n\t\t[+1, 0],\n\t\t[-2, +1],\n\t\t[+1, -2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[+2, 0],\n\t\t[-1, -2],\n\t\t[+2, +1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+2, 0],\n\t\t[-1, 0],\n\t\t[+2, -1],\n\t\t[-1, +2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[-2, 0],\n\t\t[+1, +2],\n\t\t[-2, -1],\n\t],\n];\nexport const WKTableSRSI_L = [\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[+2, 0],\n\t\t[-1, -2],\n\t\t[+2, +1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+2, 0],\n\t\t[-1, 0],\n\t\t[+2, -1],\n\t\t[-1, +2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[-2, 0],\n\t\t[+1, +2],\n\t\t[-2, -1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-2, 0],\n\t\t[+1, 0],\n\t\t[-2, +1],\n\t\t[+1, -2],\n\t],\n];\nexport const WKTableSRSI_2 = [\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[-2, 0],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, +1],\n\t\t[0, +2],\n\t\t[0, -1],\n\t\t[0, -2],\n\t\t[-1, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t\t[-1, 0],\n\t\t[-2, 0],\n\t\t[0, -1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, +1],\n\t\t[0, +2],\n\t\t[0, -1],\n\t\t[0, -2],\n\t\t[+1, 0],\n\t],\n];\nexport const WKTableSRSX_R = [\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[-1, -1],\n\t\t[0, +2],\n\t\t[-1, +2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[+1, +1],\n\t\t[0, -2],\n\t\t[+1, -2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[+1, -1],\n\t\t[0, +2],\n\t\t[+1, +2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[-1, +1],\n\t\t[0, -2],\n\t\t[-1, -2],\n\t],\n];\nexport const WKTableSRSX_L = [\n\t[\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[+1, -1],\n\t\t[0, +2],\n\t\t[+1, +2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[+1, +1],\n\t\t[0, -2],\n\t\t[+1, -2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[-1, -1],\n\t\t[0, +2],\n\t\t[-1, +2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[-1, +1],\n\t\t[0, -2],\n\t\t[-1, -2],\n\t],\n];\nexport const WKTableSRSX_2 = [\n\t[\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t\t[+1, +1],\n\t\t[+2, +1],\n\t\t[-1, 0],\n\t\t[-2, 0],\n\t\t[-1, +1],\n\t\t[-2, +1],\n\t\t[0, -1],\n\t\t[+3, 0],\n\t\t[-3, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, +1],\n\t\t[0, +2],\n\t\t[-1, +1],\n\t\t[-1, +2],\n\t\t[0, -1],\n\t\t[0, -2],\n\t\t[-1, -1],\n\t\t[-1, -2],\n\t\t[+1, 0],\n\t\t[0, +3],\n\t\t[0, -3],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[-2, 0],\n\t\t[-1, -1],\n\t\t[-2, -1],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t\t[+1, -1],\n\t\t[+2, -1],\n\t\t[0, +1],\n\t\t[-3, 0],\n\t\t[+3, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, +1],\n\t\t[0, +2],\n\t\t[+1, +1],\n\t\t[+1, +2],\n\t\t[0, -1],\n\t\t[0, -2],\n\t\t[+1, -1],\n\t\t[+1, -2],\n\t\t[-1, 0],\n\t\t[0, +3],\n\t\t[0, -3],\n\t],\n];\nexport const WKTableSRSI = [WKTableSRSI_R, WKTableSRSI_L, WKTableSRSI_2];\nexport const WKTableSRSX = [WKTableSRSX_R, WKTableSRSX_L, WKTableSRSX_2];\nexport const WKTableSRS = [\n\tWKTableSRSI,\n\tWKTableSRSX,\n\tWKTableSRSX,\n\tWKTableSRSX,\n\tWKTableSRSX,\n\tWKTableSRSX,\n\tWKTableSRSX,\n];\n\nexport const WKTableCultris = [\n\t[0, 0],\n\t[-1, 0],\n\t[+1, 0],\n\t[0, +1],\n\t[-1, +1],\n\t[+1, +1],\n\t[-2, 0],\n\t[+2, 0],\n\t[0, -1],\n];\n\nexport const WKTableDRS_R = [\n\t[0, 0],\n\t[+1, 0],\n\t[-1, 0],\n\t[0, +1],\n\t[+1, +1],\n\t[-1, +1],\n\t[0, -1],\n];\nexport const WKTableDRS_L = [\n\t[0, 0],\n\t[-1, 0],\n\t[+1, 0],\n\t[0, +1],\n\t[-1, +1],\n\t[+1, +1],\n\t[0, -1],\n];\nexport const WKTableDRS = [WKTableDRS_R, WKTableDRS_L, WKTableDRS_L];\n\nexport const WKTableDX_R = [\n\t[\n\t\t[0, 0],\n\t\t[-1, -1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, -1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, +1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, +1],\n\t],\n];\nexport const WKTableDX_L = [\n\t[\n\t\t[0, 0],\n\t\t[+1, -1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+1, +1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, +1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, -1],\n\t],\n];\nexport const WKTableDX_2 = [\n\t[\n\t\t[0, 0],\n\t\t[0, -2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-2, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, +2],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[+2, 0],\n\t],\n];\nexport const WKTableDX = [WKTableDX_R, WKTableDX_L, WKTableDX_2];\n\nexport const OffsetSRS = [\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n];\nexport const OffsetARS = [\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[-1, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[+1, 0],\n\t],\n];\nexport const OffsetDRS = [\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n];\nexport const OffsetQRS = [\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n];\nexport const OffsetAtari = [\n\t[\n\t\t[0, -1],\n\t\t[-1, 0],\n\t\t[0, -2],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[-2, 0],\n\t\t[-2, 0],\n\t\t[-2, 0],\n\t\t[-2, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[0, 0],\n\t],\n];\nexport const OffsetNBlox = [\n\t[\n\t\t[0, 0],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[+1, 0],\n\t],\n];\nexport const OffsetNintendo = [\n\t[\n\t\t[0, +1],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t],\n];\nexport const OffsetMS = [\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[0, +1],\n\t\t[+1, 0],\n\t\t[+1, +1],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[0, +1],\n\t\t[+1, 0],\n\t\t[+1, +1],\n\t],\n];\nexport const OffsetE60 = [\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t],\n];\nexport const OffsetJJSRS = [\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n];\nexport const Offset5000 = [\n\t[\n\t\t[0, +1],\n\t\t[-1, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[-1, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n];\nexport const OffsetPlus = [\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, -1],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[0, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t],\n\t[\n\t\t[+1, +1],\n\t\t[+1, 0],\n\t\t[+1, 0],\n\t\t[+2, 0],\n\t],\n];\nexport const OffsetDX = [\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n\t[\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t\t[0, 0],\n\t],\n\t[\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t\t[0, +1],\n\t],\n];\n\n//x, y, r\nexport const InitInfoSRS = [\n\t[0, 0, 0],\n\t[0, 0, 0],\n\t[0, 0, 0],\n\t[0, 0, 0],\n\t[0, 0, 0],\n\t[0, 0, 0],\n\t[0, 0, 0],\n];\nexport const InitInfoARS = [\n\t[0, 0, 0],\n\t[0, 0, 2],\n\t[0, 0, 2],\n\t[0, +1, 0],\n\t[0, +1, 0],\n\t[0, 0, 2],\n\t[0, +1, 0],\n];\nexport const InitInfoDRS = [\n\t[0, +1, 0],\n\t[0, 0, 2],\n\t[0, 0, 2],\n\t[0, +1, 0],\n\t[0, +1, 0],\n\t[0, 0, 2],\n\t[0, +1, 0],\n];\nexport const InitInfoQRS = [\n\t[0, 0, 0],\n\t[0, 0, 1],\n\t[0, 0, 3],\n\t[0, 0, 0],\n\t[0, 0, 0],\n\t[0, 0, 2],\n\t[0, 0, 0],\n];\nexport const InitInfoAtari = [\n\t[+1, 0, 0],\n\t[+1, 0, 2],\n\t[+1, 0, 2],\n\t[0, +1, 0],\n\t[+1, +1, 0],\n\t[+1, 0, 2],\n\t[+1, +1, 0],\n];\nexport const InitInfoNBlox = [\n\t[0, 0, 0],\n\t[0, 0, 2],\n\t[0, 0, 2],\n\t[0, +1, 0],\n\t[0, +1, 0],\n\t[0, 0, 2],\n\t[0, +1, 0],\n];\nexport const InitInfoNintendo = [\n\t[0, 0, 0],\n\t[+1, 0, 2],\n\t[+1, 0, 2],\n\t[0, +1, 0],\n\t[+1, +1, 0],\n\t[+1, 0, 2],\n\t[+1, +1, 0],\n];\nexport const InitInfoMS = [\n\t[0, 0, 0],\n\t[+1, 0, 2],\n\t[+1, 0, 2],\n\t[0, +1, 0],\n\t[+1, +1, 0],\n\t[+1, 0, 2],\n\t[+1, +1, 0],\n];\nexport const InitInfoE60 = [\n\t[0, 0, 0],\n\t[+1, 0, 2],\n\t[+1, 0, 2],\n\t[0, +1, 0],\n\t[+1, +1, 0],\n\t[+1, 0, 2],\n\t[+1, +1, 0],\n];\nexport const InitInfoJJSRS = [\n\t[0, 0, 0],\n\t[+1, 0, 0],\n\t[+1, 0, 0],\n\t[0, 0, 0],\n\t[+1, 0, 0],\n\t[+1, 0, 0],\n\t[+1, 0, 0],\n];\nexport const InitInfo5000 = [\n\t[0, 0, 3],\n\t[0, 0, 1],\n\t[+1, 0, 3],\n\t[0, 0, 0],\n\t[0, 0, 0],\n\t[0, -1, 2],\n\t[0, 0, 0],\n];\nexport const InitInfoPlus = [\n\t[0, 0, 0],\n\t[+1, 0, 2],\n\t[+1, 0, 2],\n\t[0, +1, 0],\n\t[+1, +1, 0],\n\t[+1, 0, 2],\n\t[+1, +1, 0],\n];\nexport const InitInfoDX = [\n\t[0, 0, 0],\n\t[0, 0, 2],\n\t[0, 0, 2],\n\t[0, +1, 0],\n\t[0, +1, 0],\n\t[0, 0, 2],\n\t[0, +1, 0],\n];\n\nexport const ColorSRS = [1, 2, 3, 4, 5, 6, 7];\nexport const ColorARS = [7, 2, 3, 4, 6, 1, 5];\nexport const ColorQRS = [7, 1, 3, 4, 5, 6, 2];\nexport const ColorTengen = [7, 3, 6, 2, 5, 4, 1];\nexport const ColorAtari = [7, 4, 6, 2, 1, 5, 3];\nexport const ColorNBlox = [3, 6, 2, 7, 1, 4, 5];\nexport const ColorC2 = [5, 2, 6, 4, 1, 7, 9];\nexport const ColorNintendo = [9, 2, 7, 9, 2, 9, 7];\nexport const ColorMS = [7, 6, 4, 1, 2, 8, 5];\nexport const ColorE60 = [5, 5, 5, 5, 5, 5, 5];\nexport const ColorIBM = [7, 9, 6, 2, 5, 3, 1];\nexport const ColorJJSRS = [5, 1, 3, 4, 7, 6, 2];\nexport const Color5000 = [7, 6, 8, 4, 5, 1, 2];\nexport const ColorDX = [9, 7, 2, 4, 3, 5, 6];\n\n//SRS, C2, ARS, QRS, DRS\nexport const RotSysData = [\n\t{\n\t\tinitinfo: InitInfoSRS,\n\t\toffset: OffsetSRS,\n\t\tcolor: ColorSRS,\n\t\tid: RotSys.Super,\n\t},\n\t{\n\t\tinitinfo: InitInfoSRS,\n\t\toffset: OffsetSRS,\n\t\tcolor: ColorC2,\n\t\tid: RotSys.C2,\n\t},\n\t{\n\t\tinitinfo: InitInfoARS,\n\t\toffset: OffsetARS,\n\t\tcolor: ColorARS,\n\t\tid: RotSys.Arika,\n\t},\n\t{\n\t\tinitinfo: InitInfoDRS,\n\t\toffset: OffsetDRS,\n\t\tcolor: ColorARS,\n\t\tid: RotSys.DTET,\n\t},\n\t{\n\t\tinitinfo: InitInfoQRS,\n\t\toffset: OffsetQRS,\n\t\tcolor: ColorQRS,\n\t\tid: RotSys.QQ,\n\t},\n\t{\n\t\tinitinfo: InitInfoAtari,\n\t\toffset: OffsetAtari,\n\t\tcolor: ColorAtari,\n\t\tid: RotSys.Atari,\n\t},\n\t{\n\t\tinitinfo: InitInfoAtari,\n\t\toffset: OffsetAtari,\n\t\tcolor: ColorTengen,\n\t\tid: RotSys.Tengen,\n\t},\n\t{\n\t\tinitinfo: InitInfoNBlox,\n\t\toffset: OffsetNBlox,\n\t\tcolor: ColorNBlox,\n\t\tid: RotSys[\"N-Blox\"],\n\t},\n\t{\n\t\tinitinfo: InitInfoNintendo,\n\t\toffset: OffsetNintendo,\n\t\tcolor: ColorNintendo,\n\t\tid: RotSys.Nintendo,\n\t},\n\t{\n\t\tinitinfo: InitInfoMS,\n\t\toffset: OffsetMS,\n\t\tcolor: ColorMS,\n\t\tid: RotSys.MS,\n\t},\n\t{\n\t\tinitinfo: InitInfoE60,\n\t\toffset: OffsetE60,\n\t\tcolor: ColorE60,\n\t\tid: RotSys[\"E-60\"],\n\t},\n\t{\n\t\tinitinfo: InitInfoE60,\n\t\toffset: OffsetE60,\n\t\tcolor: ColorIBM,\n\t\tid: RotSys[\"IBM PC\"],\n\t},\n\t{\n\t\tinitinfo: InitInfoJJSRS,\n\t\toffset: OffsetJJSRS,\n\t\tcolor: ColorJJSRS,\n\t\tid: RotSys.JJ,\n\t},\n\t{\n\t\tinitinfo: InitInfo5000,\n\t\toffset: Offset5000,\n\t\tcolor: Color5000,\n\t\tid: RotSys[\"5k\"],\n\t},\n\t{\n\t\tinitinfo: InitInfoPlus,\n\t\toffset: OffsetPlus,\n\t\tcolor: ColorARS,\n\t\tid: RotSys.Plus,\n\t},\n\t{\n\t\tinitinfo: InitInfoDX,\n\t\toffset: OffsetDX,\n\t\tcolor: ColorDX,\n\t\tid: RotSys.DX,\n\t},\n];\n// Define shapes and spawns.\nexport const PieceData = {\n\tI: {\n\t\tindex: Mino.I,\n\t\ttetro: TetroI,\n\t\trect: RectI,\n\t\tspin: SpinCheckI,\n\t},\n\tJ: {\n\t\tindex: Mino.J,\n\t\ttetro: TetroJ,\n\t\trect: RectJ,\n\t\tspin: SpinCheckJ,\n\t},\n\tL: {\n\t\tindex: Mino.L,\n\t\ttetro: TetroL,\n\t\trect: RectL,\n\t\tspin: SpinCheckL,\n\t},\n\tO: {\n\t\tindex: Mino.O,\n\t\ttetro: TetroO,\n\t\trect: RectO,\n\t\tspin: undefined,\n\t},\n\tS: {\n\t\tindex: Mino.S,\n\t\ttetro: TetroS,\n\t\trect: RectS,\n\t\tspin: SpinCheckS,\n\t},\n\tT: {\n\t\tindex: Mino.T,\n\t\ttetro: TetroT,\n\t\trect: RectT,\n\t\tspin: SpinCheckT,\n\t},\n\tZ: {\n\t\tindex: Mino.Z,\n\t\ttetro: TetroZ,\n\t\trect: RectZ,\n\t\tspin: SpinCheckZ,\n\t},\n};\n\nexport const pieces = [\n\tPieceData.I,\n\tPieceData.J,\n\tPieceData.L,\n\tPieceData.O,\n\tPieceData.S,\n\tPieceData.T,\n\tPieceData.Z,\n];\n\n// Finesse data\n// index x orientation x column = finesse\n// finesse[0][0][4] = 1\n// TODO double check these.\nexport const finesse = [\n\t[\n\t\t[1, 2, 1, 0, 1, 2, 1],\n\t\t[2, 2, 2, 2, 1, 1, 2, 2, 2, 2],\n\t\t[1, 2, 1, 0, 1, 2, 1],\n\t\t[2, 2, 2, 2, 1, 1, 2, 2, 2, 2],\n\t],\n\t[\n\t\t[1, 2, 1, 0, 1, 2, 2, 1],\n\t\t[2, 2, 3, 2, 1, 2, 3, 3, 2],\n\t\t[2, 3, 2, 1, 2, 3, 3, 2],\n\t\t[2, 3, 2, 1, 2, 3, 3, 2, 2],\n\t],\n\t[\n\t\t[1, 2, 1, 0, 1, 2, 2, 1],\n\t\t[2, 2, 3, 2, 1, 2, 3, 3, 2],\n\t\t[2, 3, 2, 1, 2, 3, 3, 2],\n\t\t[2, 3, 2, 1, 2, 3, 3, 2, 2],\n\t],\n\t[\n\t\t[1, 2, 2, 1, 0, 1, 2, 2, 1],\n\t\t[1, 2, 2, 1, 0, 1, 2, 2, 1],\n\t\t[1, 2, 2, 1, 0, 1, 2, 2, 1],\n\t\t[1, 2, 2, 1, 0, 1, 2, 2, 1],\n\t],\n\t[\n\t\t[1, 2, 1, 0, 1, 2, 2, 1],\n\t\t[2, 2, 2, 1, 1, 2, 3, 2, 2],\n\t\t[1, 2, 1, 0, 1, 2, 2, 1],\n\t\t[2, 2, 2, 1, 1, 2, 3, 2, 2],\n\t],\n\t[\n\t\t[1, 2, 1, 0, 1, 2, 2, 1],\n\t\t[2, 2, 3, 2, 1, 2, 3, 3, 2],\n\t\t[2, 3, 2, 1, 2, 3, 3, 2],\n\t\t[2, 3, 2, 1, 2, 3, 3, 2, 2],\n\t],\n\t[\n\t\t[1, 2, 1, 0, 1, 2, 2, 1],\n\t\t[2, 2, 2, 1, 1, 2, 3, 2, 2],\n\t\t[1, 2, 1, 0, 1, 2, 2, 1],\n\t\t[2, 2, 2, 1, 1, 2, 3, 2, 2],\n\t],\n];\n\nexport const arrRowGen = {\n\tsimple(arr, offset, range, width) {\n\t\tconst holex = ~~(rng.next() * range) + offset;\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tarr[holex + x] = 0;\n\t\t}\n\t},\n\tsimplemessy(arr, ratio, width) {\n\t\tlet hashole = false;\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tif (rng.next() >= ratio) {\n\t\t\t\thashole = true;\n\t\t\t\tarr[x] = 0;\n\t\t\t}\n\t\t}\n\t\tif (hashole === false) {\n\t\t\tarr[~~(rng.next() * 10)] = 0;\n\t\t}\n\t},\n};\n\nexport const arrStages = [\n\t{\n\t\tbegin: 0,\n\t\tdelay: 60 * 5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 7, 4);\n\t\t},\n\t},\n\t{\n\t\tbegin: 5,\n\t\tdelay: 60 * 7,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 7, 4);\n\t\t},\n\t},\n\t{\n\t\tbegin: 20,\n\t\tdelay: 60 * 5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 7, 4);\n\t\t},\n\t},\n\t{\n\t\tbegin: 40,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 2, 3, 4);\n\t\t},\n\t},\n\t{\n\t\tbegin: 50,\n\t\tdelay: 60 * 2,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 4, 1, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 70,\n\t\tdelay: 60 * 5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 9, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 80,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 9, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 90,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 9, 2);\n\t\t},\n\t},\n\n\t{\n\t\tbegin: 100,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 120,\n\t\tdelay: 60 * 3.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 150,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 7, 4);\n\t\t},\n\t},\n\t{\n\t\tbegin: 170,\n\t\tdelay: 60 * 3.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 7, 4);\n\t\t},\n\t},\n\n\t{\n\t\tbegin: 200,\n\t\tdelay: 60 * 3.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 220,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 250,\n\t\tdelay: 60 * 2.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 9, 2);\n\t\t},\n\t},\n\n\t{\n\t\tbegin: 300,\n\t\tdelay: 60 * 3.5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.9, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 320,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.9, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 350,\n\t\tdelay: 60 * 3.5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.8, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 390,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.8, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 400,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.6, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 430,\n\t\tdelay: 60 * 5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.4, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 450,\n\t\tdelay: 60 * 7,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.1, stack.width);\n\t\t},\n\t},\n\n\t{\n\t\tbegin: 470,\n\t\tdelay: 60 * 7,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.4, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 500,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.8, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 550,\n\t\tdelay: 60 * 2.5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.8, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 600,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.6, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 650,\n\t\tdelay: 60 * 2.5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.6, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 700,\n\t\tdelay: 60 * 3.5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.4, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 750,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.4, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 780,\n\t\tdelay: 60 * 2.5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.4, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 800,\n\t\tdelay: 60 * 2,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.9, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 900,\n\t\tdelay: 60 * 1.75,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 950,\n\t\tdelay: 60 * 1.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\n\t{\n\t\tbegin: 1000,\n\t\tdelay: 60 * 5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.0, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1020,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.0, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1050,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 1, 1, 8);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1100,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 2, 1, 6);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1150,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 3, 1, 4);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1200,\n\t\tdelay: 60 * 2,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 4, 1, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1210,\n\t\tdelay: 60 * 1.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 4, 1, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1210,\n\t\tdelay: 60 * 1,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 4, 1, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1250,\n\t\tdelay: 60 * 2,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 9, 1, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1260,\n\t\tdelay: 60 * 0.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 9, 1, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1300,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.0, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1350,\n\t\tdelay: 60 * 3,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.1, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1400,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.15, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1450,\n\t\tdelay: 60 * 4,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.2, stack.width);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1480,\n\t\tdelay: 60 * 5,\n\t\tgen: (arr, stack) => {\n\t\t\tarrRowGen.simplemessy(arr, 0.2, stack.width);\n\t\t},\n\t},\n\n\t{\n\t\tbegin: 1500,\n\t\tdelay: 60 * 1.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 9, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1550,\n\t\tdelay: 60 * 1.4,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 9, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1600,\n\t\tdelay: 60 * 1.3,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 9, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1650,\n\t\tdelay: 60 * 1.2,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 9, 2);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1700,\n\t\tdelay: 60 * 1.3,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1800,\n\t\tdelay: 60 * 1.2,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1850,\n\t\tdelay: 60 * 1.15,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1900,\n\t\tdelay: 60 * 1.1,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 1950,\n\t\tdelay: 60 * 1.05,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\n\t{\n\t\tbegin: 2000,\n\t\tdelay: 60 * 1.0,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2050,\n\t\tdelay: 60 * 0.95,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2100,\n\t\tdelay: 60 * 0.9,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2150,\n\t\tdelay: 60 * 0.85,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2180,\n\t\tdelay: 60 * 0.8,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2190,\n\t\tdelay: 60 * 1.0,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2200,\n\t\tdelay: 60 * 0.8,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2300,\n\t\tdelay: 60 * 0.75,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2400,\n\t\tdelay: 60 * 0.7,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2450,\n\t\tdelay: 60 * 0.6,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n\t{\n\t\tbegin: 2500,\n\t\tdelay: 60 * 0.5,\n\t\tgen: (arr, _) => {\n\t\t\tarrRowGen.simple(arr, 0, 10, 1);\n\t\t},\n\t},\n];\n\nexport const sprintRanks = [\n\t{\n\t\tt: 600,\n\t\tu: \"\u4FEE\u4ED9\u53BB\u5427\",\n\t\tb: \"Zen\",\n\t},\n\t{\n\t\tt: 540,\n\t\tu: \"\u6C42\u8FDB9\u5206\u949F\",\n\t\tb: \"9 min...?\",\n\t},\n\t{\n\t\tt: 480,\n\t\tu: \"\u6C42\u8FDB8\u5206\u949F\",\n\t\tb: \"8 min...?\",\n\t},\n\t{\n\t\tt: 420,\n\t\tu: \"\u6C42\u8FDB7\u5206\u949F\",\n\t\tb: \"7 min...?\",\n\t},\n\t{\n\t\tt: 360,\n\t\tu: \"\u6C42\u8FDB6\u5206\u949F\",\n\t\tb: \"6 min...?\",\n\t},\n\t{\n\t\tt: 300,\n\t\tu: \"\u6C42\u8FDB5\u5206\u949F\",\n\t\tb: \"5 min...?\",\n\t},\n\t{\n\t\tt: 240,\n\t\tu: \"\u7EC8\u4E8E\u2026\u2026\",\n\t\tb: \"Finally...\",\n\t},\n\t{\n\t\tt: 210,\n\t\tu: \"<small>\u4F60\u4E00\u5B9A\u662F\u5728\u9017\u6211</small>\",\n\t\tb: \"Too slow.\",\n\t},\n\t{\n\t\tt: 180,\n\t\tu: \"\u6E23\u6E23\",\n\t\tb: \"Well...\",\n\t},\n\t{\n\t\tt: 160,\n\t\tu: \"<small>\u901F\u5EA6\u901F\u5EA6\u52A0\u5FEB</small>\",\n\t\tb: \"Go faster.\",\n\t},\n\t{\n\t\tt: 140,\n\t\tu: \"<small>\u8FD8\u80FD\u518D\u7ED9\u529B\u70B9\u4E48</small>\",\n\t\tb: \"Any more?\",\n\t},\n\t{\n\t\tt: 120,\n\t\tu: \"2\u5206\u949F\uFF1F\",\n\t\tb: \"Beat 2 min.\",\n\t},\n\t{\n\t\tt: 110,\n\t\tu: \"\u4E0D\u96BE\u561B\",\n\t\tb: \"So easy.\",\n\t},\n\t{\n\t\tt: 100,\n\t\tu: \"\u65B0\u4E16\u754C\",\n\t\tb: \"New world.\",\n\t},\n\t{\n\t\tt: 90,\n\t\tu: \"\u8D85\u8D8A\u79D2\u9488\",\n\t\tb: \"1 drop/sec!\",\n\t},\n\t{\n\t\tt: 80,\n\t\tu: \"\u606D\u559C\u5165\u95E8\",\n\t\tb: \"Not bad.\",\n\t},\n\t{\n\t\tt: 73,\n\t\tu: \"\u6E10\u5165\u4F73\u5883\",\n\t\tb: \"Going deeper.\",\n\t},\n\t{\n\t\tt: 69,\n\t\tu: \"\u5C31\u5DEE10\u79D2\",\n\t\tb: \"10 sec faster.\",\n\t},\n\t{\n\t\tt: 63,\n\t\tu: \"\u8FD8\u6709\u51E0\u79D2\",\n\t\tb: \"Approaching.\",\n\t},\n\t{\n\t\tt: 60,\n\t\tu: \"\u6700\u540E\u4E00\u70B9\",\n\t\tb: \"Almost there!\",\n\t},\n\t{\n\t\tt: 56,\n\t\tu: \"1\u5206\u949F\u5C31\u591F\u4E86\",\n\t\tb: \"1-min Sprinter!\",\n\t},\n\t{\n\t\tt: 53,\n\t\tu: \"\u5E76\u4E0D\u662F\u6C99\u5305\",\n\t\tb: \"<small>No longer rookie.</small>\",\n\t},\n\t{\n\t\tt: 50,\n\t\tu: \"50\u4E0D\u662F\u68A6\",\n\t\tb: \"Beat 50.\",\n\t},\n\t{\n\t\tt: 48,\n\t\tu: \"\u6BCF\u79D22\u5757\",\n\t\tb: \"2 drops/sec!\",\n\t},\n\t{\n\t\tt: 45,\n\t\tu: \"\u5F88\u80FD\u6253\u561B\",\n\t\tb: \"u can tetris.\",\n\t},\n\t{\n\t\tt: 42,\n\t\tu: \"\u6709\u70B9\u5389\u5BB3\",\n\t\tb: \"Interesting.\",\n\t},\n\t{\n\t\tt: 40,\n\t\tu: \"\u4E8E\u662F\u5462\uFF1F\",\n\t\tb: \"So?\",\n\t},\n\t{\n\t\tt: 38,\n\t\tu: \"\u9AD8\u624B\",\n\t\tb: \"Good.\",\n\t},\n\t{\n\t\tt: 35,\n\t\tu: \"\u505C\u4E0D\u4E0B\u6765\",\n\t\tb: \"Unstoppable.\",\n\t},\n\t{\n\t\tt: 33,\n\t\tu: \"\u89E6\u624B\",\n\t\tb: \"Octopus\",\n\t},\n\t{\n\t\tt: 31,\n\t\tu: \"\u6BCF\u79D23\u5757\",\n\t\tb: \"3 drops/sec!\",\n\t},\n\t{\n\t\tt: 30,\n\t\tu: \"\u522B\u8FD9\u6837\",\n\t\tb: \"Noooo\",\n\t},\n\t{\n\t\tt: 29,\n\t\tu: \"\u4F60\u8D62\u4E86\",\n\t\tb: \"You win.\",\n\t},\n\t{\n\t\tt: 27,\n\t\tu: \"\u8FD9\u4E0D\u9B54\u6CD5\",\n\t\tb: \"Magic.\",\n\t},\n\t{\n\t\tt: 25,\n\t\tu: \"\u95EA\u7535\",\n\t\tb: \"Lightning!\",\n\t},\n\t{\n\t\tt: 24,\n\t\tu: \"\u6BCF\u79D24\u5757\",\n\t\tb: \"4 drops/sec!\",\n\t},\n\t{\n\t\tt: 23,\n\t\tu: \"\u795E\u517D\",\n\t\tb: \"Alien.\",\n\t},\n\t{\n\t\tt: 22,\n\t\tu: \"\u795E\u517D\u4ED6\u5988\",\n\t\tb: \"Beats Alien.\",\n\t},\n\t{\n\t\tt: 21,\n\t\tu: \"\u62EF\u6551\u5730\u7403\",\n\t\tb: \"<small>Save the world?</small>\",\n\t},\n\t{\n\t\tt: 20,\n\t\tu: \"\u4F60\u786E\u5B9A\uFF1F\",\n\t\tb: \"r u sure?\",\n\t},\n\t{\n\t\tt: 19,\n\t\tu: \"5\u5757\u6BCF\u79D2\",\n\t\tb: \"5pps\",\n\t},\n\t{\n\t\tt: 18,\n\t\tu: \"\u2026\u2026\",\n\t\tb: \"...\",\n\t},\n\t{\n\t\tt: 16.66,\n\t\tu: \"\u2026\u2026\u2026\u2026\",\n\t\tb: \"......\",\n\t},\n\t{\n\t\tt: 14.28,\n\t\tu: \"6\u5757\u6BCF\u79D2\",\n\t\tb: \"6pps\",\n\t},\n\t{\n\t\tt: 12.5,\n\t\tu: \"7\u5757\u6BCF\u79D2\",\n\t\tb: \"7pps\",\n\t},\n\t{\n\t\tt: 11.11,\n\t\tu: \"8\u5757\u6BCF\u79D2\",\n\t\tb: \"8pps\",\n\t},\n\t{\n\t\tt: 10.0,\n\t\tu: \"9\u5757\u6BCF\u79D2\",\n\t\tb: \"9pps\",\n\t},\n\t{\n\t\tt: 9.0,\n\t\tu: \"10\u5757\u6BCF\u79D2\",\n\t\tb: \"10pps\",\n\t},\n\t{\n\t\tt: 0.0,\n\t\tu: \"\u2190_\u2190\",\n\t\tb: \"\u2192_\u2192\",\n\t},\n\t{\n\t\tt: -1 / 0,\n\t\tu: \"\u2191_\u2191\",\n\t\tb: \"\u2193_\u2193\",\n\t},\n];\n\nexport class Elements {\n\t/**\n\t * Get html elements.\n\t */\n\t@lazy static get msg() {\n\t\treturn $(\"msg\");\n\t}\n\n\t@lazy static get statsIpieces() {\n\t\treturn $(\"ivalue\");\n\t}\n\n\t@lazy static get stats() {\n\t\treturn $(\"stats\");\n\t}\n\n\t@lazy static get statsTime() {\n\t\treturn $(\"time\");\n\t}\n\n\t@lazy static get statsLines() {\n\t\treturn $(\"line\");\n\t}\n\n\t@lazy static get statsPiece() {\n\t\treturn $(\"piece\");\n\t}\n\n\t@lazy static get statsFinesse() {\n\t\treturn $(\"finesse\");\n\t}\n\n\t@lazy static get statsScore() {\n\t\treturn $(\"score\");\n\t}\n\n\t@lazy static get statsLevel() {\n\t\treturn $(\"level\");\n\t}\n\n\t@lazy static get h3() {\n\t\treturn $$(\"h3\");\n\t}\n\n\t@lazy static get set() {\n\t\treturn $(\"settings\");\n\t}\n\n\t@lazy static get leaderboard() {\n\t\treturn $(\"leaderboard\");\n\t}\n\n\t@lazy static get hidescroll() {\n\t\treturn $(\"hidescroll\");\n\t}\n\n\t@lazy static get holdCanvas() {\n\t\treturn $<HTMLCanvasElement>(\"hold\");\n\t}\n\n\t@lazy static get bgStackCanvas() {\n\t\treturn $<HTMLCanvasElement>(\"bgStack\");\n\t}\n\n\t@lazy static get stackCanvas() {\n\t\treturn $<HTMLCanvasElement>(\"stack\");\n\t}\n\n\t@lazy static get activeCanvas() {\n\t\treturn $<HTMLCanvasElement>(\"active\");\n\t}\n\n\t@lazy static get previewCanvas() {\n\t\treturn $<HTMLCanvasElement>(\"preview\");\n\t}\n\n\t@lazy static get spriteCanvas() {\n\t\treturn $<HTMLCanvasElement>(\"sprite\");\n\t}\n\n\t@lazy static get timeCanvas() {\n\t\treturn $$(\"#time > canvas\")[0] as HTMLCanvasElement;\n\t}\n\n\t@lazy static get holdCtx() {\n\t\treturn Elements.holdCanvas.getContext(\"2d\");\n\t}\n\n\t@lazy static get bgStackCtx() {\n\t\treturn Elements.bgStackCanvas.getContext(\"2d\");\n\t}\n\n\t@lazy static get stackCtx() {\n\t\treturn Elements.stackCanvas.getContext(\"2d\");\n\t}\n\n\t@lazy static get activeCtx() {\n\t\treturn Elements.activeCanvas.getContext(\"2d\");\n\t}\n\n\t@lazy static get previewCtx() {\n\t\treturn Elements.previewCanvas.getContext(\"2d\");\n\t}\n\n\t@lazy static get spriteCtx() {\n\t\treturn Elements.spriteCanvas.getContext(\"2d\");\n\t}\n\n\t@lazy static get timeCtx() {\n\t\treturn Elements.timeCanvas.getContext(\"2d\");\n\t}\n}\n\n/**\n * Gameplay specific vars.\n */\nexport const gravityUnit = 1.0 / 64;\n", "export function lazy(\n\ttarget,\n\tname,\n\t{\n\t\tget: initializer,\n\t\tenumerable,\n\t\tconfigurable,\n\t\tset: setter,\n\t}: PropertyDescriptor = {}\n): any {\n\tconst { constructor } = target;\n\tif (initializer === undefined) {\n\t\tthrow `@lazy can't be set as a property \\`${name}\\` on ${constructor.name} class, using a getter instead!`;\n\t}\n\tif (setter) {\n\t\tthrow `@lazy can't be annotated with get ${name}() existing a setter on ${constructor.name} class!`;\n\t}\n\n\tfunction set(that, value) {\n\t\tif (value === undefined) {\n\t\t\tvalue = that;\n\t\t\tthat = this;\n\t\t}\n\t\tObject.defineProperty(that, name, {\n\t\t\tenumerable: enumerable,\n\t\t\tconfigurable: configurable,\n\t\t\tvalue: value,\n\t\t});\n\t\treturn value;\n\t}\n\n\treturn {\n\t\tget() {\n\t\t\tif (this === target) {\n\t\t\t\treturn initializer();\n\t\t\t}\n\t\t\t//note:subclass.prototype.foo when foo exists in superclass nor subclass,this will be called\n\t\t\tif (\n\t\t\t\tthis.constructor !== constructor &&\n\t\t\t\tObject.getPrototypeOf(this).constructor === constructor\n\t\t\t) {\n\t\t\t\treturn initializer();\n\t\t\t}\n\t\t\treturn set(this, initializer.call(this));\n\t\t},\n\t\tset,\n\t};\n}\n", "/**\n * Park Miller \"Minimal Standard\" PRNG.\n */\n//TODO put random seed method in here.\n\nclass Random {\n\tseed: number;\n\n\tconstructor() {\n\t\tthis.seed = 1;\n\t}\n\n\tnext(): number {\n\t\t// Returns a float between 0.0, and 1.0\n\t\treturn this.gen() / 2147483647;\n\t}\n\n\tgen() {\n\t\treturn (this.seed = (this.seed * 16807) % 2147483647);\n\t}\n}\n\nexport const rng = new Random();\n", "export function getStringKeys(obj: any): string[] {\n\treturn Object.keys(obj).filter(key => !Number.isNaN(parseInt(obj[key])));\n}", "import { Howl, Howler } from \"howler\";\nimport { settings } from \"../../settings\";\nimport { lazy } from \"../../utils/decorators\";\nimport { $, $setText } from \"../../utils/utils\";\n\n// TODO: integrate this into the refactored codebase\n\nconst piecetypes = \"tgm,npm,tgm1,tetrjs\".split(\",\");\nconst gametypes =\n\t\"ppt,tgm,npm,yotipo,toj,nes,tf,99,com,party,ultimate,ace,tetrjs\".split(\",\");\n\nconst voxtypes = [\"alexey\", \"friends\", \"toj\"];\nconst waveData = [\n\t{ path: \"alarm\", type: \"fixed\" },\n\t{ path: \"bravo\", type: \"game\" },\n\t{ path: \"levelup\", type: \"game\" },\n\t{ path: \"step\", type: \"game\" },\n\t{ path: \"endingstart\", type: \"ui\" },\n\t{ path: \"erase1\", type: \"game\" },\n\t{ path: \"erase2\", type: \"game\" },\n\t{ path: \"erase3\", type: \"game\" },\n\t{ path: \"erase4\", type: \"game\" },\n\t{ path: \"gameover\", type: \"ui\" },\n\t{ path: \"garbage\", type: \"game\" },\n\t{ path: \"lock\", type: \"game\" },\n\t{ path: \"tspin0\", type: \"game\" },\n\t{ path: \"tspin1\", type: \"game\" },\n\t{ path: \"tspin2\", type: \"game\" },\n\t{ path: \"tspin3\", type: \"game\" },\n\t{ path: \"piece0\", type: \"piece\" },\n\t{ path: \"piece1\", type: \"piece\" },\n\t{ path: \"piece2\", type: \"piece\" },\n\t{ path: \"piece3\", type: \"piece\" },\n\t{ path: \"piece4\", type: \"piece\" },\n\t{ path: \"piece5\", type: \"piece\" },\n\t{ path: \"piece6\", type: \"piece\" },\n\t{ path: \"harddrop\", type: \"game\" },\n\t{ path: \"move\", type: \"game\" },\n\t{ path: \"rotate\", type: \"game\" },\n\t{ path: \"initialrotate\", type: \"game\" },\n\t{ path: \"hold\", type: \"game\" },\n\t{ path: \"initialhold\", type: \"game\" },\n\t{ path: \"ready\", type: \"ui\" },\n\t{ path: \"go\", type: \"ui\" },\n\t{ path: \"linefall\", type: \"game\" },\n\t{ path: \"b2b_erase4\", type: \"vox\" },\n\t{ path: \"b2b_tspin1\", type: \"vox\" },\n\t{ path: \"b2b_tspin2\", type: \"vox\" },\n\t{ path: \"b2b_tspin3\", type: \"vox\" },\n\t{ path: \"erase1\", type: \"vox\" },\n\t{ path: \"erase2\", type: \"vox\" },\n\t{ path: \"erase3\", type: \"vox\" },\n\t{ path: \"erase4\", type: \"vox\" },\n\t{ path: \"lose\", type: \"vox\" },\n\t{ path: \"ren1\", type: \"vox\" },\n\t{ path: \"ren2\", type: \"vox\" },\n\t{ path: \"ren3\", type: \"vox\" },\n\t{ path: \"tspin0\", type: \"vox\" },\n\t{ path: \"tspin1\", type: \"vox\" },\n\t{ path: \"tspin2\", type: \"vox\" },\n\t{ path: \"tspin3\", type: \"vox\" },\n\t{ path: \"win\", type: \"vox\" },\n\t{ path: \"ren/ren1\", type: \"game\" },\n\t{ path: \"ren/ren2\", type: \"game\" },\n\t{ path: \"ren/ren3\", type: \"game\" },\n\t{ path: \"ren/ren4\", type: \"game\" },\n\t{ path: \"ren/ren5\", type: \"game\" },\n\t{ path: \"ren/ren6\", type: \"game\" },\n\t{ path: \"ren/ren7\", type: \"game\" },\n\t{ path: \"ren/ren8\", type: \"game\" },\n\t{ path: \"ren/ren9\", type: \"game\" },\n\t{ path: \"ren/ren10\", type: \"game\" },\n\t{ path: \"ren/ren11\", type: \"game\" },\n\t{ path: \"ren/ren12\", type: \"game\" },\n\t{ path: \"ren/ren13\", type: \"game\" },\n\t{ path: \"ren/ren14\", type: \"game\" },\n\t{ path: \"ren/ren15\", type: \"game\" },\n\t{ path: \"ren/ren16\", type: \"game\" },\n\t{ path: \"ren/ren17\", type: \"game\" },\n\t{ path: \"ren/ren18\", type: \"game\" },\n\t{ path: \"ren/ren19\", type: \"game\" },\n\t{ path: \"ren/ren20\", type: \"game\" },\n\t{ path: \"b2b_erase4\", type: \"game\" },\n\t{ path: \"b2b_tspin1\", type: \"game\" },\n\t{ path: \"b2b_tspin2\", type: \"game\" },\n\t{ path: \"b2b_tspin3\", type: \"game\" },\n];\n\nclass Eles {\n\t@lazy static get soundLoadingBar() {\n\t\treturn $<HTMLProgressElement>(\"sound-loading-bar\");\n\t}\n\n\t@lazy static get soundLabel() {\n\t\treturn $(\"sound-name\");\n\t}\n\n\t@lazy static get soundsLoading() {\n\t\treturn $(\"sounds-loading\");\n\t}\n}\n\nlet sidebgmraised = false;\nlet soundLoaded = \"\";\nlet amountToLoad = 0;\nlet soundsLoaded = 0;\nfunction addToLoad(name) {\n\tsoundsLoaded++;\n\n\tEles.soundLoadingBar.value = soundsLoaded;\n\t$setText(Eles.soundLabel, name);\n\tif (Eles.soundLoadingBar.value == Eles.soundLoadingBar.max) {\n\t\tEles.soundsLoading.classList.add(\"gone\");\n\t}\n}\n\nclass Sound2 {\n\tsounds = {};\n\n\tmusic = {};\n\n\tvoices = {};\n\n\tcurrentMusicName;\n\n\tsideMusicName;\n\n\tcurrentMusic: any;\n\n\tsideMusic: any;\n\n\taddSound(iname: string, path: string, loop?: boolean) {\n\t\tthis.sounds[iname] = new Howl({\n\t\t\tsrc: [path],\n\t\t\tvolume: settings.Volume / 100,\n\t\t\tloop: loop,\n\t\t\tonload() {\n\t\t\t\taddToLoad(this._src);\n\t\t\t},\n\t\t\tonloaderror() {\n\t\t\t\tconsole.error(`loading ${this._src} failed!`);\n\t\t\t},\n\t\t});\n\t}\n\n\taddVoice(iname: string, path: string) {\n\t\tthis.voices[iname] = new Howl({\n\t\t\tsrc: [path],\n\t\t\tvolume: settings.Volume / 100,\n\t\t\tonload() {\n\t\t\t\taddToLoad(this._src);\n\t\t\t},\n\t\t});\n\t}\n\n\taddMusic(iname: string, path: (type: \"start\" | \"loop\") => string) {\n\t\tthis.music[iname + \"start\"] = new Howl({\n\t\t\tsrc: [path(\"start\")],\n\t\t\tvolume: settings.MusicVol / 100,\n\t\t\tonend: () => {\n\t\t\t\tthis.currentMusic =\n\t\t\t\t\tthis.music[this.currentMusicName + \"loop\"].play();\n\t\t\t},\n\t\t});\n\t\tthis.music[iname + \"loop\"] = new Howl({\n\t\t\tsrc: [path(\"loop\")],\n\t\t\tvolume: settings.MusicVol / 100,\n\t\t\tloop: true,\n\t\t});\n\t}\n\n\taddSideMusic(iname: string, path: (type: \"start\" | \"loop\") => string) {\n\t\tthis.music[iname + \"start\"] = new Howl({\n\t\t\tsrc: [path(\"start\")],\n\t\t\tvolume: 0,\n\t\t\tonend: () => {\n\t\t\t\tthis.currentMusic =\n\t\t\t\t\tthis.music[this.sideMusicName + \"loop\"].play();\n\t\t\t},\n\t\t});\n\t\tthis.music[iname + \"loop\"] = new Howl({\n\t\t\tsrc: [path(\"loop\")],\n\t\t\tvolume: 0,\n\t\t\tloop: true,\n\t\t});\n\t}\n\n\tinit(type?) {\n\t\tconst soundbank = settings.Soundbank;\n\t\tconst nextType = settings.NextType;\n\t\tconst voicebank = settings.Voicebank;\n\t\tconst nextSound = settings.NextSound;\n\t\tconst voice = settings.Voice;\n\t\tconst sound = settings.Sound;\n\n\t\tif (\n\t\t\t`${soundbank} ${nextType} ${voicebank} ${nextSound} ${voice} ${sound}` ===\n\t\t\tsoundLoaded\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tif (sound) {\n\t\t\tEles.soundsLoading.classList.remove(\"gone\");\n\t\t}\n\t\tsoundsLoaded = 0;\n\t\tEles.soundLoadingBar.value = 0;\n\n\t\tamountToLoad = waveData.length;\n\t\tHowler.unload();\n\t\tif (!sound) return;\n\n\t\tconst navLanguage = navigator.language;\n\t\tconst languageBase = navLanguage.substring(0, 2);\n\n\t\tfor (const { path: iname, type } of waveData) {\n\t\t\tswitch (type) {\n\t\t\t\tcase \"game\":\n\t\t\t\t\tthis.addSound(\n\t\t\t\t\t\tiname,\n\t\t\t\t\t\t`assets/sfx/game/${gametypes[soundbank]}/${iname}.wav`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"vox\":\n\t\t\t\t\tif (!voice) break;\n\t\t\t\t\tthis.addVoice(\n\t\t\t\t\t\tiname,\n\t\t\t\t\t\t`assets/vox/${voxtypes[voicebank]}/${iname}.wav`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ui\":\n\t\t\t\t\tthis.addSound(\n\t\t\t\t\t\tiname,\n\t\t\t\t\t\t`assets/sfx/ui/${gametypes[soundbank]}/${iname}_${\n\t\t\t\t\t\t\tsoundbank == 12 ? languageBase : \"\"\n\t\t\t\t\t\t}.wav`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"piece\":\n\t\t\t\t\t//TODO: clean up logic here\n\t\t\t\t\tif (nextSound) {\n\t\t\t\t\t\tlet language = \"\";\n\t\t\t\t\t\tif (nextType == 3) {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tnavLanguage == \"ja\" &&\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\"piece1\",\n\t\t\t\t\t\t\t\t\t\"piece2\",\n\t\t\t\t\t\t\t\t\t\"piece4\",\n\t\t\t\t\t\t\t\t\t\"piece6\",\n\t\t\t\t\t\t\t\t].indexOf(iname) >= 0\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlanguage = \"_jp\";\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t(navLanguage == \"en-US\" ||\n\t\t\t\t\t\t\t\t\tnavLanguage == \"en\") &&\n\t\t\t\t\t\t\t\tiname == \"piece6\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlanguage = \"_us\";\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tlanguageBase == \"zh\" &&\n\t\t\t\t\t\t\t\tiname == \"piece6\"\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlanguage = \"_us\";\n\t\t\t\t\t\t\t} else if (languageBase == \"es\") {\n\t\t\t\t\t\t\t\tlanguage = \"_es\";\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tnavLanguage == \"es-ES\" &&\n\t\t\t\t\t\t\t\t\tiname == \"piece6\"\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tlanguage += \"_spain\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (languageBase == \"fr\") {\n\t\t\t\t\t\t\t\tlanguage = \"_fr\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.addSound(\n\t\t\t\t\t\t\tiname,\n\t\t\t\t\t\t\t`assets/sfx/piece/${piecetypes[nextType]}/${iname}${language}.wav`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"bgm\":\n\t\t\t\t\tthis.addMusic(iname, (v) => `assets/bgm/${iname}${v}.ogg`);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"bgmside\":\n\t\t\t\t\tthis.addSideMusic(\n\t\t\t\t\t\tiname,\n\t\t\t\t\t\t(v) => `assets/bgm/${iname}${v}.ogg`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"fixed\":\n\t\t\t\t\tthis.addSound(\n\t\t\t\t\t\tiname,\n\t\t\t\t\t\t\"assets/sfx/fixed/\" + iname + \".wav\",\n\t\t\t\t\t\tiname === \"alarm\"\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsoundLoaded = `${soundbank} ${nextType} ${voicebank} ${nextSound} ${voice} ${sound}`;\n\t\tEles.soundLoadingBar.max =\n\t\t\tObject.keys(this.sounds).length + Object.keys(this.voices).length;\n\t}\n\n\tupdateVolume() {\n\t\tfor (const currentname in this.music) {\n\t\t\tthis.music[currentname].volume(settings.MusicVol / 100);\n\t\t}\n\t\tfor (const currentname in this.sounds) {\n\t\t\tthis.sounds[currentname].volume(settings.Volume / 100);\n\t\t}\n\t\tfor (const currentname in this.voices) {\n\t\t\tthis.voices[currentname].volume(settings.Volume / 100);\n\t\t}\n\t}\n\n\tplaySFX(name, arg?) {\n\t\tlet noStop;\n\t\tif (name == \"ren/ren\") {\n\t\t\tnoStop = true;\n\t\t}\n\t\tif (settings.Sound) {\n\t\t\tif (arg !== undefined) {\n\t\t\t\tname += arg;\n\t\t\t}\n\n\t\t\tif (noStop !== true) {\n\t\t\t\tthis.sounds[name].stop();\n\t\t\t}\n\t\t\tthis.sounds[name].play();\n\t\t}\n\t}\n\n\tplayvox(name, arg?) {\n\t\tif (settings.Sound && settings.Voice) {\n\t\t\tif (arg !== undefined) {\n\t\t\t\tname += arg;\n\t\t\t}\n\t\t\tthis.voices[name].stop();\n\t\t\tthis.voices[name].play();\n\t\t}\n\t}\n\n\tstopSFX(name, arg?) {\n\t\tif (settings.Sound) {\n\t\t\tif (arg !== undefined) {\n\t\t\t\tname += arg;\n\t\t\t}\n\t\t\tthis.sounds[name].stop();\n\t\t}\n\t}\n\n\tloadbgm(name, arg?) {\n\t\tif (settings.Sound) {\n\t\t\tif (arg !== undefined) {\n\t\t\t\tname += arg;\n\t\t\t}\n\t\t\tthis.music[name + \"start\"] = new Howl({\n\t\t\t\tsrc: [\"assets/bgm/\" + name + \"start.ogg\"],\n\t\t\t\tvolume: settings.MusicVol / 100,\n\t\t\t\tonend: () => {\n\t\t\t\t\tthis.currentMusic =\n\t\t\t\t\t\tthis.music[this.currentMusicName + \"loop\"].play();\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.music[name + \"loop\"] = new Howl({\n\t\t\t\tsrc: [\"assets/bgm/\" + name + \"loop.ogg\"],\n\t\t\t\tvolume: settings.MusicVol / 100,\n\t\t\t\tloop: true,\n\t\t\t});\n\t\t}\n\t}\n\n\tloadsidebgm(name, arg?) {\n\t\tif (settings.Sound) {\n\t\t\tif (arg !== undefined) {\n\t\t\t\tname += arg;\n\t\t\t}\n\t\t\tthis.music[name + \"start\"] = new Howl({\n\t\t\t\tsrc: [\"assets/bgm/\" + name + \"start.ogg\"],\n\t\t\t\tvolume: 0,\n\t\t\t\tonend: () => {\n\t\t\t\t\tthis.sideMusic =\n\t\t\t\t\t\tthis.music[this.sideMusicName + \"loop\"].play();\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.music[name + \"loop\"] = new Howl({\n\t\t\t\tsrc: [\"assets/bgm/\" + name + \"loop.ogg\"],\n\t\t\t\tvolume: 0,\n\t\t\t\tloop: true,\n\t\t\t});\n\t\t}\n\t}\n\n\tplaybgm(name, arg?) {\n\t\tif (settings.Sound) {\n\t\t\tif (arg !== undefined) {\n\t\t\t\tname += arg;\n\t\t\t}\n\t\t\tthis.currentMusicName = name;\n\t\t\tthis.currentMusic = this.music[name + \"start\"].play();\n\t\t}\n\t}\n\n\tplaysidebgm(name, arg?) {\n\t\tif (settings.Sound) {\n\t\t\tif (arg !== undefined) {\n\t\t\t\tname += arg;\n\t\t\t}\n\t\t\tthis.sideMusicName = name;\n\t\t\tthis.sideMusic = this.music[name + \"start\"].play();\n\t\t}\n\t}\n\n\tkillbgm() {\n\t\tif (settings.Sound) {\n\t\t\tfor (const currentname in this.music) {\n\t\t\t\tthis.music[currentname].stop();\n\t\t\t}\n\t\t}\n\t}\n\n\traisesidebgm() {\n\t\tsound.syncbgm();\n\t\tif (settings.Sound) {\n\t\t\tif (sidebgmraised == false) {\n\t\t\t\tthis.music[this.sideMusicName + \"start\"].fade(\n\t\t\t\t\t0,\n\t\t\t\t\tsettings.MusicVol / 100,\n\t\t\t\t\t500\n\t\t\t\t);\n\t\t\t\tthis.music[this.sideMusicName + \"loop\"].fade(\n\t\t\t\t\t0,\n\t\t\t\t\tsettings.MusicVol / 100,\n\t\t\t\t\t500\n\t\t\t\t);\n\t\t\t\tsidebgmraised = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tlowersidebgm() {\n\t\tif (!settings.Sound && !sidebgmraised) {\n\t\t\treturn;\n\t\t}\n\t\tconst vol = settings.MusicVol;\n\t\tconst musName = this.sideMusicName;\n\n\t\t// TODO: figure out why this can be undefined\n\t\tif (musName) {\n\t\t\tthis.music[musName + \"start\"].fade(vol / 100, 0, 500);\n\t\t\tthis.music[musName + \"loop\"].fade(vol / 100, 0, 500);\n\n\t\t\tsidebgmraised = false;\n\t\t}\n\t}\n\n\tcutsidebgm() {\n\t\tif (!settings.Sound && sidebgmraised != true) return;\n\n\t\tconst vol = settings.MusicVol;\n\t\tconst musName = this.sideMusicName;\n\n\t\tthis.music[musName + \"start\"].fade(vol / 100, 0, 1);\n\t\tthis.music[musName + \"loop\"].fade(vol / 100, 0, 1);\n\t\tsidebgmraised = false;\n\t}\n\n\tmutebgm() {\n\t\tif (settings.Sound) {\n\t\t\tfor (const currentname in this.music) {\n\t\t\t\tthis.music[currentname].mute(true);\n\t\t\t}\n\t\t}\n\t}\n\n\tunmutebgm() {\n\t\tif (settings.Sound) {\n\t\t\tfor (const currentname in this.music) {\n\t\t\t\tthis.music[currentname].mute(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tseekbgm(arg?) {\n\t\tif (settings.Sound) {\n\t\t\tfor (const currentname in this.music) {\n\t\t\t\tconsole.log(this.music[currentname].seek());\n\t\t\t\tthis.music[currentname].seek(arg);\n\t\t\t}\n\t\t}\n\t}\n\n\tseeksidebgm(arg) {\n\t\tif (settings.Sound) {\n\t\t\tthis.music[this.sideMusicName + \"start\"].seek(arg);\n\t\t\tthis.music[this.sideMusicName + \"loop\"].seek(arg);\n\t\t}\n\t}\n\n\tsyncbgm(arg?) {\n\t\tif (settings.Sound) {\n\t\t\tthis.music[this.sideMusicName + \"start\"].seek(\n\t\t\t\tthis.music[this.currentMusicName + \"start\"].seek()\n\t\t\t);\n\t\t\tthis.music[this.sideMusicName + \"loop\"].seek(\n\t\t\t\tthis.music[this.currentMusicName + \"loop\"].seek()\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport const sound = new Sound2();\n", "import { Game } from \"../../game\";\nimport { hold } from \"../../logic/hold\";\nimport { draw } from \"../../logic/view\";\nimport { settings } from \"../../settings\";\nimport { guideline } from \"../../utils/blackjack\";\nimport { pieces, PieceData, Elements } from \"../../utils/data\";\nimport { GameState, GameType } from \"../../utils/enums\";\nimport { rng } from \"../../utils/randomizer\";\nimport { clear, $ } from \"../../utils/utils\";\nimport { piece } from \"./piece\";\n\nclass Preview {\n\tgrabBag = [];\n\n\trandomizer = guideline;\n\n\tdirty: boolean;\n\n\tfillGrabBag() {\n\t\twhile (this.grabBag.length <= 7) {\n\t\t\tthis.grabBag.push(PieceData[this.randomizer.next()].index);\n\t\t}\n\t\tthis.dirty = true;\n\t}\n\n\treset() {\n\t\tthis.grabBag = [];\n\t\tthis.randomizer.reset();\n\t\tthis.fillGrabBag();\n\t\tthis.draw();\n\t}\n\n\tnext() {\n\t\tconst next = this.grabBag.shift();\n\t\tthis.fillGrabBag();\n\t\treturn next;\n\t}\n\n\t/**\n\t * Draws the piece preview.\n\t */\n\tdraw() {\n\t\tclear(Elements.previewCtx);\n\n\t\tconst drawCount = settings.Next === undefined ? 6 : settings.Next;\n\t\tif (Game.state === GameState.Normal) {\n\t\t\t// TODO: was this always empty?\n\t\t}\n\t\tfor (let i = 0; i < drawCount; i++) {\n\t\t\tlet p = this.grabBag[i];\n\t\t\tconst initInfo = settings.RotSys.initinfo[p];\n\t\t\tconst r = initInfo[2];\n\t\t\tconst rect = pieces[p].rect;\n\t\t\tconst rotSysColor = settings.RotSys.color[p];\n\t\t\tif (i == 0) {\n\t\t\t\tif (piece.ihs == true) {\n\t\t\t\t\tif (hold.piece == null) {\n\t\t\t\t\t\tp = this.grabBag[i + 1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp = hold.piece;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tswitch (piece.irsDir) {\n\t\t\t\t\tcase -1: //left\n\t\t\t\t\t\tdraw(\n\t\t\t\t\t\t\tpieces[p].tetro[(r + 3) % 4],\n\t\t\t\t\t\t\t-rect[r][0] + (4 - rect[r][2] + rect[r][0]) / 2,\n\t\t\t\t\t\t\t-rect[r][1] +\n\t\t\t\t\t\t\t\t(3 - rect[r][3] + rect[r][1]) / 2 +\n\t\t\t\t\t\t\t\ti * 3,\n\t\t\t\t\t\t\tElements.previewCtx,\n\t\t\t\t\t\t\trotSysColor\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 0: //nothing\n\t\t\t\t\t\tdraw(\n\t\t\t\t\t\t\tpieces[p].tetro[r],\n\t\t\t\t\t\t\t-rect[r][0] + (4 - rect[r][2] + rect[r][0]) / 2,\n\t\t\t\t\t\t\t-rect[r][1] +\n\t\t\t\t\t\t\t\t(3 - rect[r][3] + rect[r][1]) / 2 +\n\t\t\t\t\t\t\t\ti * 3,\n\t\t\t\t\t\t\tElements.previewCtx,\n\t\t\t\t\t\t\trotSysColor\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$(\"irs-indicator\").classList.add(\"gone\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1: //right\n\t\t\t\t\t\tdraw(\n\t\t\t\t\t\t\tpieces[p].tetro[(r + 1) % 4],\n\t\t\t\t\t\t\t-rect[r][0] + (4 - rect[r][2] + rect[r][0]) / 2,\n\t\t\t\t\t\t\t-rect[r][1] +\n\t\t\t\t\t\t\t\t(3 - rect[r][3] + rect[r][1]) / 2 +\n\t\t\t\t\t\t\t\ti * 3,\n\t\t\t\t\t\t\tElements.previewCtx,\n\t\t\t\t\t\t\trotSysColor\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2: //180\n\t\t\t\t\t\tdraw(\n\t\t\t\t\t\t\tpieces[p].tetro[(r + 2) % 4],\n\t\t\t\t\t\t\t-rect[r][0] + (4 - rect[r][2] + rect[r][0]) / 2,\n\t\t\t\t\t\t\t-rect[r][1] +\n\t\t\t\t\t\t\t\t(3 - rect[r][3] + rect[r][1]) / 2 +\n\t\t\t\t\t\t\t\ti * 3,\n\t\t\t\t\t\t\tElements.previewCtx,\n\t\t\t\t\t\t\trotSysColor\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (piece.ihs == true && hold.piece == null) {\n\t\t\t\t\tp = this.grabBag[i + 1];\n\t\t\t\t}\n\t\t\t\tdraw(\n\t\t\t\t\tpieces[p].tetro[r],\n\t\t\t\t\t-rect[r][0] + (4 - rect[r][2] + rect[r][0]) / 2,\n\t\t\t\t\t-rect[r][1] + (3 - rect[r][3] + rect[r][1]) / 2 + i * 3,\n\t\t\t\t\tElements.previewCtx,\n\t\t\t\t\trotSysColor\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//if(p===0)console.log(-rect[r][0], (4 - rect[r][2] + rect[r][0]) / 2);\n\t\t}\n\t\tthis.dirty = false;\n\t}\n}\n\nexport const preview = new Preview();\n", "import { sound } from \"../display/sound/sound\";\nimport { preview } from \"../display/tetrion/preview\";\nimport { Game } from \"../game\";\nimport { settings } from \"../settings\";\nimport { Elements, pieces } from \"../utils/data\";\nimport { $, clear } from \"../utils/utils\";\nimport { draw } from \"./view\";\n\nclass Hold {\n\tsoundCancel = 0;\n\n\tpiece;\n\n\tdraw() {\n\t\tif (this.soundCancel == 0 && Game.paused == false) {\n\t\t\tsound.playSFX(\"hold\");\n\t\t}\n\t\tthis.soundCancel = 0;\n\t\t// holdElement = ;\n\n\t\tconst holdEle = $(\"hold\");\n\t\tholdEle.classList.remove(\"glow-flash-animation\");\n\t\tvoid holdEle.offsetWidth;\n\t\tholdEle.classList.add(\"glow-flash-animation\");\n\n\t\tclear(Elements.holdCtx);\n\t\tlet p;\n\t\tif (this.piece.ihs == true) {\n\t\t\tp = preview.grabBag[0];\n\t\t} else {\n\t\t\t$(\"ihs-indicator\").classList.add(\"gone\");\n\t\t\tp = this.piece;\n\t\t}\n\t\t// var p = this.piece;\n\n\t\tconst rot = settings.RotSys;\n\t\tconst initInfo = rot.initinfo[p];\n\t\tif (pieces[p] != undefined) {\n\t\t\tconst rect = pieces[p].rect;\n\t\t\tdraw(\n\t\t\t\tpieces[p].tetro[initInfo[2]],\n\t\t\t\t-rect[initInfo[2]][0] +\n\t\t\t\t\t(4 - rect[initInfo[2]][2] + rect[initInfo[2]][0]) / 2,\n\t\t\t\t-rect[initInfo[2]][1] +\n\t\t\t\t\t(3 - rect[initInfo[2]][3] + rect[initInfo[2]][1]) / 2,\n\t\t\t\tElements.holdCtx,\n\t\t\t\trot.color[p]\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport const hold = new Hold();\n", "import { Game } from \"../game\";\nimport { settings } from \"../settings\";\nimport { binds, flags, Mutable, Elements } from \"../utils/data\";\n\n/**\n * Draws grid in background.\n */\nexport function bg(ctx: CanvasRenderingContext2D) {\n\tctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\tctx.fillStyle = \"#1c1c1c\";\n\tfor (let x = -1; x < ctx.canvas.width + 1; x += Mutable.cellSize) {\n\t\tctx.fillRect(x, 0, 2, ctx.canvas.height);\n\t}\n\tfor (let y = -1; y < ctx.canvas.height + 1; y += Mutable.cellSize) {\n\t\tctx.fillRect(0, y, ctx.canvas.width, 2);\n\t}\n}\n\n/**\n * Draws a pre-rendered mino.\n */\nexport function drawCell(x, y, color, ctx, darkness?: number) {\n\tconst spriteCanvas = Elements.spriteCanvas;\n\tx = Math.floor(x * Mutable.cellSize);\n\ty = Math.floor(y * Mutable.cellSize);\n\tctx.drawImage(\n\t\tspriteCanvas,\n\t\tcolor * Mutable.cellSize,\n\t\t0,\n\t\tMutable.cellSize,\n\t\tMutable.cellSize,\n\t\tx,\n\t\ty,\n\t\tMutable.cellSize,\n\t\tMutable.cellSize\n\t);\n\tif (darkness) {\n\t\t//ctx.globalCompositeOperation = 'source-atop';\n\t\tctx.fillStyle = `rgba(0,0,0,${darkness})`;\n\t\tctx.fillRect(x, y, Mutable.cellSize, Mutable.cellSize);\n\t\t//ctx.globalCompositeOperation = 'source-over';\n\t}\n}\n\n/**\n * Pre-renders all mino types in all colors.\n */\nexport const nes = [\n\t[\"#c1c1c1\", \"#ffffff00\"],\n\t[\"#3ebeff\", \"#ffffff\"],\n\t[\"#0058f8\", \"#ffffff00\"],\n\t[\"#f83800\", \"#ffffff00\"],\n\t[\"#ffa347\", \"#ffffff\"],\n\t[\"#80d010\", \"#ffffff00\"],\n\t[\"#db00cd\", \"#ffffff\"],\n\t[\"#ab0023\", \"#ffffff00\"],\n\t[\"#898989\", \"#ffffff00\"],\n\t[\"#0058f8\", \"#ffffff\"],\n];\nexport const tetrjs = [\n\t[\"#EEEEEE\", \"#E0E0E0\", \"#BDBDBD\"],\n\t[\"#26C6DA\", \"#00BCD4\", \"#00ACC1\"],\n\t[\"#42A5F5\", \"#2196F3\", \"#1E88E5\"],\n\t[\"#FFA726\", \"#FF9800\", \"#FB8C00\"],\n\t[\"#FFEE58\", \"#FFEB3B\", \"#FDD835\"],\n\t[\"#66BB6A\", \"#4CAF50\", \"#43A047\"],\n\t[\"#AB47BC\", \"#9C27B0\", \"#8E24AA\"],\n\t[\"#EF5350\", \"#F44336\", \"#E53935\"],\n\t[\"#616161\", \"#424242\", \"#212121\"],\n\t[\"#EEEEEE\", \"#E0E0E0\", \"#BDBDBD\"],\n];\nexport const shaded = [\n\t// 0         +10        -10        -20\n\t[\"#c1c1c1\", \"#dddddd\", \"#a6a6a6\", \"#8b8b8b\"],\n\t[\"#25bb9b\", \"#4cd7b6\", \"#009f81\", \"#008568\"],\n\t[\"#3397d9\", \"#57b1f6\", \"#007dbd\", \"#0064a2\"],\n\t[\"#e67e23\", \"#ff993f\", \"#c86400\", \"#a94b00\"],\n\t[\"#efc30f\", \"#ffdf3a\", \"#d1a800\", \"#b38e00\"],\n\t[\"#9ccd38\", \"#b9e955\", \"#81b214\", \"#659700\"],\n\t[\"#9c5ab8\", \"#b873d4\", \"#81409d\", \"#672782\"],\n\t[\"#e64b3c\", \"#ff6853\", \"#c62c25\", \"#a70010\"],\n\t[\"#898989\", \"#a3a3a3\", \"#6f6f6f\", \"#575757\"],\n\t[\"#c1c1c1\", \"#dddddd\", \"#a6a6a6\", \"#8b8b8b\"],\n];\nexport const glossy = [\n\t//25         37         52         -21        -45\n\t[\"#ffffff\", \"#ffffff\", \"#ffffff\", \"#888888\", \"#4d4d4d\"],\n\t[\"#7bffdf\", \"#9fffff\", \"#ccffff\", \"#008165\", \"#00442e\"],\n\t[\"#6cdcff\", \"#93feff\", \"#c2ffff\", \"#00629f\", \"#002c60\"],\n\t[\"#ffc166\", \"#ffe386\", \"#ffffb0\", \"#aa4800\", \"#650500\"],\n\t[\"#ffff6a\", \"#ffff8c\", \"#ffffb8\", \"#b68a00\", \"#714f00\"],\n\t[\"#efff81\", \"#ffffa2\", \"#ffffcd\", \"#6b9200\", \"#2c5600\"],\n\t[\"#dc9dfe\", \"#ffbeff\", \"#ffe9ff\", \"#5d287e\", \"#210043\"],\n\t[\"#ff9277\", \"#ffb497\", \"#ffe0bf\", \"#a7000a\", \"#600000\"],\n\t[\"#cbcbcb\", \"#ededed\", \"#ffffff\", \"#545454\", \"#1f1f1f\"],\n\t[\"#ffffff\", \"#ffffff\", \"#ffffff\", \"#888888\", \"#4d4d4d\"],\n];\nexport const tgm = [\n\t[\"#ababab\", \"#5a5a5a\", \"#9b9b9b\", \"#626262\"],\n\t[\"#00e8f0\", \"#0070a0\", \"#00d0e0\", \"#0080a8\"],\n\t[\"#00a8f8\", \"#0000b0\", \"#0090e8\", \"#0020c0\"],\n\t[\"#f8a800\", \"#b84000\", \"#e89800\", \"#c85800\"],\n\t[\"#e8e000\", \"#886800\", \"#d8c800\", \"#907800\"],\n\t[\"#78f800\", \"#007800\", \"#58e000\", \"#008800\"],\n\t[\"#f828f8\", \"#780078\", \"#e020e0\", \"#880088\"],\n\t[\"#f08000\", \"#a00000\", \"#e86008\", \"#b00000\"],\n\t[\"#7b7b7b\", \"#303030\", \"#6b6b6b\", \"#363636\"],\n\t[\"#ababab\", \"#5a5a5a\", \"#9b9b9b\", \"#626262\"],\n];\nexport const friends = [\n\t[\"#aeaeae\", \"#808080\", \"#909090\", \"#737373\", \"#666666\", \"#373737\"],\n\t[\"#5fcefe\", \"#09aef7\", \"#21beff\", \"#0f9bd7\", \"#098cc4\", \"#02586c\"],\n\t[\"#4786e2\", \"#2159de\", \"#3177df\", \"#2141c6\", \"#1b46a9\", \"#012476\"],\n\t[\"#feae5f\", \"#ff7900\", \"#fc942e\", \"#e35b02\", \"#db5802\", \"#993300\"],\n\t[\"#fed678\", \"#ffb618\", \"#ffc729\", \"#e39f02\", \"#ec8e02\", \"#996600\"],\n\t[\"#9fe732\", \"#63c710\", \"#84d718\", \"#59b101\", \"#559d0d\", \"#025c01\"],\n\t[\"#db60cf\", \"#c529a6\", \"#d33ab9\", \"#af298a\", \"#9a2183\", \"#660066\"],\n\t[\"#fe9292\", \"#f72039\", \"#fe4e71\", \"#d70f37\", \"#c70e33\", \"#9e0c29\"],\n\t[\"#494949\", \"#353535\", \"#3c3c3c\", \"#303030\", \"#2a2a2a\", \"#171717\"],\n\t[\"#aeaeae\", \"#808080\", \"#909090\", \"#737373\", \"#666666\", \"#373737\"],\n];\nexport const t99 = [\n\t[\"#909090\", \"#d8d6d6\", \"#5d5d5d\", \"#9ea09f\", \"#797979\"],\n\t[\"#00e5ff\", \"#82ffff\", \"#00aaba\", \"#1ce7f7\", \"#00c2d3\"],\n\t[\"#1a00fa\", \"#4287ff\", \"#000092\", \"#202aee\", \"#0000c4\"],\n\t[\"#ff6d08\", \"#ffa76b\", \"#d14200\", \"#fb7325\", \"#f74800\"],\n\t[\"#ffdd0d\", \"#fff45c\", \"#d59b00\", \"#f5c81b\", \"#f2b200\"],\n\t[\"#69ff0c\", \"#a8ff6f\", \"#13c500\", \"#62fc1e\", \"#2fe900\"],\n\t[\"#b400fd\", \"#ea78fe\", \"#70009a\", \"#bf20f0\", \"#7f00c8\"],\n\t[\"#ff093b\", \"#ff7094\", \"#ba0625\", \"#fb0b3f\", \"#ef0020\"],\n\t[\"#5e5e5e\", \"#a6a4a4\", \"#3c3c3c\", \"#303030\", \"#2a2a2a\"],\n\t[\"#909090\", \"#d8d6d6\", \"#2b2b2b\", \"#6d6f6f\", \"#474747\"],\n];\n\nexport const tetcom = [\n\t[\"#bdbdbd\", \"#7f7f7f\", \"#e2e2e2\", \"#333333\"],\n\t[\"#32808c\", \"#006274\", \"#00dff7\", \"#012c33\"],\n\t[\"#28568d\", \"#003374\", \"#008bf3\", \"#021c3c\"],\n\t[\"#926a2f\", \"#744300\", \"#f9af00\", \"#331e00\"],\n\t[\"#8d8128\", \"#746600\", \"#f6e300\", \"#332e01\"],\n\t[\"#218939\", \"#007419\", \"#00f84b\", \"#00330b\"],\n\t[\"#7b2f92\", \"#580074\", \"#d300f9\", \"#270033\"],\n\t[\"#8c3232\", \"#740000\", \"#f70000\", \"#330000\"],\n\t[\"#3e3e3e\", \"#2d2d2d\", \"#606060\", \"#000000\"],\n\t[\"#bdbdbd\", \"#7f7f7f\", \"#e2e2e2\", \"#333333\"],\n];\nexport const ppt = [\n\t// border    top side  lr side     down side  cntr fill  lit fill  drk fill\n\t[\n\t\t\"#687070\",\n\t\t\"#e8e8e8\",\n\t\t\"#c8ccc8\",\n\t\t\"#b8b8b8\",\n\t\t\"#d5d5d5\",\n\t\t\"#f0f0f0\",\n\t\t\"#c0c4c0\",\n\t],\n\t[\n\t\t\"#086c70\",\n\t\t\"#d0fcf8\",\n\t\t\"#008cd8\",\n\t\t\"#05709d\",\n\t\t\"#00a4d8\",\n\t\t\"#00b4d0\",\n\t\t\"#0094d0\",\n\t],\n\t[\n\t\t\"#001060\",\n\t\t\"#80d4f8\",\n\t\t\"#004cb8\",\n\t\t\"#0038a0\",\n\t\t\"#005cb8\",\n\t\t\"#0098d0\",\n\t\t\"#0044a8\",\n\t],\n\t[\n\t\t\"#703000\",\n\t\t\"#f8dcb0\",\n\t\t\"#f05800\",\n\t\t\"#c85110\",\n\t\t\"#f87400\",\n\t\t\"#f8a400\",\n\t\t\"#f85c00\",\n\t],\n\t[\n\t\t\"#b86000\",\n\t\t\"#f8f4d8\",\n\t\t\"#f8b818\",\n\t\t\"#f8a810\",\n\t\t\"#f8c800\",\n\t\t\"#f8e458\",\n\t\t\"#f8b000\",\n\t],\n\t[\n\t\t\"#104c28\",\n\t\t\"#c0fc78\",\n\t\t\"#78c428\",\n\t\t\"#509828\",\n\t\t\"#68bc28\",\n\t\t\"#78d828\",\n\t\t\"#50a820\",\n\t],\n\t[\n\t\t\"#680088\",\n\t\t\"#f8a8f8\",\n\t\t\"#982c98\",\n\t\t\"#802c98\",\n\t\t\"#902c90\",\n\t\t\"#a82c98\",\n\t\t\"#802480\",\n\t],\n\t[\n\t\t\"#600800\",\n\t\t\"#e89c68\",\n\t\t\"#a01418\",\n\t\t\"#850b00\",\n\t\t\"#d82430\",\n\t\t\"#e86868\",\n\t\t\"#c51923\",\n\t],\n\t[\n\t\t\"#131616\",\n\t\t\"#6d6d6d\",\n\t\t\"#474747\",\n\t\t\"#3f433f\",\n\t\t\"#4c4c4c\",\n\t\t\"#868686\",\n\t\t\"#393c39\",\n\t],\n\t[\n\t\t\"#687070\",\n\t\t\"#e8e8e8\",\n\t\t\"#c8ccc8\",\n\t\t\"#b8b8b8\",\n\t\t\"#d5d5d5\",\n\t\t\"#f0f0f0\",\n\t\t\"#c0c4c0\",\n\t],\n];\n\nexport function makeSprite() {\n\tconst spriteCanvas = Elements.spriteCanvas;\n\tconst spriteCtx = Elements. spriteCtx;\n\n\tspriteCanvas.width = Mutable.cellSize * 10;\n\tspriteCanvas.height = Mutable.cellSize;\n\tfor (let i = 0; i < 10; i++) {\n\t\tconst iCurrent = i;\n\t\tconst x = i * Mutable.cellSize;\n\t\tif (settings.Monochrome) {\n\t\t\ti = 0;\n\t\t}\n\n\t\tlet k: number;\n\t\tlet grad;\n\n\t\tif (settings.Block === 0) {\n\t\t\t// Shaded\n\t\t\tspriteCtx.fillStyle = shaded[i][1];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tspriteCtx.fillStyle = shaded[i][3];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx,\n\t\t\t\tMutable.cellSize / 2,\n\t\t\t\tMutable.cellSize,\n\t\t\t\tMutable.cellSize / 2\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = shaded[i][0];\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(x, 0);\n\t\t\tspriteCtx.lineTo(x + Mutable.cellSize / 2, Mutable.cellSize / 2);\n\t\t\tspriteCtx.lineTo(x, Mutable.cellSize);\n\t\t\tspriteCtx.fill();\n\n\t\t\tspriteCtx.fillStyle = shaded[i][2];\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(x + Mutable.cellSize, 0);\n\t\t\tspriteCtx.lineTo(x + Mutable.cellSize / 2, Mutable.cellSize / 2);\n\t\t\tspriteCtx.lineTo(x + Mutable.cellSize, Mutable.cellSize);\n\t\t\tspriteCtx.fill();\n\t\t} else if (settings.Block === 1) {\n\t\t\t// Flat\n\t\t\tspriteCtx.fillStyle = tetrjs[i][1];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\t\t} else if (settings.Block === 2) {\n\t\t\t// Glossy\n\t\t\tk = Math.max(~~(Mutable.cellSize * 0.1), 1);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tx + Mutable.cellSize,\n\t\t\t\tMutable.cellSize\n\t\t\t);\n\t\t\tgrad.addColorStop(0.5, glossy[i][3]);\n\t\t\tgrad.addColorStop(1, glossy[i][4]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tx + Mutable.cellSize,\n\t\t\t\tMutable.cellSize\n\t\t\t);\n\t\t\tgrad.addColorStop(0, glossy[i][2]);\n\t\t\tgrad.addColorStop(0.5, glossy[i][1]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tMutable.cellSize - k,\n\t\t\t\tMutable.cellSize - k\n\t\t\t);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx + k,\n\t\t\t\tk,\n\t\t\t\tx + Mutable.cellSize - k,\n\t\t\t\tMutable.cellSize - k\n\t\t\t);\n\t\t\tgrad.addColorStop(0, shaded[i][0]);\n\t\t\tgrad.addColorStop(0.5, glossy[i][0]);\n\t\t\tgrad.addColorStop(0.5, shaded[i][0]);\n\t\t\tgrad.addColorStop(1, glossy[i][0]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + k,\n\t\t\t\tk,\n\t\t\t\tMutable.cellSize - k * 2,\n\t\t\t\tMutable.cellSize - k * 2\n\t\t\t);\n\t\t} else if (settings.Block === 3) {\n\t\t\t// Arika\n\t\t\tk = Math.max(~~(Mutable.cellSize * 0.125), 1);\n\n\t\t\tspriteCtx.fillStyle = tgm[i][1];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\t\t\tspriteCtx.fillStyle = tgm[i][0];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tMutable.cellSize,\n\t\t\t\t~~(Mutable.cellSize / 2)\n\t\t\t);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\tk,\n\t\t\t\tx,\n\t\t\t\tMutable.cellSize - k\n\t\t\t);\n\t\t\tgrad.addColorStop(0, tgm[i][2]);\n\t\t\tgrad.addColorStop(1, tgm[i][3]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + k,\n\t\t\t\tk,\n\t\t\t\tMutable.cellSize - k * 2,\n\t\t\t\tMutable.cellSize - k * 2\n\t\t\t);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(x, k, x, Mutable.cellSize);\n\t\t\tgrad.addColorStop(0, tgm[i][0]);\n\t\t\tgrad.addColorStop(1, tgm[i][3]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(x, k, k, Mutable.cellSize - k);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tx,\n\t\t\t\tMutable.cellSize - k\n\t\t\t);\n\t\t\tgrad.addColorStop(0, tgm[i][2]);\n\t\t\tgrad.addColorStop(1, tgm[i][1]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize - k,\n\t\t\t\t0,\n\t\t\t\tk,\n\t\t\t\tMutable.cellSize - k\n\t\t\t);\n\t\t} else if (settings.Block === 4) {\n\t\t\t// Aqua\n\t\t\tk = Math.max(~~(Mutable.cellSize * 0.1), 1);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tx + Mutable.cellSize,\n\t\t\t\tMutable.cellSize\n\t\t\t);\n\t\t\tgrad.addColorStop(0.5, glossy[i][3]);\n\t\t\tgrad.addColorStop(1, glossy[i][4]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(x, k, x, Mutable.cellSize);\n\t\t\tgrad.addColorStop(0, shaded[i][0]);\n\t\t\tgrad.addColorStop(0.1, glossy[i][2]);\n\t\t\tgrad.addColorStop(0.4, shaded[i][0]);\n\t\t\tgrad.addColorStop(0.5, shaded[i][2]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + k,\n\t\t\t\tk,\n\t\t\t\tMutable.cellSize - k * 2,\n\t\t\t\tMutable.cellSize - k * 2\n\t\t\t);\n\t\t} else if (settings.Block === 5) {\n\t\t\t// Arcade\n\t\t\tk = Math.max(~~(Mutable.cellSize * 0.1), 1);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tx + Mutable.cellSize,\n\t\t\t\tMutable.cellSize\n\t\t\t);\n\t\t\tgrad.addColorStop(0.5, tgm[i][3]);\n\t\t\tgrad.addColorStop(1, tgm[i][1]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tx + Mutable.cellSize,\n\t\t\t\tMutable.cellSize\n\t\t\t);\n\t\t\tgrad.addColorStop(0, glossy[i][2]);\n\t\t\tgrad.addColorStop(0.5, glossy[i][1]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tMutable.cellSize - k,\n\t\t\t\tMutable.cellSize - k\n\t\t\t);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx + k,\n\t\t\t\tk,\n\t\t\t\tx + Mutable.cellSize - k,\n\t\t\t\tMutable.cellSize - k\n\t\t\t);\n\t\t\tgrad.addColorStop(0, tgm[i][2]);\n\t\t\tgrad.addColorStop(0.3, tgm[i][2]);\n\t\t\tgrad.addColorStop(0.4, tgm[i][0]);\n\t\t\tgrad.addColorStop(0.7, tgm[i][0]);\n\t\t\tgrad.addColorStop(0.87, tgm[i][1]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + k,\n\t\t\t\tk,\n\t\t\t\tMutable.cellSize - k * 2,\n\t\t\t\tMutable.cellSize - k * 2\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = tgm[i][1];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + 1.5 * k,\n\t\t\t\t1.5 * k,\n\t\t\t\tMutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / 8\n\t\t\t);\n\t\t} else if (settings.Block === 6) {\n\t\t\t// N-Blox\n\t\t\tconst k = Math.max(~~(Mutable.cellSize * 0.1), 1);\n\n\t\t\tspriteCtx.fillStyle = glossy[i][4];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx + Mutable.cellSize - k,\n\t\t\t\tk,\n\t\t\t\tx + k,\n\t\t\t\tMutable.cellSize - k\n\t\t\t);\n\t\t\tgrad.addColorStop(0, glossy[i][0]);\n\t\t\tgrad.addColorStop(0.5, glossy[i][0]);\n\t\t\tgrad.addColorStop(0.5, shaded[i][0]);\n\t\t\tgrad.addColorStop(1, shaded[i][0]);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + k,\n\t\t\t\tk,\n\t\t\t\tMutable.cellSize - k * 2,\n\t\t\t\tMutable.cellSize - k * 2\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = shaded[i][1];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 5.5,\n\t\t\t\t0 + Mutable.cellSize / 5.5,\n\t\t\t\tMutable.cellSize / 1.64,\n\t\t\t\tMutable.cellSize / 1.64\n\t\t\t);\n\t\t} else if (settings.Block === 7) {\n\t\t\t// Bone\n\t\t\tk = Math.max(~~(Mutable.cellSize * 0.1), 1);\n\n\t\t\tspriteCtx.fillStyle = \"#000\";\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tspriteCtx.fillStyle = shaded[i][1];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 7.5,\n\t\t\t\t0 + Mutable.cellSize / 7.5,\n\t\t\t\tMutable.cellSize / 1.4,\n\t\t\t\tMutable.cellSize / 1.4\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = \"#000\";\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 3.5,\n\t\t\t\t0 + Mutable.cellSize / 3.5,\n\t\t\t\tMutable.cellSize / 2.44,\n\t\t\t\tMutable.cellSize / 2.44\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = \"#000\";\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 2.7,\n\t\t\t\t0 + Mutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / 4.14,\n\t\t\t\tMutable.cellSize / 1.2\n\t\t\t);\n\t\t} else if (settings.Block === 8) {\n\t\t\t// Retro\n\t\t\tspriteCtx.fillStyle = \"#000\";\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tspriteCtx.fillStyle = nes[i][0];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tMutable.cellSize / 1.125,\n\t\t\t\tMutable.cellSize / 1.125\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = \"#fff\";\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tMutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / 8\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = \"#fff\";\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 8,\n\t\t\t\t0 + Mutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / 4\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = \"#fff\";\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 8,\n\t\t\t\t0 + Mutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / 4,\n\t\t\t\tMutable.cellSize / 8\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = nes[i][1];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 8,\n\t\t\t\t0 + Mutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / 1.6,\n\t\t\t\tMutable.cellSize / 1.6\n\t\t\t);\n\t\t} else if (settings.Block === 9) {\n\t\t\t// Friends\n\t\t\tspriteCtx.fillStyle = friends[i][5];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tspriteCtx.fillStyle = friends[i][1];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 18,\n\t\t\t\t0 + Mutable.cellSize / 18,\n\t\t\t\tMutable.cellSize / 1.125,\n\t\t\t\tMutable.cellSize / 1.125\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = \"#fff\";\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 18,\n\t\t\t\t0 + Mutable.cellSize / 18,\n\t\t\t\tMutable.cellSize / 9,\n\t\t\t\tMutable.cellSize / 9\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = friends[i][0];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 6,\n\t\t\t\t0 + Mutable.cellSize / 18,\n\t\t\t\tMutable.cellSize / 1.5,\n\t\t\t\tMutable.cellSize / 18\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = friends[i][0];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 18,\n\t\t\t\t0 + Mutable.cellSize / 6,\n\t\t\t\tMutable.cellSize / 18,\n\t\t\t\tMutable.cellSize / 1.5\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = friends[i][4];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 1.125,\n\t\t\t\t0 + Mutable.cellSize / 6,\n\t\t\t\tMutable.cellSize / 18,\n\t\t\t\tMutable.cellSize / 1.5\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = friends[i][4];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 6,\n\t\t\t\t0 + Mutable.cellSize / 1.125,\n\t\t\t\tMutable.cellSize / 1.5,\n\t\t\t\tMutable.cellSize / 18\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = friends[i][2];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 4.5,\n\t\t\t\t0 + Mutable.cellSize / 4.5,\n\t\t\t\tMutable.cellSize / 1.8,\n\t\t\t\tMutable.cellSize / 1.8\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = friends[i][3];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 3.6,\n\t\t\t\t0 + Mutable.cellSize / 3.6,\n\t\t\t\tMutable.cellSize / 2.25,\n\t\t\t\tMutable.cellSize / 2.25\n\t\t\t);\n\t\t} else if (settings.Block === 10) {\n\t\t\t// T99\n\t\t\tspriteCtx.fillStyle = t99[i][0];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\t\t\t//\n\t\t\tconst grad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tx + Mutable.cellSize / 7,\n\t\t\t\tMutable.cellSize / 2\n\t\t\t);\n\t\t\tgrad.addColorStop(0, \"#FFFFFFEE\");\n\t\t\tgrad.addColorStop(1, \"#FFFFFF66\");\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(x + Mutable.cellSize / 8, Mutable.cellSize / 8);\n\t\t\tspriteCtx.lineTo(x + Mutable.cellSize / 8, Mutable.cellSize / 2);\n\t\t\tspriteCtx.quadraticCurveTo(\n\t\t\t\tx + Mutable.cellSize / 1.5,\n\t\t\t\tMutable.cellSize / 4,\n\t\t\t\tx + Mutable.cellSize / (8 / 7),\n\t\t\t\tMutable.cellSize / 4\n\t\t\t);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / (8 / 7),\n\t\t\t\tMutable.cellSize / 8\n\t\t\t);\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fill();\n\n\t\t\tspriteCtx.fillStyle = t99[i][1];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize / 8);\n\n\t\t\tspriteCtx.fillStyle = t99[i][2];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx,\n\t\t\t\tMutable.cellSize / (8 / 7),\n\t\t\t\tMutable.cellSize,\n\t\t\t\tMutable.cellSize / 8\n\t\t\t);\n\t\t\t//\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(x, 0);\n\t\t\tspriteCtx.lineTo(x, Mutable.cellSize);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / (8 / 7)\n\t\t\t);\n\t\t\tspriteCtx.lineTo(x + Mutable.cellSize / 8, Mutable.cellSize / 8);\n\t\t\tspriteCtx.fillStyle = t99[i][3];\n\t\t\tspriteCtx.fill();\n\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(x + Mutable.cellSize, 0);\n\t\t\tspriteCtx.lineTo(x + Mutable.cellSize, Mutable.cellSize);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / (8 / 7),\n\t\t\t\tMutable.cellSize / (8 / 7)\n\t\t\t);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / (8 / 7),\n\t\t\t\tMutable.cellSize / 8\n\t\t\t);\n\t\t\tspriteCtx.fillStyle = t99[i][4];\n\t\t\tspriteCtx.fill();\n\t\t} else if (settings.Block === 11) {\n\t\t\t// .com\n\t\t\tspriteCtx.fillStyle = tetcom[i][0];\n\t\t\troundRect(\n\t\t\t\tspriteCtx,\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tMutable.cellSize,\n\t\t\t\tMutable.cellSize,\n\t\t\t\tMutable.cellSize / 12,\n\t\t\t\ttrue,\n\t\t\t\tfalse\n\t\t\t);\n\t\t\tspriteCtx.fillStyle = tetcom[i][1];\n\t\t\troundRect(\n\t\t\t\tspriteCtx,\n\t\t\t\tx + Mutable.cellSize / 18,\n\t\t\t\t0 + Mutable.cellSize / 18,\n\t\t\t\tMutable.cellSize / 1.125,\n\t\t\t\tMutable.cellSize / 1.125,\n\t\t\t\tMutable.cellSize / 12,\n\t\t\t\ttrue,\n\t\t\t\tfalse\n\t\t\t);\n\n\t\t\tconst grd = spriteCtx.createRadialGradient(\n\t\t\t\tx + Mutable.cellSize / 2,\n\t\t\t\t0 + Mutable.cellSize,\n\t\t\t\tMutable.cellSize / 32,\n\t\t\t\tx + Mutable.cellSize / 2,\n\t\t\t\t0 + Mutable.cellSize / 1.5,\n\t\t\t\tMutable.cellSize\n\t\t\t);\n\t\t\tgrd.addColorStop(0, tetcom[i][2]);\n\t\t\tgrd.addColorStop(1, tetcom[i][3]);\n\t\t\tspriteCtx.fillStyle = grd;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / (16 / 2.5),\n\t\t\t\t0 + Mutable.cellSize / (16 / 2.5),\n\t\t\t\tMutable.cellSize / (16 / 11),\n\t\t\t\tMutable.cellSize / (16 / 11)\n\t\t\t);\n\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(\n\t\t\t\tx + Mutable.cellSize / (16 / 2.5),\n\t\t\t\t0 + Mutable.cellSize / (16 / 2.5)\n\t\t\t);\n\t\t\tspriteCtx.bezierCurveTo(\n\t\t\t\tx + Mutable.cellSize / (16 / 2.5),\n\t\t\t\tMutable.cellSize / 2,\n\t\t\t\tx + Mutable.cellSize / (16 / 13.5),\n\t\t\t\tMutable.cellSize / 2,\n\t\t\t\tx + Mutable.cellSize / (16 / 13.5),\n\t\t\t\tMutable.cellSize / (16 / 2.5)\n\t\t\t);\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx,\n\t\t\t\t0,\n\t\t\t\tx,\n\t\t\t\tMutable.cellSize / 2\n\t\t\t);\n\t\t\tgrad.addColorStop(0, \"#FFFFFF44\");\n\t\t\tgrad.addColorStop(1, \"#FFFFFF88\");\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fill();\n\n\t\t\tgrad = spriteCtx.createLinearGradient(\n\t\t\t\tx + Mutable.cellSize / 2,\n\t\t\t\t0,\n\t\t\t\tx + Mutable.cellSize / (16 / 5),\n\t\t\t\tMutable.cellSize / 2\n\t\t\t);\n\t\t\tgrad.addColorStop(0.65, \"#FFFFFF00\");\n\t\t\tgrad.addColorStop(0.8, \"#FFFFFF\");\n\t\t\tspriteCtx.fillStyle = grad;\n\t\t\tspriteCtx.fill();\n\t\t} else if (settings.Block === 12) {\n\t\t\t// PPT\n\t\t\tspriteCtx.fillStyle = ppt[i][0];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\n\t\t\tspriteCtx.fillStyle = ppt[i][4];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 16,\n\t\t\t\tMutable.cellSize / 16,\n\t\t\t\tMutable.cellSize / (16 / 14),\n\t\t\t\tMutable.cellSize / (16 / 14)\n\t\t\t);\n\n\t\t\tlet grd = spriteCtx.createRadialGradient(\n\t\t\t\tx + Mutable.cellSize / 2,\n\t\t\t\t0 + Mutable.cellSize,\n\t\t\t\tMutable.cellSize / 64,\n\t\t\t\tx + Mutable.cellSize / 2,\n\t\t\t\t0 + Mutable.cellSize,\n\t\t\t\tMutable.cellSize / 2\n\t\t\t);\n\t\t\tgrd.addColorStop(0, ppt[i][5]);\n\t\t\tgrd.addColorStop(1, ppt[i][6]);\n\t\t\tspriteCtx.fillStyle = grd;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 16,\n\t\t\t\tMutable.cellSize / 2,\n\t\t\t\tMutable.cellSize / (16 / 14),\n\t\t\t\tMutable.cellSize / (16 / 7)\n\t\t\t);\n\n\t\t\tgrd = spriteCtx.createLinearGradient(x, 0, x, Mutable.cellSize / 2);\n\t\t\tgrd.addColorStop(0.2, ppt[i][6]);\n\t\t\tgrd.addColorStop(1, ppt[i][4]);\n\t\t\tspriteCtx.fillStyle = grd;\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 16,\n\t\t\t\tMutable.cellSize / 16,\n\t\t\t\tMutable.cellSize / (16 / 14),\n\t\t\t\tMutable.cellSize / (16 / 7)\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = ppt[i][1];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 32,\n\t\t\t\tMutable.cellSize / 32,\n\t\t\t\tMutable.cellSize / (32 / 30),\n\t\t\t\tMutable.cellSize / (32 / 3)\n\t\t\t);\n\n\t\t\tspriteCtx.fillStyle = ppt[i][3];\n\t\t\tspriteCtx.fillRect(\n\t\t\t\tx + Mutable.cellSize / 32,\n\t\t\t\tMutable.cellSize / (32 / 28),\n\t\t\t\tMutable.cellSize / (32 / 30),\n\t\t\t\tMutable.cellSize / (32 / 3)\n\t\t\t);\n\t\t\t//\n\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(x + Mutable.cellSize / 34, Mutable.cellSize / 32);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / 34,\n\t\t\t\tMutable.cellSize / (32 / 31)\n\t\t\t);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / 8,\n\t\t\t\tMutable.cellSize / (8 / 7)\n\t\t\t);\n\t\t\tspriteCtx.lineTo(x + Mutable.cellSize / 8, Mutable.cellSize / 8);\n\t\t\tspriteCtx.fillStyle = ppt[i][2];\n\t\t\tspriteCtx.fill();\n\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(\n\t\t\t\tx + Mutable.cellSize / (34 / 33),\n\t\t\t\tMutable.cellSize / 32\n\t\t\t);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / (34 / 33),\n\t\t\t\tMutable.cellSize / (32 / 31)\n\t\t\t);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / (8 / 7),\n\t\t\t\tMutable.cellSize / (8 / 7)\n\t\t\t);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / (8 / 7),\n\t\t\t\tMutable.cellSize / 8\n\t\t\t);\n\t\t\tspriteCtx.fillStyle = ppt[i][2];\n\t\t\tspriteCtx.fill();\n\t\t} else if (settings.Block === 13) {\n\t\t\t// Tetr.js\n\t\t\tspriteCtx.fillStyle = tetrjs[i][2];\n\t\t\tspriteCtx.fillRect(x, 0, Mutable.cellSize, Mutable.cellSize);\n\t\t\tspriteCtx.beginPath();\n\t\t\tspriteCtx.moveTo(x + Mutable.cellSize / 16, Mutable.cellSize / 16);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / 16,\n\t\t\t\tMutable.cellSize / (16 / 10)\n\t\t\t);\n\t\t\tspriteCtx.quadraticCurveTo(\n\t\t\t\tx + Mutable.cellSize / (16 / 8),\n\t\t\t\tMutable.cellSize / (16 / 5),\n\t\t\t\tx + Mutable.cellSize / (16 / 15),\n\t\t\t\tMutable.cellSize / (16 / 4)\n\t\t\t);\n\t\t\tspriteCtx.lineTo(\n\t\t\t\tx + Mutable.cellSize / (16 / 15),\n\t\t\t\tMutable.cellSize / (16 / 1)\n\t\t\t);\n\t\t\tspriteCtx.fillStyle = tetrjs[i][0];\n\t\t\tspriteCtx.fill();\n\t\t}\n\t\ti = iCurrent;\n\t}\n}\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nexport function roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n\tif (typeof stroke == \"undefined\") {\n\t\tstroke = true;\n\t}\n\tif (typeof radius === \"undefined\") {\n\t\tradius = 5;\n\t}\n\tif (typeof radius === \"number\") {\n\t\tradius = { tl: radius, tr: radius, br: radius, bl: radius };\n\t} else {\n\t\tconst defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n\t\tfor (const side in defaultRadius) {\n\t\t\tradius[side] = radius[side] || defaultRadius[side];\n\t\t}\n\t}\n\tctx.beginPath();\n\tctx.moveTo(x + radius.tl, y);\n\tctx.lineTo(x + width - radius.tr, y);\n\tctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n\tctx.lineTo(x + width, y + height - radius.br);\n\tctx.quadraticCurveTo(\n\t\tx + width,\n\t\ty + height,\n\t\tx + width - radius.br,\n\t\ty + height\n\t);\n\tctx.lineTo(x + radius.bl, y + height);\n\tctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n\tctx.lineTo(x, y + radius.tl);\n\tctx.quadraticCurveTo(x, y, x + radius.tl, y);\n\tctx.closePath();\n\tif (fill) {\n\t\tctx.fill();\n\t}\n\tif (stroke) {\n\t\tctx.stroke();\n\t}\n}\n\n/**\n * Draws a 2d array of minos.\n */\nexport function draw(tetro, cx, cy, ctx, color, darkness?) {\n\tfor (let x = 0, len = tetro.length; x < len; x++) {\n\t\tfor (let y = 0, wid = tetro[x].length; y < wid; y++) {\n\t\t\tif (tetro[x][y]) {\n\t\t\t\tdrawCell(\n\t\t\t\t\tx + cx,\n\t\t\t\t\ty + cy,\n\t\t\t\t\tcolor !== undefined ? color : tetro[x][y],\n\t\t\t\t\tctx,\n\t\t\t\t\tdarkness\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// ========================== Controller ======================================\n\nexport const key = {\n\t8: \"Backspace\",\n\t9: \"Tab\",\n\t13: \"Enter\",\n\t16: \"Shift\",\n\t17: \"Ctrl\",\n\t18: \"Alt\",\n\t19: \"Pause\",\n\t20: \"Caps Lock\",\n\t27: \"Esc\",\n\t32: \"Space\",\n\t33: \"PgUp\",\n\t34: \"PgDn\",\n\t35: \"End\",\n\t36: \"Home\",\n\t37: \"\u2190\",\n\t38: \"\u2191\",\n\t39: \"\u2192\",\n\t40: \"\u2193\",\n\t45: \"Insert\",\n\t46: \"Delete\",\n\t48: \"0\",\n\t49: \"1\",\n\t50: \"2\",\n\t51: \"3\",\n\t52: \"4\",\n\t53: \"5\",\n\t54: \"6\",\n\t55: \"7\",\n\t56: \"8\",\n\t57: \"9\",\n\t59: \";\",\n\t61: \"=\",\n\t65: \"A\",\n\t66: \"B\",\n\t67: \"C\",\n\t68: \"D\",\n\t69: \"E\",\n\t70: \"F\",\n\t71: \"G\",\n\t72: \"H\",\n\t73: \"I\",\n\t74: \"J\",\n\t75: \"K\",\n\t76: \"L\",\n\t77: \"M\",\n\t78: \"N\",\n\t79: \"O\",\n\t80: \"P\",\n\t81: \"Q\",\n\t82: \"R\",\n\t83: \"S\",\n\t84: \"T\",\n\t85: \"U\",\n\t86: \"V\",\n\t87: \"W\",\n\t88: \"X\",\n\t89: \"Y\",\n\t90: \"Z\",\n\t96: \"0kpad\",\n\t97: \"1kpad\",\n\t98: \"2kpad\",\n\t99: \"3kpad\",\n\t100: \"4kpad\",\n\t101: \"5kpad\",\n\t102: \"6kpad\",\n\t103: \"7kpad\",\n\t104: \"8kpad\",\n\t105: \"9kpad\",\n\t106: \"*\",\n\t107: \"+\",\n\t109: \"-\",\n\t110: \".\",\n\t111: \"/\",\n\t112: \"F1\",\n\t113: \"F2\",\n\t114: \"F3\",\n\t115: \"F4\",\n\t116: \"F5\",\n\t117: \"F6\",\n\t118: \"F7\",\n\t119: \"F8\",\n\t120: \"F9\",\n\t121: \"F10\",\n\t122: \"F11\",\n\t123: \"F12\",\n\t173: \"-\",\n\t186: \";\",\n\t187: \"=\",\n\t188: \",\",\n\t189: \"-\",\n\t190: \".\",\n\t191: \"/\",\n\t192: \"`\",\n\t219: \"[\",\n\t220: \"\\\\\",\n\t221: \"]\",\n\t222: \"'\",\n\tundefined: \"---\",\n\t0: \"---\",\n};\n\nexport function keyUpDown(e) {\n\t// TODO send to menu or game depending on context.\n\tif ([32, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) e.preventDefault();\n\t//TODO if active, prevent default for binded keys\n\t//if (bindsArr.indexOf(e.keyCode) !== -1)\n\t// e.preventDefault();\n\tif (e.type === \"keydown\" && e.keyCode === binds.pause) {\n\t\tif (Game.paused) {\n\t\t\tGame.unpause();\n\t\t} else {\n\t\t\tGame.pause();\n\t\t}\n\t}\n\tif (e.type === \"keydown\" && e.keyCode === binds.retry) {\n\t\tGame.init(Game.type, Game.params);\n\t}\n\tif (!Mutable.watchingReplay) {\n\t\tif (e.type === \"keydown\") {\n\t\t\tif (e.keyCode === binds.moveLeft) {\n\t\t\t\tMutable.keysDown |= flags.moveLeft;\n\t\t\t} else if (e.keyCode === binds.moveRight) {\n\t\t\t\tMutable.keysDown |= flags.moveRight;\n\t\t\t} else if (e.keyCode === binds.moveDown) {\n\t\t\t\tMutable.keysDown |= flags.moveDown;\n\t\t\t} else if (e.keyCode === binds.hardDrop) {\n\t\t\t\tMutable.keysDown |= flags.hardDrop;\n\t\t\t} else if (e.keyCode === binds.rotRight) {\n\t\t\t\tMutable.keysDown |= flags.rotRight;\n\t\t\t} else if (e.keyCode === binds.rotLeft) {\n\t\t\t\tMutable.keysDown |= flags.rotLeft;\n\t\t\t} else if (e.keyCode === binds.rot180) {\n\t\t\t\tMutable.keysDown |= flags.rot180;\n\t\t\t} else if (e.keyCode === binds.moveLeft3) {\n\t\t\t\tMutable.keysDown |= flags.moveLeft3;\n\t\t\t} else if (e.keyCode === binds.moveRight3) {\n\t\t\t\tMutable.keysDown |= flags.moveRight3;\n\t\t\t} else if (e.keyCode === binds.holdPiece) {\n\t\t\t\tMutable.keysDown |= flags.holdPiece;\n\t\t\t}\n\t\t} else if (e.type === \"keyup\") {\n\t\t\tif (\n\t\t\t\te.keyCode === binds.moveLeft &&\n\t\t\t\tMutable.keysDown & flags.moveLeft\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.moveLeft;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.moveRight &&\n\t\t\t\tMutable.keysDown & flags.moveRight\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.moveRight;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.moveDown &&\n\t\t\t\tMutable.keysDown & flags.moveDown\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.moveDown;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.hardDrop &&\n\t\t\t\tMutable.keysDown & flags.hardDrop\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.hardDrop;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.rotRight &&\n\t\t\t\tMutable.keysDown & flags.rotRight\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.rotRight;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.rotLeft &&\n\t\t\t\tMutable.keysDown & flags.rotLeft\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.rotLeft;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.rot180 &&\n\t\t\t\tMutable.keysDown & flags.rot180\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.rot180;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.moveLeft3 &&\n\t\t\t\tMutable.keysDown & flags.moveLeft3\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.moveLeft3;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.moveRight3 &&\n\t\t\t\tMutable.keysDown & flags.moveRight3\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.moveRight3;\n\t\t\t} else if (\n\t\t\t\te.keyCode === binds.holdPiece &&\n\t\t\t\tMutable.keysDown & flags.holdPiece\n\t\t\t) {\n\t\t\t\tMutable.keysDown ^= flags.holdPiece;\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { rng } from \"./randomizer\";\n\n/*\n(Copied from https://tetris.fandom.com/wiki/Blackjack)\nSyntax\n[list]\n\tChoose a piece at random from the comma-separated list and deal it. Duplicates are permitted, making the duplicated pieces more likely. Equivalent to 1 bag of list, list with 0 history, or list with len history 1 rolls.\nbag of [list]\n\tMake a bag of list and deal them all in random sequence, then reshuffle. Equivalent to len(list) bag of list.\n[number] bag of [list]\n\tMake a bag of list and deal the first number in random sequence, then reshuffle.\nsequence of [list]\n\tStarting with the first piece of list, deal each piece in turn. When the end of the list is reached, start again from the beginning. Equivalent to list with len(list)-1 history\n[list] with [len] history\n\tKeep a list called history of the last len pieces dealt. (Repeated pieces in list are separate pieces for purpose of the history.) Choose a piece at random from list which is not in history and deal it. Then put the piece in history and remove the oldest piece from history.\n[list] with [len] history [number] rolls\n\tKeep a list called history of the last len pieces dealt. (Repeated pieces in list are separate pieces for purpose of the history.) Up to number times, choose a piece at random from list, and if it is not in history, deal it. Otherwise, deal the last piece chosen. Then put the piece in history and remove the oldest piece from history.\n[spec] first [list]\n\tFollow spec, except choose the first piece from list.\n*/\n\nfunction wrapGenerator<T>(gen: () => Generator<T>) {\n\tlet iter = gen();\n\n\treturn {\n\t\tnext: () => {\n\t\t\treturn iter.next().value as T;\n\t\t},\n\t\treset: () => {\n\t\t\titer = gen();\n\t\t},\n\t\t[Symbol.iterator]: () => {\n\t\t\treturn iter;\n\t\t}, \n\t};\n}\n\n/*\nconst rng = wrapGenerator(function* () {\n\tlet seed = Math.floor(Math.random() * 2147483647)\n\twhile (true) yield (seed = (seed * 16807) % 2147483647) / 2147483647;\n});\n*/\n\nfunction shuffleArray<T>(array: T[]): T[] {\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(rng.next() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\treturn array;\n}\n\nconst bagOfRegex = /^(\\d+)?\\+?(\\d+)? ?bag of (.*)$/;\nconst sequenceOfRegex = /^(\\d+) ?(random)? ?sequence of (.*)$/;\nconst withRegex =\n\t/^(.*) with (\\d+) history(?: (\\d+) rolls)?(?: starting with (.*))?$/;\nconst listItemRegex = /^(\\d*)?\\*?(.*)$/;\nconst firstRegex = /^(.*) but first (.*)$/;\n\nfunction listNormalize(list: string): string[] {\n\treturn list.split(\",\").flatMap((x: string) => {\n\t\tconst str = x.trim();\n\t\tif (str.length === 0) return [];\n\t\tconst match = listItemRegex.exec(str);\n\t\tif (!match) return [];\n\t\tconst [, count, item] = match;\n\t\tif (!count) return item;\n\t\telse return Array<string>(parseInt(count, 10)).fill(item);\n\t});\n}\n\nconst whitespaceRegex = /\\s+/g;\n\nfunction chooseRandom<T>(list: T[]): T {\n\treturn list[Math.floor(rng.next() * list.length)];\n}\n\n function createRandomizer(str: string) {\n\tstr = str.replace(whitespaceRegex, \" \");\n\n\tlet first: string[] | undefined;\n\n\tlet res: RegExpExecArray | null = null;\n\n\tres = firstRegex.exec(str);\n\tif (res) {\n\t\tconst [, list, firstList] = res;\n\t\tfirst = listNormalize(firstList);\n\t\tstr = list;\n\t}\n\n\tres = bagOfRegex.exec(str);\n\tif (res) {\n\t\tconst list = listNormalize(res[3]);\n\t\tconst count = res[1] ? parseInt(res[1], 10) : list.length;\n\t\tconst bonus = res[2] ? parseInt(res[2], 10) : 0;\n\n\t\tconst len = count + bonus;\n\t\treturn function* () {\n\t\t\tlet bag = shuffleArray(list.slice());\n\t\t\tlet bonusBag: string[] = [];\n\t\t\tif (first) {\n\t\t\t\tconst piece = chooseRandom(first);\n\t\t\t\tyield piece;\n\t\t\t\tbag = bag.filter((x) => x !== piece);\n\t\t\t}\n\t\t\t\n\t\t\twhile (true) {\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\tif (!bag.length) {\n\t\t\t\t\t\tif (bonus) {\n\t\t\t\t\t\t\tif (!bonusBag.length)\n\t\t\t\t\t\t\t\tbonusBag = shuffleArray(list.slice());\n\t\t\t\t\t\t\tyield bonusBag.pop();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tyield chooseRandom(list);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tyield bag.pop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbag = shuffleArray(list.slice());\n\t\t\t}\n\t\t};\n\t}\n\tres = sequenceOfRegex.exec(str);\n\tif (res) {\n\t\tconst list = listNormalize(res[3]);\n\t\tconst len = res[1] ? parseInt(res[1]) : undefined;\n\t\tconst random = res[2] === \"random\";\n\t\tlet newList = first ? [chooseRandom(first)] : [];\n\t\tif (len) {\n\t\t\twhile (newList.length < len) {\n\t\t\t\tif (random) {\n\t\t\t\t\tnewList.push(chooseRandom(list));\n\t\t\t\t} else {\n\t\t\t\t\tnewList.push(...list);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewList = newList.slice(0, len);\n\t\t} else {\n\t\t\tnewList = list;\n\t\t}\n\t\treturn function* () {\n\t\t\twhile (true) {\n\t\t\t\tyield* newList;\n\t\t\t}\n\t\t};\n\t}\n\tres = withRegex.exec(str);\n\tif (res) {\n\t\tconst list = listNormalize(res[1]);\n\t\tconst historyLen = parseInt(res[2]);\n\t\tconst rolls = res[3] ? parseInt(res[3]) : undefined;\n\t\tconst history = res[4] ? listNormalize(res[4]) : [];\n\t\treturn function* () {\n\t\t\tif (first) {\n\t\t\t\tconst piece = chooseRandom(first);\n\t\t\t\tyield piece;\n\t\t\t\tif (history.length === historyLen) history.shift();\n\t\t\t\thistory.push(piece);\n\t\t\t}\n\t\t\twhile (true) {\n\t\t\t\tconst arr = shuffleArray(list.slice());\n\t\t\t\tfor (let i = 0; i < (rolls ?? list.length); i++) {\n\t\t\t\t\tconst piece = chooseRandom(arr);\n\t\t\t\t\tif (!history.includes(piece) || (rolls && i + 1 == rolls)) {\n\t\t\t\t\t\tyield piece;\n\t\t\t\t\t\tif (history.length === historyLen) history.shift();\n\t\t\t\t\t\thistory.push(piece);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tconst list = listNormalize(str);\n\treturn function* () {\n\t\tif (first) yield chooseRandom(first);\n\t\twhile (true) {\n\t\t\tyield list[Math.floor(rng.next() * list.length)];\n\t\t}\n\t};\n}\n\nconst rand = (str: string) => wrapGenerator(createRandomizer(str));\n\nexport const tgm1 = rand(\n\t`I,J,L,O,S,T,Z\n\t\twith 4 history 4 rolls starting with Z,Z,Z,Z\n\t\tbut first I,J,L,T`\n);\nexport const tgm2 = rand(\n\t`I,J,L,O,S,T,Z\n\t\twith 4 history 6 rolls starting with Z,S,Z,S\n\t\tbut first I,J,L,T`\n);\n// this is incomplete because I am unsure of how to represent the least recently used piece\nexport const tgm3 = rand(\n\t`5*I,5*J,5*L,5*O,5*S,5*T,5*Z\n\t\twith 4 history 6 rolls starting with Z,S,Z,S\n\t\t${/*weighted on frequency // maybe?*/\"\"}\n\t\tbut first I,J,L,T`\n);\nexport const ace = rand(\"bag of I,J,L,O,S,T,Z but first I,J,L,T\");\n\nexport const guideline = rand(\"bag of I,J,L,O,S,T,Z\");\nexport const alexey = rand(\"I,J,L,O,S,T,Z\");\nexport const nes = rand(\"I,J,L,O,S,T,Z with 1 history\");\n//\nexport const square = rand(\"bag of 9*I,9*J,9*L,9*O,9*S,9*T,9*Z\");\nexport const sega = rand(\"1000 random sequence of I,J,L,O,S,T,Z\");\n\n// has a \"bonus\" bag, which is used if the bag is empty up to the number of times specified\n// (i.e. 7+1 is 1 draw from the bonus bag)\nexport const bonusBag = rand(\"7+1 bag of I,J,L,O,S,T,Z\");\n// this is different because once finished with the bag it generates a new piece randomly\nexport const bag8 = rand(\"8 bag of I,J,L,O,S,T,Z\");\n\nexport const iOnly = rand(\"I\");\nexport const noI = rand(\"bag of J,L,O,S,T,Z\");", "import { $, $setText, clear } from \"../../utils/utils\";\nimport { settings } from \"../../settings\";\nimport { spinCheck, stack } from \"./stack\";\nimport { sound } from \"../sound/sound\";\nimport { preview } from \"./preview\";\nimport { GameState, GameType } from \"../../utils/enums\";\nimport { Game } from \"../../game\";\nimport {\n\tElements,\n\tflags,\n\tgravityUnit,\n\tmiscTableTGM,\n\tMutable,\n\tPieceData,\n\tpieces,\n\tspeedTableTGM,\n\tWKTableCultris,\n\tWKTableDRS,\n\tWKTableDX,\n\tWKTableSRS,\n} from \"../../utils/data\";\nimport { hold } from \"../../logic/hold\";\nimport { draw } from \"../../logic/view\";\nimport { mod } from \"../../utils/math\";\nimport { menu } from \"../menu\";\nimport { MatrixDir, shiftMatrix } from \"./matrix\";\nimport { scoreNesRefresh } from \"../../random_stuff\";\n\nclass Piece {\n\tx: number;\n\n\ty: number;\n\n\tpos: number;\n\n\ttetro: any;\n\n\tindex: any;\n\n\tgravity: any;\n\n\tlockDelay: number;\n\n\tlockDelayLimit: number;\n\n\tare: number;\n\n\tareLimit: number;\n\n\tirsDir: number;\n\n\tihs: boolean;\n\n\tshiftDelay: number;\n\n\tshiftDir: number;\n\n\tshiftReleased: boolean;\n\n\tarrDelay: number;\n\n\theld: boolean;\n\n\tfinesse: number;\n\n\tdirty: boolean;\n\n\tdead: boolean;\n\n\trotateLimit: number;\n\n\tmoveLimit: number;\n\n\tdelayCounting: boolean;\n\n\tclassicRuleDelayLast: number;\n\n\tconstructor() {\n\t\tthis.x;\n\t\tthis.y;\n\t\tthis.pos = 0;\n\t\tthis.tetro;\n\t\tthis.index;\n\t\tthis.gravity = gravityUnit;\n\t\tthis.lockDelay = 0;\n\t\tthis.lockDelayLimit = 30;\n\t\tthis.are = 0;\n\t\tthis.areLimit = 0;\n\t\tthis.irsDir = 0;\n\t\tthis.ihs = false;\n\t\tthis.shiftDelay = 0;\n\t\tthis.shiftDir = 0;\n\t\tthis.shiftReleased = false;\n\t\tthis.arrDelay = 0;\n\t\tthis.held = false;\n\t\tthis.finesse = 0;\n\t\tthis.dirty = false;\n\t\tthis.dead = true;\n\t\tthis.rotateLimit = 0;\n\t\tthis.moveLimit = 0;\n\t\tthis.delayCounting = false;\n\t}\n\n\t/**\n\t * Removes last active piece, and gets the next active piece from the grab bag.\n\t */\n\tnew(index) {\n\t\t// TODO if no arguments, get next grabbag piece\n\t\t//console.log(\"new irs\"+this.irsDir+\", ihs\"+this.ihs);\n\t\t$(\"irs-indicator\").classList.add(\"gone\");\n\t\t$(\"ihs-indicator\").classList.add(\"gone\");\n\n\t\tconst rot = settings.RotSys.initinfo[index];\n\t\tthis.pos = rot[2];\n\t\tthis.x = ~~((stack.width - 4) / 2) + rot[0];\n\t\tif (Game.type === GameType.Retro || Game.type === GameType.Grades) {\n\t\t\tthis.y = stack.hiddenHeight - 1 + rot[1];\n\t\t} else {\n\t\t\tthis.y = stack.hiddenHeight + rot[1];\n\t\t}\n\t\tthis.rotateLimit = 0;\n\t\tthis.moveLimit = 0;\n\t\tthis.delayCounting = false;\n\t\tthis.index = index;\n\t\tthis.tetro = [];\n\t\tthis.held = false;\n\t\t$(\"a\").classList.remove(\"greyed\");\n\t\tthis.ihs = false;\n\t\tthis.finesse = 0;\n\t\tthis.dirty = true;\n\t\tthis.dead = false;\n\t\tthis.lockDelay = 0;\n\t\tthis.classicRuleDelayLast = 0;\n\n\t\tif (settings.NextSound) {\n\t\t\tsound.playSFX(\"piece\" + preview.grabBag[0]);\n\t\t}\n\t\tconst lineVector = $<HTMLImageElement>(\"linevector\");\n\t\tconst ivector = $(\"ivalue\");\n\t\tif (index == 0 && Game.type === GameType.Retro) {\n\t\t\tMutable.lineDrought = 0;\n\t\t\tMutable.lineAmount++;\n\t\t\tivector.style.color = \"#ffffff\";\n\t\t\tlineVector.classList.remove(\"drought-flash\");\n\t\t\tlineVector.src = \"./assets/linevector.svg\";\n\t\t\t$setText(Elements.statsIpieces, Mutable.lineAmount);\n\t\t} else {\n\t\t\tMutable.lineDrought++;\n\t\t\tif (Mutable.lineDrought >= 13) {\n\t\t\t\tif (Game.params.proMode == true) {\n\t\t\t\t\tsound.raisesidebgm();\n\t\t\t\t}\n\n\t\t\t\tivector.style.color = \"#ff0000\";\n\t\t\t\tlineVector.classList.add(\"drought-flash\");\n\t\t\t\tlineVector.src = \"./assets/linevectorred.svg\";\n\t\t\t\tif (Mutable.lineDrought < 25) {\n\t\t\t\t\t// sound.playse(\"drought\")\n\t\t\t\t} else {\n\t\t\t\t\t// sound.playse(\"droughtintense\")\n\t\t\t\t}\n\t\t\t\t$setText(Elements.statsIpieces, Mutable.lineDrought);\n\t\t\t} else if (Game.params.proMode == true) {\n\t\t\t\tsound.lowersidebgm();\n\t\t\t}\n\t\t}\n\t\t// TODO Do this better. Make clone object func maybe.\n\t\t//for property in pieces, this.prop = piece.prop\n\t\tif (this.irsDir !== 0) {\n\t\t\tsound.playSFX(\"initialrotate\");\n\t\t\tconst curPos = this.pos;\n\t\t\tconst newPos = mod(this.pos + this.irsDir, 4);\n\t\t\tconst rot = settings.RotSys.offset[this.index];\n\t\t\tconst offsetX = rot[newPos][0] - rot[curPos][0];\n\t\t\tconst offsetY = rot[newPos][1] - rot[curPos][1];\n\t\t\tthis.tetro = pieces[index].tetro[newPos];\n\t\t\tif (!this.moveValid(offsetX, offsetY, this.tetro)) {\n\t\t\t\tthis.tetro = pieces[index].tetro[curPos];\n\t\t\t} else {\n\t\t\t\tthis.x += offsetX;\n\t\t\t\tthis.y += offsetY;\n\t\t\t\tthis.pos = newPos;\n\t\t\t}\n\t\t\tthis.irsDir = 0;\n\t\t} else {\n\t\t\tthis.tetro = pieces[index].tetro[this.pos];\n\t\t}\n\n\t\tthis.lockDelayLimit = settings.LockDelay;\n\t\tif (Game.type === GameType.Master) {\n\t\t\t//Death\n\t\t\tthis.gravity = 20;\n\t\t\tif (Mutable.level < 20) {\n\t\t\t\tthis.lockDelayLimit = [\n\t\t\t\t\t30, 25, 22, 20, 20, 18, 17, 17, 15, 15, 13, 13, 13, 13, 13,\n\t\t\t\t\t12, 12, 12, 11, 11,\n\t\t\t\t][Mutable.level];\n\t\t\t} else {\n\t\t\t\tthis.lockDelayLimit = 11;\n\t\t\t}\n\t\t} else if (settings.Gravity !== 0) {\n\t\t\tthis.gravity = Mutable.gravityArr[settings.Gravity - 1];\n\t\t} else if (Game.type === GameType.Marathon) {\n\t\t\t//Marathon\n\t\t\t// if (Scores.level < 20) {\n\t\t\t// this.gravity = [\n\t\t\t// 1/63, 1/50, 1/39, 1/30, 1/22, 1/16, 1/12, 1/8,  1/6,  1/4,\n\t\t\t// 1/3,  1/2,  1,  465/256,  731/256,  1280/256,    1707/256,   14,    19,    20\n\t\t\t// ]\n\t\t\t// [Scores.level];\n\t\t\t// } else {\n\t\t\t// this.gravity = 20;\n\t\t\t// this.lockDelayLimit = ~~(30 * Math.pow(0.93, (Math.pow(Scores.level-20, 0.8)))); // magic!\n\t\t\t// }\n\t\t\tif (Mutable.level < 18) {\n\t\t\t\tconst x = Mutable.level + 1;\n\t\t\t\tthis.gravity = 1 / ((0.8 - (x - 1) * 0.007) ** (x - 1) * 60);\n\t\t\t} else if (Mutable.level < 19) {\n\t\t\t\tthis.gravity = 19.99;\n\t\t\t} else {\n\t\t\t\tthis.gravity = 20;\n\t\t\t\tthis.lockDelayLimit = ~~(\n\t\t\t\t\t30 * Math.pow(0.93, Math.pow(Mutable.level - 19, 0.8))\n\t\t\t\t); // magic!\n\t\t\t}\n\t\t} else if (Game.type === GameType.Retro) {\n\t\t\t//Classic\n\t\t\tif (Mutable.level <= 29) {\n\t\t\t\tthis.gravity = [\n\t\t\t\t\t1 / 48,\n\t\t\t\t\t1 / 43,\n\t\t\t\t\t1 / 38,\n\t\t\t\t\t1 / 33,\n\t\t\t\t\t1 / 28,\n\t\t\t\t\t1 / 23,\n\t\t\t\t\t1 / 18,\n\t\t\t\t\t1 / 13,\n\t\t\t\t\t1 / 8,\n\t\t\t\t\t1 / 6,\n\t\t\t\t\t1 / 5,\n\t\t\t\t\t1 / 5,\n\t\t\t\t\t1 / 5,\n\t\t\t\t\t1 / 4,\n\t\t\t\t\t1 / 4,\n\t\t\t\t\t1 / 4,\n\t\t\t\t\t1 / 3,\n\t\t\t\t\t1 / 3,\n\t\t\t\t\t1 / 3,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1 / 2,\n\t\t\t\t\t1,\n\t\t\t\t][Mutable.level];\n\t\t\t} else {\n\t\t\t\tthis.gravity = 1;\n\t\t\t}\n\t\t} else if (Game.type === GameType.Grades) {\n\t\t\t//tgm\n\n\t\t\tlet speedI = 0;\n\t\t\twhile (Mutable.leveltgm > speedTableTGM[speedI].level) {\n\t\t\t\tif (Mutable.leveltgm < speedTableTGM[speedI + 1].level) {\n\t\t\t\t\tpiece.gravity = speedTableTGM[speedI].speed;\n\t\t\t\t}\n\t\t\t\tspeedI++;\n\t\t\t}\n\n\t\t\tif (Mutable.leveltgm < 100) {\n\t\t\t\t//ghost visiblity\n\t\t\t\tsettings.Ghost = 1;\n\t\t\t} else {\n\t\t\t\tsettings.Ghost = 2;\n\t\t\t}\n\n\t\t\tlet miscI = 0;\n\t\t\twhile (Mutable.leveltgm > miscTableTGM[miscI].level) {\n\t\t\t\tif (Mutable.leveltgm < miscTableTGM[miscI + 1].level) {\n\t\t\t\t\tpiece.areLimit = miscTableTGM[miscI].are;\n\t\t\t\t\tMutable.lineARE = miscTableTGM[miscI].areline;\n\t\t\t\t\tMutable.lineAREb = miscTableTGM[miscI].arelineb;\n\t\t\t\t\tsettings.DAS = miscTableTGM[miscI].das;\n\t\t\t\t\tsettings.LockDelay = miscTableTGM[miscI].lockdelay;\n\t\t\t\t}\n\t\t\t\tmiscI++;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.gravity = gravityUnit;\n\t\t}\n\t\tif (Game.type === GameType.Sprint) {\n\t\t\tif (this.lockDelayLimit < 8) {\n\t\t\t\tthis.lockDelayLimit = 8;\n\t\t\t}\n\t\t}\n\n\t\t// Check for blockout.\n\t\tlet blockOut = false;\n\t\tif (!this.moveValid(0, 0, this.tetro)) {\n\t\t\tif (Game.type === (8 || 9)) {\n\t\t\t\tblockOut = true;\n\t\t\t} else if (!this.moveValid(0, -1, this.tetro)) {\n\t\t\t\tif (!this.moveValid(0, -2, this.tetro)) {\n\t\t\t\t\tblockOut = true;\n\t\t\t\t} else {\n\t\t\t\t\tpiece.y -= 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpiece.y -= 1;\n\t\t\t}\n\t\t}\n\t\tif (blockOut == true) {\n\t\t\tif (Game.type !== (8 || 9)) {\n\t\t\t\tpiece.y -= 2;\n\t\t\t}\n\t\t\tGame.state = GameState.BlockOut;\n\t\t\t$setText(Elements.msg, \"BLOCK OUT!\");\n\t\t\tif (Game.params.tournament == true) {\n\t\t\t\t$setText(Elements.msg, \"GAME SET\");\n\t\t\t}\n\t\t\tGame.types[Game.type].die();\n\t\t\tmenu(3);\n\t\t\tsound.playSFX(\"gameover\");\n\t\t\tsound.playvox(\"lose\");\n\t\t\treturn;\n\t\t}\n\n\t\t//real 20G\n\t\tif (this.gravity >= 20) {\n\t\t\tthis.checkFall();\n\t\t}\n\t\tthis.landed = !this.moveValid(0, 1, this.tetro);\n\t\tif (flags.moveDown & Mutable.keysDown) {\n\t\t\tconst grav = Mutable.gravityArr[settings.SoftDrop + 1];\n\t\t\tif (grav >= 20)\n\t\t\t\t// 20G softdrop = 20G gravity\n\t\t\t\tthis.y += this.getDrop(grav);\n\t\t\t//piece.finesse++;\n\t\t}\n\t\t// die-in-one-frame!\n\t\tif (this.landed && this.lockDelay >= this.lockDelayLimit) {\n\t\t\tthis.checkLock();\n\t\t}\n\t\tthis.delayCounting = false;\n\t}\n\n\ttryKickList(kickList, rotated, newPos, offsetX, offsetY) {\n\t\tlet failedRotations = 0;\n\t\tMutable.rotationFailed = false;\n\n\t\tfor (let k = 0, len = kickList.length; k < len; k++) {\n\t\t\tif (\n\t\t\t\tthis.moveValid(\n\t\t\t\t\toffsetX + kickList[k][0],\n\t\t\t\t\toffsetY + kickList[k][1],\n\t\t\t\t\trotated\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.x += offsetX + kickList[k][0];\n\t\t\t\tthis.y += offsetY + kickList[k][1];\n\t\t\t\tthis.tetro = rotated;\n\t\t\t\tthis.pos = newPos;\n\t\t\t\tthis.finesse++;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tfailedRotations++;\n\t\t\t}\n\t\t}\n\t\tif (failedRotations >= kickList.length) {\n\t\t\tMutable.rotationFailed = true;\n\t\t}\n\t}\n\n\trotate(direction) {\n\t\tif (this.delayCounting === true) {\n\t\t\tthis.rotateLimit++;\n\t\t}\n\t\tsound.playSFX(\"rotate\");\n\n\t\t// Goes thorugh kick data until it finds a valid move.\n\t\tconst curPos = mod(this.pos, 4);\n\t\tconst newPos = mod(this.pos + direction, 4);\n\t\t// Rotates tetromino.\n\t\tconst rotated = pieces[this.index].tetro[newPos];\n\t\tconst rotSys = settings.RotSys;\n\t\tconst rot = rotSys.offset[this.index];\n\t\tconst offsetX = rot[newPos][0] - rot[curPos][0];\n\t\tconst offsetY = rot[newPos][1] - rot[curPos][1];\n\t\tlet kickList = [];\n\t\tif (rotSys.id === 2 || rotSys.id === 14) {\n\t\t\t//ARS, Plus\n\t\t\tif (this.index === PieceData.I.index) {\n\t\t\t\tif (curPos === 1 || curPos === 3)\n\t\t\t\t\tkickList = [\n\t\t\t\t\t\t[0, 0],\n\t\t\t\t\t\t[+1, 0],\n\t\t\t\t\t\t[-1, 0],\n\t\t\t\t\t\t[+2, 0],\n\t\t\t\t\t];\n\t\t\t\telse\n\t\t\t\t\tkickList = [\n\t\t\t\t\t\t[0, 0],\n\t\t\t\t\t\t[0, -1],\n\t\t\t\t\t\t[0, -2],\n\t\t\t\t\t];\n\t\t\t} else if (\n\t\t\t\tnewPos === 0 ||\n\t\t\t\t((this.index === PieceData.S.index ||\n\t\t\t\t\tthis.index === PieceData.Z.index) &&\n\t\t\t\t\tnewPos === 2)\n\t\t\t)\n\t\t\t\tkickList = [\n\t\t\t\t\t[0, 0],\n\t\t\t\t\t[+1, 0],\n\t\t\t\t\t[-1, 0],\n\t\t\t\t\t[0, -1],\n\t\t\t\t];\n\t\t\telse\n\t\t\t\tkickList = [\n\t\t\t\t\t[0, 0],\n\t\t\t\t\t[+1, 0],\n\t\t\t\t\t[-1, 0],\n\t\t\t\t];\n\t\t\tthis.tryKickList(kickList, rotated, newPos, offsetX, offsetY);\n\t\t} else {\n\t\t\tconst kickIndex = [1, -1, 2].indexOf(direction); // kickDataDirectionIndex\n\t\t\tif (rotSys.id === 0)\n\t\t\t\tkickList = WKTableSRS[this.index][kickIndex][curPos];\n\t\t\telse if (rotSys.id === 1) kickList = WKTableCultris;\n\t\t\telse if (rotSys.id === 15) kickList = WKTableDX[kickIndex][curPos];\n\t\t\telse kickList = WKTableDRS[kickIndex];\n\n\t\t\tthis.tryKickList(kickList, rotated, newPos, offsetX, offsetY);\n\t\t}\n\t\tMutable.spinX = Math.floor(piece.x);\n\t\tMutable.spinY = Math.floor(piece.y);\n\t\tspinCheck();\n\t\tif (settings.Soundbank == 0 && Mutable.isSpin) {\n\t\t\tsound.playSFX(\"tspin0\");\n\t\t}\n\t\tMutable.isSpin = false;\n\t\tMutable.isMini = false;\n\t}\n\n\tcheckShift() {\n\t\t// Shift key pressed event.\n\t\tif (\n\t\t\tMutable.keysDown & flags.moveLeft &&\n\t\t\t!(Mutable.lastKeys & flags.moveLeft)\n\t\t) {\n\t\t\tthis.shiftDelay = 0;\n\t\t\tthis.arrDelay = 0;\n\t\t\tthis.shiftReleased = true;\n\t\t\tthis.shiftDir = -1;\n\t\t\tthis.finesse++;\n\t\t} else if (\n\t\t\tMutable.keysDown & flags.moveRight &&\n\t\t\t!(Mutable.lastKeys & flags.moveRight)\n\t\t) {\n\t\t\tthis.shiftDelay = 0;\n\t\t\tthis.arrDelay = 0;\n\t\t\tthis.shiftReleased = true;\n\t\t\tthis.shiftDir = 1;\n\n\t\t\tthis.finesse++;\n\t\t}\n\t\t// Shift key released event.\n\t\tif (\n\t\t\tthis.shiftDir === 1 &&\n\t\t\t!(Mutable.keysDown & flags.moveRight) &&\n\t\t\tMutable.lastKeys & flags.moveRight &&\n\t\t\tMutable.keysDown & flags.moveLeft\n\t\t) {\n\t\t\tthis.shiftDelay = 0;\n\t\t\tthis.arrDelay = 0;\n\t\t\tthis.shiftReleased = true;\n\t\t\tthis.shiftDir = -1;\n\t\t} else if (\n\t\t\tthis.shiftDir === -1 &&\n\t\t\t!(Mutable.keysDown & flags.moveLeft) &&\n\t\t\tMutable.lastKeys & flags.moveLeft &&\n\t\t\tMutable.keysDown & flags.moveRight\n\t\t) {\n\t\t\tthis.shiftDelay = 0;\n\t\t\tthis.arrDelay = 0;\n\t\t\tthis.shiftReleased = true;\n\t\t\tthis.shiftDir = 1;\n\t\t} else if (\n\t\t\t!(Mutable.keysDown & flags.moveRight) &&\n\t\t\tMutable.lastKeys & flags.moveRight &&\n\t\t\tMutable.keysDown & flags.moveLeft\n\t\t) {\n\t\t\tthis.shiftDir = -1;\n\t\t} else if (\n\t\t\t!(Mutable.keysDown & flags.moveLeft) &&\n\t\t\tMutable.lastKeys & flags.moveLeft &&\n\t\t\tMutable.keysDown & flags.moveRight\n\t\t) {\n\t\t\tthis.shiftDir = 1;\n\t\t} else if (\n\t\t\t(!(Mutable.keysDown & flags.moveLeft) &&\n\t\t\t\tMutable.lastKeys & flags.moveLeft) ||\n\t\t\t(!(Mutable.keysDown & flags.moveRight) &&\n\t\t\t\tMutable.lastKeys & flags.moveRight)\n\t\t) {\n\t\t\tthis.shiftDelay = 0;\n\t\t\tthis.arrDelay = 0;\n\t\t\tthis.shiftReleased = true;\n\t\t\tthis.shiftDir = 0;\n\t\t}\n\t\t// Handle events\n\t\t/* farter */\n\t\t// here problem causes it taking 2 frames to move 1 grid even ARR=1\n\t\tconst dascut = settings.DASCut;\n\t\t//if (dascut) {\n\t\t// this.ShiftDir = 0;\n\t\t// console.log(\"interrupt\")\n\t\t//}\n\n\t\tconst ARR = settings.ARR;\n\t\tconst DAS = settings.DAS;\n\n\t\tif (this.shiftDir) {\n\t\t\t// 1. When key pressed instantly move over once.\n\t\t\tif (this.shiftReleased && DAS !== 0) {\n\t\t\t\tthis.shift(this.shiftDir);\n\t\t\t\tthis.shiftDelay++;\n\t\t\t\tthis.shiftReleased = false;\n\t\t\t\t// 2. Apply DAS delay\n\t\t\t} else if (this.shiftDelay < DAS) {\n\t\t\t\tthis.shiftDelay++;\n\t\t\t\t// 3. Once the delay is complete, move over once.\n\t\t\t\t// Increment delay so this doesn't run again.\n\t\t\t\t// if arr=0, repeat here, not entering 4\n\t\t\t\t// but if dascut, let shiftdelay == das + 1 and arrdelay = 0 which is not < arr\n\t\t\t} else if (this.shiftDelay === DAS) {\n\t\t\t\tthis.shift(this.shiftDir);\n\t\t\t\tif (ARR !== 0 || dascut) this.shiftDelay++;\n\t\t\t\t// 4. Apply ARR delay\n\t\t\t} else if (this.arrDelay < ARR) {\n\t\t\t\tthis.arrDelay++;\n\t\t\t\t// 5. If ARR Delay is full, move piece, and reset delay and repeat.\n\t\t\t\t/*\n\t\t\t\t} else if (this.arrDelay === settings.ARR && settings.ARR !== 0) {\n\t\t\t\t*/\n\t\t\t\tif (this.arrDelay === ARR && ARR !== 0) {\n\t\t\t\t\tthis.shift(this.shiftDir);\n\t\t\t\t\t// console.log(\"moveright\")\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tflags.moveLeft3 & Mutable.keysDown &&\n\t\t\t!(Mutable.lastKeys & flags.moveLeft3)\n\t\t) {\n\t\t\tthis.multiShift(-1, 3);\n\t\t\tthis.finesse++;\n\t\t} else if (\n\t\t\tflags.moveRight3 & Mutable.keysDown &&\n\t\t\t!(Mutable.lastKeys & flags.moveRight3)\n\t\t) {\n\t\t\tthis.multiShift(1, 3);\n\t\t\tthis.finesse++;\n\t\t}\n\t}\n\n\tshift(direction) {\n\t\tthis.arrDelay = 0;\n\t\tconst ARR = settings.ARR;\n\t\tconst DAS = settings.DAS;\n\t\tif (ARR === 0 && this.shiftDelay === DAS) {\n\t\t\tif (this.moveValid(direction, 0, this.tetro)) {\n\t\t\t\tif (direction == 1) {\n\t\t\t\t\tshiftMatrix(MatrixDir.RIGHT);\n\t\t\t\t} else {\n\t\t\t\t\tshiftMatrix(MatrixDir.LEFT);\n\t\t\t\t}\n\t\t\t\tthis.x += direction;\n\t\t\t\t/* farter */ //instant das under 20G\n\t\t\t\tif (this.gravity >= 20) {\n\t\t\t\t\tthis.checkFall();\n\t\t\t\t}\n\t\t\t\tif (flags.moveDown & Mutable.keysDown) {\n\t\t\t\t\tconst grav = Mutable.gravityArr[settings.SoftDrop + 1];\n\t\t\t\t\tif (grav >= 20)\n\t\t\t\t\t\t// 20G softdrop vs. 20G das\n\t\t\t\t\t\tthis.y += this.getDrop(grav);\n\t\t\t\t\t//piece.finesse++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (this.moveValid(direction, 0, this.tetro)) {\n\t\t\tif (this.delayCounting == true) {\n\t\t\t\tthis.moveLimit++;\n\t\t\t}\n\t\t\tthis.x += direction;\n\t\t\tsound.playSFX(\"move\");\n\t\t} else if (direction == 1) {\n\t\t\tshiftMatrix(MatrixDir.RIGHT);\n\t\t} else {\n\t\t\tshiftMatrix(MatrixDir.LEFT);\n\t\t}\n\t\tif (\n\t\t\t!this.moveValid(direction, 0, this.tetro) &&\n\t\t\tGame.type === GameType.Retro\n\t\t) {\n\t\t\tthis.arrDelay = ARR - 1;\n\t\t\tthis.shiftDelay = DAS + 1;\n\t\t}\n\t}\n\n\tmultiShift(direction, count) {\n\t\tfor (\n\t\t\tlet i = 0;\n\t\t\ti < count && this.moveValid(direction, 0, this.tetro);\n\t\t\t++i\n\t\t) {\n\t\t\tthis.x += direction;\n\t\t\tif (this.gravity >= 20) {\n\t\t\t\tthis.checkFall();\n\t\t\t}\n\t\t\tif (flags.moveDown & Mutable.keysDown) {\n\t\t\t\tconst grav = Mutable.gravityArr[settings.SoftDrop + 1];\n\t\t\t\tif (grav >= 20)\n\t\t\t\t\t// 20G softdrop vs. 20G das\n\t\t\t\t\tthis.y += this.getDrop(grav);\n\t\t\t\t//piece.finesse++;\n\t\t\t}\n\t\t}\n\t}\n\n\tshiftDown() {\n\t\tif (this.moveValid(0, 1, this.tetro)) {\n\t\t\tconst grav = Mutable.gravityArr[settings.SoftDrop + 1];\n\t\t\tif (grav >= 1) {\n\t\t\t\tthis.y += this.getDrop(grav);\n\t\t\t} else {\n\t\t\t\tthis.y += grav;\n\t\t\t}\n\t\t}\n\t}\n\n\thardDrop() {\n\t\tif (Game.type !== 8 || Game.params.allowHardDrop == true) {\n\t\t\tif (Game.params.classicRule === true) {\n\t\t\t\tMutable.usedHardDrop = false;\n\t\t\t} else {\n\t\t\t\tsound.playSFX(\"harddrop\");\n\t\t\t\tMutable.usedHardDrop = true;\n\t\t\t}\n\n\t\t\tconst distance = this.getDrop(2147483647);\n\t\t\tthis.y += distance;\n\t\t\tMutable.score += BigInt(\n\t\t\t\tdistance + this.lockDelayLimit - this.lockDelay\n\t\t\t);\n\t\t\tMutable.newScore += BigInt(distance * 2);\n\t\t\tMutable.scoreNes += distance * 2;\n\t\t\tscoreNesRefresh();\n\t\t\t//statisticsStack();\n\t\t\tif (Game.params.classicRule !== true) {\n\t\t\t\tthis.lockDelay = this.lockDelayLimit;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetDrop(distance) {\n\t\tif (Game.type !== 8) {\n\t\t\tif (!this.moveValid(0, 0, this.tetro)) return 0;\n\t\t\tlet i;\n\t\t\tfor (i = 1; i <= distance; i++) {\n\t\t\t\tif (!this.moveValid(0, i, this.tetro)) return i - 1;\n\t\t\t}\n\t\t\treturn i - 1;\n\t\t} else {\n\t\t\tif (!this.moveValid(0, 0, this.tetro)) return 0;\n\t\t\tlet i;\n\t\t\tfor (i = 1; i <= distance; i++) {\n\t\t\t\tif (!this.moveValid(0, i, this.tetro)) return i - 1;\n\t\t\t}\n\t\t\treturn i - 1;\n\t\t}\n\t}\n\n\thold() {\n\t\tif (Game.type !== 8) {\n\t\t\tconst temp = hold.piece;\n\t\t\tif (!this.held) {\n\t\t\t\tif (hold.piece !== undefined) {\n\t\t\t\t\thold.piece = this.index;\n\t\t\t\t\tthis[\"new\"](temp);\n\t\t\t\t} else {\n\t\t\t\t\thold.piece = this.index;\n\t\t\t\t\tthis[\"new\"](preview.next());\n\t\t\t\t}\n\t\t\t\tthis.held = true;\n\t\t\t\t$(\"a\").classList.add(\"greyed\");\n\t\t\t\thold.draw();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if position and orientation passed is valid.\n\t *  We call it for every action instead of only once a frame in case one\n\t *  of the actions is still valid, we don't want to block it.\n\t */\n\tmoveValid(cx, cy, tetro) {\n\t\tcx = cx + this.x;\n\t\tcy = Math.floor(cy + this.y);\n\n\t\tfor (let x = 0; x < tetro.length; x++) {\n\t\t\tfor (let y = 0; y < tetro[x].length; y++) {\n\t\t\t\tif (\n\t\t\t\t\ttetro[x][y] &&\n\t\t\t\t\t(cx + x < 0 ||\n\t\t\t\t\t\tcx + x >= stack.width ||\n\t\t\t\t\t\tcy + y >= stack.height ||\n\t\t\t\t\t\t(cy + y >= 0 && stack.grid[cx + x][cy + y]))\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tGame.type === GameType.Grades ||\n\t\t\t(Game.type === GameType.Master &&\n\t\t\t\t(Game.params.delayStrictness == 1 ||\n\t\t\t\t\tGame.params.delayStrictness == 2))\n\t\t) {\n\t\t\tif (\n\t\t\t\t(Game.params.classicRule !== true &&\n\t\t\t\t\tGame.type === GameType.Grades) ||\n\t\t\t\tGame.params.delayStrictness == 1\n\t\t\t) {\n\t\t\t\tif (this.landed) {\n\t\t\t\t\tthis.delayCounting = true;\n\t\t\t\t\tif (this.moveLimit < 11 && this.rotateLimit < 8) {\n\t\t\t\t\t\tthis.lockDelay = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.lockDelay = 0;\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tGame.params.classicRule == true ||\n\t\t\t\tGame.params.delayStrictness == 2\n\t\t\t) {\n\t\t\t\tif (this.classicRuleDelayLast < Math.floor(this.y)) {\n\t\t\t\t\tthis.lockDelay = 0;\n\t\t\t\t}\n\t\t\t\tif (this.classicRuleDelayLast < Math.floor(this.y)) {\n\t\t\t\t\tthis.classicRuleDelayLast = Math.floor(this.y);\n\t\t\t\t}\n\n\t\t\t\tif (!this.landed) {\n\t\t\t\t\t// this.lockDelay = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.lockDelay = 0;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcheckFall() {\n\t\tconst grav = this.gravity;\n\t\tif (grav > 1) {\n\t\t\tthis.y += this.getDrop(grav);\n\t\t} else {\n\t\t\tthis.y += grav;\n\t\t}\n\t\t/* farter */ // rounding problem\n\t\tif (Math.abs(this.y - Math.round(this.y)) < 0.000001)\n\t\t\tthis.y = Math.round(this.y);\n\t}\n\n\tcheckLock() {\n\t\tif (this.landed) {\n\t\t\tthis.y = Math.floor(this.y); //@sega\n\t\t\tif (this.lockDelay >= this.lockDelayLimit) {\n\t\t\t\tthis.dead = true;\n\t\t\t\tstack.addPiece(this.tetro);\n\t\t\t\tif (Mutable.usedHardDrop === false) {\n\t\t\t\t\tif (Game.type === GameType.Retro) {\n\t\t\t\t\t\tMutable.scoreNes += Math.floor(Mutable.classicSoftDrop);\n\t\t\t\t\t\tscoreNesRefresh();\n\t\t\t\t\t\tMutable.classicSoftDrop = 0;\n\t\t\t\t\t\tMutable.lastYFrame = 0;\n\t\t\t\t\t}\n\t\t\t\t\tsound.playSFX(\"lock\");\n\t\t\t\t\tif (Game.params.classicRule == true) {\n\t\t\t\t\t\tthis.lockDelay = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tMutable.usedHardDrop = false;\n\t\t\t\tthis.dirty = true;\n\t\t\t\tif (Game.state === GameState.Loss) {\n\t\t\t\t\t// lockout! don't spawn next piece\n\t\t\t\t\tif (Game.params.tournament === true) {\n\t\t\t\t\t\t$setText(Elements.msg, \"GAME SET\");\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tthis.held = false;\n\t\t\t\t\t/* farter */\n\t\t\t\t\t// Win?\n\t\t\t\t\tGame.checkWin();\n\t\t\t\t\tif (Game.state === GameState.Normal && piece.dead) {\n\t\t\t\t\t\t// still playing, then spawn the next piece\n\t\t\t\t\t\t// determine next ARE limit\n\t\t\t\t\t\tif (Game.type === GameType.Master) {\n\t\t\t\t\t\t\t//Death\n\t\t\t\t\t\t\tif (Mutable.level < 20) {\n\t\t\t\t\t\t\t\tthis.areLimit = [\n\t\t\t\t\t\t\t\t\t18, 18, 18, 15, 15, 12, 12, 12, 12, 12, 12,\n\t\t\t\t\t\t\t\t\t12, 10, 10, 10, 8, 8, 8, 8, 8,\n\t\t\t\t\t\t\t\t][Mutable.level];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.lockDelayLimit = 11;\n\t\t\t\t\t\t\t\tthis.areLimit = 6;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Mutable.lineClear !== 0) {\n\t\t\t\t\t\t\t\tMutable.lineARE = this.areLimit;\n\t\t\t\t\t\t\t\tthis.areLimit += Mutable.lineARE;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tMutable.lineARE = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Game.type === GameType.Retro) {\n\t\t\t\t\t\t\tif (piece.y >= 21) {\n\t\t\t\t\t\t\t\tthis.areLimit = 10;\n\t\t\t\t\t\t\t} else if (piece.y >= 17) {\n\t\t\t\t\t\t\t\tthis.areLimit = 12;\n\t\t\t\t\t\t\t} else if (piece.y >= 13) {\n\t\t\t\t\t\t\t\tthis.areLimit = 14;\n\t\t\t\t\t\t\t} else if (piece.y >= 9) {\n\t\t\t\t\t\t\t\tthis.areLimit = 16;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.areLimit = 18;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Mutable.lineClear !== 0) {\n\t\t\t\t\t\t\t\tMutable.lineARE = 17;\n\t\t\t\t\t\t\t\tthis.areLimit += Mutable.lineARE;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tMutable.lineARE = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Game.type === GameType.Grades) {\n\t\t\t\t\t\t\tif (Mutable.lineClear !== 0) {\n\t\t\t\t\t\t\t\tthis.areLimit += Mutable.lineARE;\n\t\t\t\t\t\t\t\tthis.areLimit += Mutable.lineAREb;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (Game.type === GameType.Marathon) {\n\t\t\t\t\t\t\tif (Game.params.entryDelay == 1) {\n\t\t\t\t\t\t\t\tMutable.lineARE = 12;\n\t\t\t\t\t\t\t\tthis.areLimit = 6;\n\t\t\t\t\t\t\t\tif (Mutable.lineClear !== 0) {\n\t\t\t\t\t\t\t\t\tthis.areLimit = 24;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Game.params.entryDelay == 2) {\n\t\t\t\t\t\t\t\tMutable.lineARE = 40;\n\t\t\t\t\t\t\t\tthis.areLimit = 25;\n\t\t\t\t\t\t\t\tif (Mutable.lineClear !== 0) {\n\t\t\t\t\t\t\t\t\tthis.areLimit = 65;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.areLimit = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.areLimit === 0) {\n\t\t\t\t\t\t\t// IRS IHS not possible\n\t\t\t\t\t\t\tthis[\"new\"](preview.next()); // may die-in-one-frame\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tGame.state = GameState.Paused;\n\t\t\t\t\t\t\tthis.are = 0;\n\t\t\t\t\t\t\t// $(\"irs-indicator\").classList.add(\"gone\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* farter */\n\t\t\t}\n\t\t}\n\t}\n\n\tlanded = false;\n\n\tupdate() {\n\t\tthis.landed = !this.moveValid(0, 1, this.tetro);\n\n\t\tif (!(this.moveLimit < 10 && this.rotateLimit < 8)) {\n\t\t\tthis.lockDelay = this.lockDelayLimit;\n\t\t}\n\n\t\tif (Game.type === GameType.Retro) {\n\t\t\tif (flags.moveDown & Mutable.keysDown) {\n\t\t\t\tif (Mutable.lastYFrame !== 0) {\n\t\t\t\t\tMutable.classicSoftDrop += piece.y - Mutable.lastYFrame;\n\t\t\t\t}\n\t\t\t\tMutable.lastYFrame = piece.y;\n\t\t\t} else {\n\t\t\t\tMutable.classicSoftDrop = 0;\n\t\t\t}\n\t\t\tif (this.landed) {\n\t\t\t\tif (flags.moveDown & Mutable.keysDown) {\n\t\t\t\t\tMutable.classicGravTest +=\n\t\t\t\t\t\tMutable.gravityArr[settings.SoftDrop];\n\t\t\t\t}\n\t\t\t\tMutable.classicGravTest += Mutable.classicStoredY;\n\t\t\t\tMutable.classicGravTest += this.gravity;\n\t\t\t\tif (Mutable.classicGravTest >= 1) {\n\t\t\t\t\tthis.lockDelay = 99;\n\t\t\t\t\tMutable.classicGravTest = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.y += this.gravity;\n\t\t\t\tpiece.y += Mutable.classicGravTest;\n\t\t\t\tMutable.classicStoredY = piece.y % 1;\n\t\t\t\tMutable.classicGravTest = 0;\n\t\t\t}\n\t\t} else if (flags.moveDown & Mutable.keysDown) {\n\t\t\tif (Mutable.lastYFrame !== 0 && piece.y - Mutable.lastYFrame > 0) {\n\t\t\t\tMutable.newScore += BigInt(\n\t\t\t\t\tMath.floor(piece.y - Mutable.lastYFrame)\n\t\t\t\t);\n\t\t\t\t$setText(\n\t\t\t\t\tElements.statsScore,\n\t\t\t\t\t(~~Mutable.newScore).toLocaleString()\n\t\t\t\t);\n\t\t\t}\n\t\t\tMutable.lastYFrame = piece.y;\n\t\t}\n\t\t// if (Game.type === GameType.Grades) {\n\t\t// if (this.moveLimit < 10 && this.rotateLimit < 8) {\n\t\t// console.log(\"okay!\" + piece.moveLimit + \" \" + piece.rotateLimit)\n\t\t// this.lockDelay = 0;\n\t\t// } else {\n\t\t// this.lockDelay = this.lockDelayLimit;\n\t\t// }\n\t\t// }\n\n\t\tif (this.moveValid(0, 1, this.tetro) && Game.type !== 8) {\n\t\t\tthis.checkFall();\n\t\t}\n\n\t\tif (this.landed) {\n\t\t\tif (\n\t\t\t\tflags.moveDown & Mutable.keysDown &&\n\t\t\t\tGame.type === GameType.Grades\n\t\t\t) {\n\t\t\t\tif (Game.params.classicRule == true) {\n\t\t\t\t\tthis.lockDelay = this.lockDelayLimit;\n\t\t\t\t} else {\n\t\t\t\t\tthis.lockDelay += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!Game.params.noGravity) {\n\t\t\t\tthis.lockDelay++;\n\t\t\t}\n\n\t\t\tthis.checkLock();\n\t\t}\n\t}\n\n\tdraw() {\n\t\tclear(Elements.activeCtx);\n\t\tif (!this.dead) {\n\t\t\tthis.drawGhost();\n\t\t\tif (settings.Ghost !== 3) {\n\t\t\t\tlet a;\n\n\t\t\t\tif (this.landed) {\n\t\t\t\t\tif (Mutable.stepSEPlayed !== true && Game.type !== 8) {\n\t\t\t\t\t\tsound.playSFX(\"step\");\n\t\t\t\t\t\tMutable.stepSEPlayed = true;\n\t\t\t\t\t}\n\n\t\t\t\t\ta = this.lockDelay / this.lockDelayLimit;\n\t\t\t\t\tif (this.lockDelayLimit === 0) a = 0;\n\t\t\t\t\ta = Math.pow(a, 2) * 0.5;\n\t\t\t\t} else {\n\t\t\t\t\tMutable.stepSEPlayed = false;\n\t\t\t\t}\n\t\t\t\tdraw(\n\t\t\t\t\tthis.tetro,\n\t\t\t\t\tthis.x,\n\t\t\t\t\tMath.floor(this.y) - stack.hiddenHeight,\n\t\t\t\t\tElements.activeCtx,\n\t\t\t\t\tsettings.RotSys.color[this.index],\n\t\t\t\t\ta\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawGhost() {\n\t\tElements.activeCtx.globalAlpha = 0.4;\n\t\tif (settings.Ghost === 0 && !this.landed) {\n\t\t\tdraw(\n\t\t\t\tthis.tetro,\n\t\t\t\tthis.x,\n\t\t\t\tMath.floor(this.y + this.getDrop(2147483647)) -\n\t\t\t\t\tstack.hiddenHeight,\n\t\t\t\tElements.activeCtx,\n\t\t\t\t0\n\t\t\t);\n\t\t} else if (settings.Ghost === 1 && !this.landed) {\n\t\t\tdraw(\n\t\t\t\tthis.tetro,\n\t\t\t\tthis.x,\n\t\t\t\tMath.floor(this.y + this.getDrop(2147483647)) -\n\t\t\t\t\tstack.hiddenHeight,\n\t\t\t\tElements.activeCtx,\n\t\t\t\tsettings.RotSys.color[this.index]\n\t\t\t);\n\t\t}\n\t\tElements.activeCtx.globalAlpha = 1;\n\t}\n}\n\nexport let piece = new Piece();\n\nexport function resetPiece() {\n\tpiece = new Piece();\n}\n", "import { Game } from \"../../game\";\nimport { makeSprite, draw } from \"../../logic/view\";\nimport { settings } from \"../../settings\";\nimport { finesse, pieces, Mutable, Elements } from \"../../utils/data\";\nimport { GameState, GameType } from \"../../utils/enums\";\nimport { rng } from \"../../utils/randomizer\";\nimport { $, $setText, clear } from \"../../utils/utils\";\nimport { menu } from \"../menu\";\nimport { sound } from \"../sound/sound\";\nimport { piece } from \"./piece\";\nimport { MatrixDir, shiftMatrix } from \"./matrix\";\nimport { t } from \"../../utils/lang\";\nimport {\n\tsendClearTetrisMessage,\n\tshowSpinMessage,\n\tshowTetrisMessage,\n} from \"./messages\";\nimport { statisticsStack } from \"./stats\";\nimport { scoreNesRefresh, tetRateNesRefresh } from \"../../random_stuff\";\n\nclass Stack {\n\tdirty: boolean;\n\n\twidth;\n\n\theight;\n\n\thiddenHeight;\n\n\tgrid;\n\n\t/**\n\t * Creates a matrix for the playfield.\n\t */\n\tnew(x: number, y: number, hy: number) {\n\t\tconst cells = new Array(x);\n\t\tfor (let i = 0; i < x; i++) {\n\t\t\tcells[i] = new Array(hy + y);\n\t\t}\n\t\tthis.width = x;\n\t\tthis.height = hy + y;\n\t\tthis.hiddenHeight = hy;\n\t\tthis.grid = cells;\n\n\t\tthis.dirty = true;\n\t}\n\n\taddPiece(tetro) {\n\t\tshiftMatrix(MatrixDir.DOWN);\n\t\t$(\"a\").classList.remove(\"greyed\");\n\t\tMutable.lineClear = 0;\n\n\t\tlet once = false;\n\t\tMutable.lockflashX = piece.x;\n\t\tMutable.lockflashY = piece.y;\n\t\tMutable.lockflashTetro = tetro;\n\t\tMutable.lockflash = 2;\n\t\tMutable.lockflashOn = true;\n\n\t\t// spin check\n\t\t/*\n\t\tif (\n\t\t\t!piece.moveValid(-1, 0, piece.tetro) &&\n\t\t\t!piece.moveValid(1, 0, piece.tetro) &&\n\t\t\t!piece.moveValid(0, -1, piece.tetro)\n\t\t) {\n\t\t\tisSpin = true;\n\t\t}\n\t\t*/\n\n\t\tspinCheck();\n\n\t\t// Add the piece to the stack.\n\t\tlet range = [];\n\t\tlet valid = false;\n\t\tfor (let x = 0; x < tetro.length; x++) {\n\t\t\tfor (let y = 0; y < tetro[x].length; y++) {\n\t\t\t\tif (tetro[x][y] && y + piece.y >= 0) {\n\t\t\t\t\tthis.grid[x + piece.x][y + piece.y] =\n\t\t\t\t\t\tsettings.RotSys.color[piece.index];\n\t\t\t\t\t// Get column for finesse\n\t\t\t\t\tif (!once || x + piece.x < Mutable.column) {\n\t\t\t\t\t\tMutable.column = x + piece.x;\n\t\t\t\t\t\tonce = true;\n\t\t\t\t\t}\n\t\t\t\t\t// Check which lines get modified\n\t\t\t\t\tif (range.indexOf(y + piece.y) === -1) {\n\t\t\t\t\t\trange.push(y + piece.y);\n\t\t\t\t\t\t// This checks if any cell is in the play field. If there\n\t\t\t\t\t\t// isn't any this is called a lock out and the game ends.\n\t\t\t\t\t\tif (y + piece.y >= this.hiddenHeight) valid = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Lock out\n\t\tif (!valid) {\n\t\t\tGame.state = GameState.BlockOut;\n\t\t\t$setText(Elements.msg, t(\"lock_out\"));\n\n\t\t\tGame.types[Game.type].die();\n\n\t\t\tmenu(3);\n\t\t\tsound.playSFX(\"gameover\");\n\t\t\tsound.playvox(\"lose\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Check modified lines for full lines.\n\t\trange = range.sort((a, b) => a - b);\n\t\tfor (let row = range[0], len = row + range.length; row < len; row++) {\n\t\t\tlet count = 0;\n\t\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\t\tif (this.grid[x][row]) count++;\n\t\t\t}\n\t\t\t// Clear the line. This basically just moves down the stack.\n\t\t\t// TODO Ponder during the day and see if there is a more elegant solution.\n\t\t\tif (count === this.width) {\n\t\t\t\tMutable.lineClear++; // NOTE stats\n\t\t\t\tconst rowInDig = Mutable.digLines.indexOf(row);\n\t\t\t\tif (rowInDig !== -1) {\n\t\t\t\t\tfor (let y = 0; y < rowInDig; y++) {\n\t\t\t\t\t\tMutable.digLines[y]++;\n\t\t\t\t\t}\n\t\t\t\t\tMutable.digLines.splice(rowInDig, 1);\n\t\t\t\t}\n\t\t\t\tMutable.clearRows.push(row);\n\t\t\t\tfor (let y = row; y >= row; y--) {\n\t\t\t\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\t\t\t\tthis.grid[x][y] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\tfor (var y = row; y >= 1; y--) {\n\t\t\t\t\tfor (var x = 0; x < this.width; x++) {\n\t\t\t\t\t\tthis.grid[x][y] = this.grid[x][y - 1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t*/\n\n\t\t\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\t\t\tthis.grid[x][0] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (Mutable.lineClear !== 0) {\n\t\t\tMutable.lockflash = 0;\n\t\t\tMutable.lockflashOn = false;\n\t\t}\n\t\tif (\n\t\t\tpiece.areLimit == 0 &&\n\t\t\t(Game.params.entryDelay == !(1 || 2) ||\n\t\t\t\tGame.params.entryDelay == undefined)\n\t\t) {\n\t\t\tstack.clearLines();\n\t\t}\n\t\tif (Game.type === GameType.Grades) {\n\t\t\tMutable.levelCheck = Mutable.leveltgm;\n\t\t}\n\t\tlet scoreAdd = BigInt(Mutable.level + 1);\n\t\tlet garbage = 0;\n\n\t\tconst pieceName = [\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"][piece.index];\n\t\tif (Game.type === GameType.Retro) {\n\t\t\tif (Mutable.lineClear !== 0) {\n\t\t\t\tswitch (Mutable.lineClear) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tMutable.scoreNes += 40 * (Mutable.level + 1);\n\t\t\t\t\t\tMutable.nontetNes += Mutable.lineClear;\n\t\t\t\t\t\tshowTetrisMessage(\"SINGLE\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tMutable.scoreNes += 100 * (Mutable.level + 1);\n\t\t\t\t\t\tMutable.nontetNes += Mutable.lineClear;\n\t\t\t\t\t\tshowTetrisMessage(\"DOUBLE\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tMutable.scoreNes += 300 * (Mutable.level + 1);\n\t\t\t\t\t\tMutable.nontetNes += Mutable.lineClear;\n\t\t\t\t\t\tshowTetrisMessage(\"TRIPLE\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tMutable.scoreNes += 1200 * (Mutable.level + 1);\n\t\t\t\t\t\tMutable.tetNes += Mutable.lineClear;\n\t\t\t\t\t\tshowTetrisMessage(\"TETRIS\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tscoreNesRefresh();\n\t\t\t\tMutable.tetRateNes =\n\t\t\t\t\tMutable.tetNes / (Mutable.tetNes + Mutable.nontetNes);\n\t\t\t\ttetRateNesRefresh();\n\n\t\t\t\tsound.playSFX(\"erase\", Mutable.lineClear);\n\t\t\t\tsound.playvox(\"erase\", Mutable.lineClear);\n\t\t\t}\n\t\t} else if (Mutable.lineClear !== 0) {\n\t\t\t//console.log(\"C\"+Scores.combo+\" B\"+Mutable.b2b)\n\t\t\tif (Mutable.isSpin) {\n\t\t\t\tscoreAdd =\n\t\t\t\t\tscoreAdd *\n\t\t\t\t\t([800n, 1200n, 1600n, 2000n][Mutable.lineClear - 1] *\n\t\t\t\t\t\t2n ** BigInt(Mutable.b2b + Mutable.combo));\n\n\t\t\t\tgarbage = [\n\t\t\t\t\t[2, 4, 6, 8],\n\t\t\t\t\t[3, 6, 9, 12],\n\t\t\t\t][Mutable.b2b != 0 ? 1 : 0][Mutable.lineClear - 1];\n\t\t\t\tif (piece.index == 5) {\n\t\t\t\t\tif (Mutable.b2b > 0) {\n\t\t\t\t\t\tsound.playvox(\"b2b_tspin\", Mutable.lineClear);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsound.playvox(\"tspin\", Mutable.lineClear);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsound.playvox(\"erase\", Mutable.lineClear);\n\t\t\t\t}\n\t\t\t\tif (Mutable.b2b > 0) {\n\t\t\t\t\tsound.playSFX(\"b2b_tspin\", Mutable.lineClear);\n\t\t\t\t} else {\n\t\t\t\t\tsound.playSFX(\"tspin\", Mutable.lineClear);\n\t\t\t\t}\n\t\t\t\tif (Mutable.isMini) {\n\t\t\t\t\tMutable.newScore +=\n\t\t\t\t\t\t[0n, 200n, 400n, 600n, 800n][Mutable.lineClear] *\n\t\t\t\t\t\tBigInt(Mutable.level + 1);\n\t\t\t\t} else if (Mutable.b2b > 0) {\n\t\t\t\t\tMutable.newScore += BigInt(\n\t\t\t\t\t\tMath.floor(\n\t\t\t\t\t\t\t[400, 800, 1200, 1600, 3000][Mutable.lineClear] *\n\t\t\t\t\t\t\t\t(Mutable.level + 1) *\n\t\t\t\t\t\t\t\t1.5\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tMutable.newScore +=\n\t\t\t\t\t\t[400n, 800n, 1200n, 1600n, 3000n][Mutable.lineClear] *\n\t\t\t\t\t\tBigInt(Mutable.level + 1);\n\t\t\t\t}\n\n\t\t\t\tMutable.b2b += 1;\n\t\t\t} else if (Mutable.lineClear === 4) {\n\t\t\t\tscoreAdd *= 800n * 2n ** BigInt(Mutable.b2b + Mutable.combo);\n\n\t\t\t\tgarbage = [4, 5][Mutable.b2b != 0 ? 1 : 0];\n\t\t\t\tif (Mutable.b2b > 0) {\n\t\t\t\t\tMutable.newScore += BigInt(\n\t\t\t\t\t\tMath.floor(800 * (Mutable.level + 1) * 1.5)\n\t\t\t\t\t);\n\t\t\t\t\tsound.playvox(\"b2b_erase\", Mutable.lineClear);\n\t\t\t\t\tsound.playSFX(\"b2b_erase\", Mutable.lineClear);\n\t\t\t\t} else {\n\t\t\t\t\tMutable.newScore += BigInt(800 * (Mutable.level + 1));\n\t\t\t\t\tsound.playvox(\"erase\", Mutable.lineClear);\n\t\t\t\t\tsound.playSFX(\"erase\", Mutable.lineClear);\n\t\t\t\t}\n\t\t\t\tMutable.b2b += 1;\n\t\t\t} else {\n\t\t\t\tscoreAdd *=\n\t\t\t\t\t[100n, 300n, 500n, 800n][Mutable.lineClear - 1] *\n\t\t\t\t\t2n ** BigInt(Mutable.combo);\n\t\t\t\tMutable.newScore += BigInt(\n\t\t\t\t\t[100, 300, 500, 800][Mutable.lineClear - 1] *\n\t\t\t\t\t\t(Mutable.level + 1)\n\t\t\t\t);\n\t\t\t\tMutable.b2b = 0;\n\t\t\t\t$(\"b2bmsg\").innerHTML = \"\";\n\n\t\t\t\tgarbage = [0, 1, 2, 4][Mutable.lineClear - 1];\n\t\t\t\tsound.playSFX(\"erase\", Mutable.lineClear);\n\t\t\t\tsound.playvox(\"erase\", Mutable.lineClear);\n\t\t\t}\n\t\t\tgarbage += ~~(Mutable.combo / 2); //[0,0,1,1,2,2,3,3,4,4,5,5,6,6,...]\n\t\t\tif (Mutable.combo < 1) {\n\t\t\t\t//\n\t\t\t} else if (Mutable.combo < 5) {\n\t\t\t\tsound.playvox(\"ren1\");\n\t\t\t} else if (Mutable.combo < 10) {\n\t\t\t\tsound.playvox(\"ren2\");\n\t\t\t} else {\n\t\t\t\tsound.playvox(\"ren3\");\n\t\t\t}\n\t\t\tif (Mutable.combo > 0) {\n\t\t\t\tif (Mutable.combo > 7 && settings.Soundbank == 6) {\n\t\t\t\t\tsound.playSFX(\"ren/ren\", 7);\n\t\t\t\t} else if (Mutable.combo > 4 && settings.Soundbank == 9) {\n\t\t\t\t\tsound.playSFX(\"ren/ren\", 4);\n\t\t\t\t} else if (Mutable.combo > 20) {\n\t\t\t\t\tsound.playSFX(\"ren/ren\", 20);\n\t\t\t\t} else {\n\t\t\t\t\tsound.playSFX(\"ren/ren\", Mutable.combo);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tMutable.combo += 1;\n\t\t\tif (Mutable.combo > 1) {\n\t\t\t\tMutable.newScore += BigInt(\n\t\t\t\t\t50 * (Mutable.combo - 1) * Mutable.level\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (Game.type === GameType.Grades) {\n\t\t\t\tif (Mutable.lineClear == 1) {\n\t\t\t\t\tMutable.leveltgm += 1;\n\t\t\t\t\tMutable.leveltgmvisible += 1;\n\t\t\t\t} else if (Mutable.lineClear == 2) {\n\t\t\t\t\tMutable.leveltgm += 2;\n\t\t\t\t\tMutable.leveltgmvisible += 2;\n\t\t\t\t} else if (Mutable.lineClear == 3) {\n\t\t\t\t\tMutable.leveltgm += 4;\n\t\t\t\t\tMutable.leveltgmvisible += 4;\n\t\t\t\t} else if (Mutable.lineClear == 4) {\n\t\t\t\t\tMutable.leveltgm += 6;\n\t\t\t\t\tMutable.leveltgmvisible += 6;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsendClearTetrisMessage(\n\t\t\t\tMutable.isSpin,\n\t\t\t\tMutable.isMini && Mutable.isSpin\n\t\t\t);\n\n\t\t\tGame.types[Game.type].lineClear(Mutable.lineClear);\n\t\t} else {\n\t\t\tif (Mutable.isSpin) {\n\t\t\t\tscoreAdd *= 2n ** BigInt(Mutable.b2b) * 400n;\n\t\t\t\tif (settings.Soundbank != 0 && Mutable.lineClear == 0) {\n\t\t\t\t\tsound.playSFX(\"tspin\", Mutable.lineClear);\n\t\t\t\t}\n\n\t\t\t\tshowSpinMessage(pieceName, Mutable.isMini);\n\n\t\t\t\tif (!Mutable.isMini) {\n\t\t\t\t\tMutable.newScore +=\n\t\t\t\t\t\t[400n, 800n, 1200n, 1600n][Mutable.lineClear] *\n\t\t\t\t\t\tBigInt(Mutable.level + 1);\n\t\t\t\t} else {\n\t\t\t\t\tMutable.newScore += 100n * BigInt(Mutable.level + 1);\n\t\t\t\t}\n\t\t\t\tif (piece.index == 5) {\n\t\t\t\t\tsound.playvox(\"tspin\", Mutable.lineClear);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscoreAdd = 0n;\n\t\t\t}\n\t\t\tif (Mutable.combo > 1) {\n\t\t\t\tif (settings.Voice && settings.Voicebank == 2) {\n\t\t\t\t\tshowTetrisMessage(t(\"ren\", Mutable.combo - 1));\n\t\t\t\t} else {\n\t\t\t\t\tshowTetrisMessage(t(\"combo\", Mutable.combo - 1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Mutable.combo > 10) {\n\t\t\t\tsound.playSFX(\"bravo\");\n\t\t\t}\n\n\t\t\tMutable.combo = 0;\n\t\t\t$(\"renmsg\").innerHTML = \"\";\n\t\t}\n\t\tMutable.lines += Mutable.lineClear;\n\t\tif (Game.type !== 9) {\n\t\t\tMutable.levelCheck = Mutable.level;\n\t\t}\n\n\t\tif (Game.type === GameType.Marathon || Game.type === GameType.Master) {\n\t\t\tif (Game.params.levelCap == 1) {\n\t\t\t\tMutable.level = Math.min(~~(Mutable.lines / 10), 14);\n\t\t\t} else {\n\t\t\t\tMutable.level = ~~(Mutable.lines / 10);\n\t\t\t}\n\t\t} else if (Game.type === 7) {\n\t\t\tMutable.level = ~~(Mutable.lines / 30);\n\t\t} else if (Game.type === GameType.Retro) {\n\t\t\tconst startLevel = Game.params.startingLevel;\n\t\t\tconst startingLines = Math.min(\n\t\t\t\tMath.max(100, startLevel * 10 - 50),\n\t\t\t\tstartLevel * 10 + 10\n\t\t\t);\n\t\t\tMutable.level = ~~Math.max(\n\t\t\t\t(Mutable.lines + 10 - startingLines + startLevel * 10) / 10,\n\t\t\t\tstartLevel\n\t\t\t);\n\t\t\tmakeSprite();\n\t\t\tstack.draw();\n\t\t}\n\t\tif (Game.type !== 9) {\n\t\t\tif (Mutable.levelCheck !== Mutable.level) {\n\t\t\t\tsound.playSFX(\"levelup\");\n\t\t\t\tconst levelEle = $(\"level\");\n\t\t\t\tlevelEle.classList.remove(\"level-flash\");\n\t\t\t\tvoid levelEle.offsetWidth;\n\t\t\t\tlevelEle.classList.add(\"level-flash\");\n\t\t\t}\n\t\t}\n\t\tif (Game.type === GameType.Marathon) {\n\t\t\tconst stackEle = $(\"stack\");\n\t\t\tif (Game.params.invisibleMarathon == true && Mutable.level > 19) {\n\t\t\t\tif (Mutable.watchingReplay) {\n\t\t\t\t\tstackEle.classList.add(\"invisible-replay\");\n\t\t\t\t} else {\n\t\t\t\t\tstackEle.classList.add(\"invisible\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstackEle.classList.remove(\"invisible-replay\");\n\t\t\t\tstackEle.classList.remove(\"invisible\");\n\t\t\t}\n\t\t}\n\n\t\tif (Mutable.level >= 20 && Game.type === GameType.Marathon) {\n\t\t\tif (Mutable.playedLevelingbgmMarathon[1] === false) {\n\t\t\t\tsound.killbgm();\n\t\t\t\tsound.playbgm(\"marathon3\");\n\t\t\t\tMutable.playedLevelingbgmMarathon[1] = true;\n\t\t\t}\n\t\t} else if (Mutable.level >= 10 && Game.type === GameType.Marathon) {\n\t\t\tif (Mutable.playedLevelingbgmMarathon[0] === false) {\n\t\t\t\tsound.killbgm();\n\t\t\t\tsound.playbgm(\"marathon2\");\n\t\t\t\tMutable.playedLevelingbgmMarathon[0] = true;\n\t\t\t}\n\t\t}\n\n\t\tif (Mutable.leveltgm >= 700 && Game.type === GameType.Grades) {\n\t\t\tif (Mutable.playedLevelingbgmGrades[1] === false) {\n\t\t\t\tsound.killbgm();\n\t\t\t\tsound.playbgm(\"grade3\");\n\t\t\t\tMutable.playedLevelingbgmGrades[1] = true;\n\t\t\t}\n\t\t} else if (Mutable.leveltgm >= 500 && Game.type === GameType.Grades) {\n\t\t\tif (Mutable.playedLevelingbgmGrades[0] === false) {\n\t\t\t\tsound.killbgm();\n\t\t\t\tsound.playbgm(\"grade2\");\n\t\t\t\tMutable.playedLevelingbgmGrades[0] = true;\n\t\t\t}\n\t\t}\n\n\t\tMutable.score += BigInt(scoreAdd ** (16n ** BigInt(Mutable.allclear)));\n\t\tmakeSprite();\n\t\tstack.draw();\n\t\tlet pc = true;\n\t\tfor (let x = 0; x < this.width; x++)\n\t\t\tfor (let y = 0; y < this.height; y++)\n\t\t\t\tif (this.grid[x][y]) pc = false;\n\t\tif (pc) {\n\t\t\tMutable.score += 1000000n * 16n ** BigInt(Mutable.allclear);\n\t\t\tMutable.allclear++;\n\t\t\tsound.playSFX(\"bravo\");\n\t\t\tshowTetrisMessage(t(\"perfect_clear\"));\n\t\t\tgarbage += 10;\n\t\t}\n\n\t\tconst { backFire } = Game.params;\n\t\tif (backFire) {\n\t\t\tif (backFire === 1) {\n\t\t\t\tgarbage = [0, 0, 1, 2, 4][Mutable.lineClear];\n\t\t\t} else if (backFire === 3) {\n\t\t\t\tgarbage *= ~~(Mutable.lines / 2);\n\t\t\t}\n\t\t\tif (garbage !== 0) {\n\t\t\t\tif (backFire === 1) {\n\t\t\t\t\tconst bottomRow = [];\n\t\t\t\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\t\t\t\tbottomRow.push(\n\t\t\t\t\t\t\tthis.grid[x][this.height - 1] > 0 ? 8 : 0\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tfor (let y = 0; y < garbage; y++) {\n\t\t\t\t\t\tthis.rowRise(bottomRow, piece);\n\t\t\t\t\t}\n\t\t\t\t} else if (backFire === 2 || backFire === 3) {\n\t\t\t\t\tconst hole = ~~(rng.next() * 10);\n\t\t\t\t\tconst arrRow = [8, 8, 8, 8, 8, 8, 8, 8, 8, 8];\n\t\t\t\t\tarrRow[hole] = 0;\n\t\t\t\t\tfor (let y = 0; y < garbage; y++) {\n\t\t\t\t\t\tthis.rowRise(arrRow, piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//if (scoreAdd.cmp(0) > 0)\n\t\t//console.log(scoreAdd.toString());\n\n\t\tMutable.statsFinesse +=\n\t\t\tpiece.finesse - finesse[piece.index][piece.pos][Mutable.column];\n\t\tMutable.piecesSet++;\n\t\tif (Game.type === GameType.Grades) {\n\t\t\tif (Mutable.leveltgmvisible % 100 !== 99) {\n\t\t\t\tMutable.leveltgm++;\n\t\t\t\tMutable.leveltgmvisible++;\n\t\t\t}\n\t\t\tif (Game.type === GameType.Grades) {\n\t\t\t\tif (\n\t\t\t\t\tMath.floor((Mutable.levelCheck / 100) % 10) !==\n\t\t\t\t\tMath.floor((Mutable.leveltgm / 100) % 10)\n\t\t\t\t) {\n\t\t\t\t\tsound.playSFX(\"levelup\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/*\n\t\t\tif (Scores.leveltgmvisible > 70 && Mutable.scoreTime <= 52000) {\n\t\t\t\tconsole.log(\"Cool!\");\n\t\t\t\tScores.leveltgm += 100; //work on later\n\t\t\t}\n\t\t\tif (Scores.leveltgmvisible <= 100 && Mutable.scoreTime >= 75000) {\n\t\t\t\tconsole.log(\"REGRET\");\n\t\t\t}\n\t\t\t*/\n\n\t\t\t//Section COOL\n\t\t\t// if (Scores.leveltgmvisible)\n\t\t}\n\t\t// NOTE Mutable\n\t\t// TODO Might not need this (same for in init)\n\t\tMutable.column = 0;\n\t\tfunction checkAlarm(grid) {\n\t\t\tlet clearPath = false;\n\t\t\tfor (let i = 0; i < stack.width; i++) {\n\t\t\t\tfor (let j = 0; j <= stack.height; j++) {\n\t\t\t\t\tif (j == stack.height) {\n\t\t\t\t\t\tclearPath = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (grid[i][j] !== undefined && grid[i][j] !== 0) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (clearPath) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tMutable.alarmtest = false;\n\t\t\tfor (const test in grid) {\n\t\t\t\tif (\n\t\t\t\t\t(grid[test][8] != undefined &&\n\t\t\t\t\t\tMutable.alarm == false &&\n\t\t\t\t\t\tclearPath == false) ||\n\t\t\t\t\t(grid[test][11] != undefined && Mutable.alarm == true)\n\t\t\t\t) {\n\t\t\t\t\tMutable.alarmtest = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (clearPath && Mutable.alarm == true) {\n\t\t\t\tMutable.alarmtest = false;\n\t\t\t}\n\t\t\tif (Mutable.alarmtest == true && Mutable.alarm == false) {\n\t\t\t\tMutable.alarm = true;\n\t\t\t\tMutable.alarmtest = false;\n\t\t\t\tsound.playSFX(\"alarm\");\n\t\t\t\t$(\"bgStack\").classList.add(\"alarm\");\n\t\t\t\tif (\n\t\t\t\t\tGame.type === GameType.Survival ||\n\t\t\t\t\tGame.type === 7 ||\n\t\t\t\t\t(Game.type === GameType.Master &&\n\t\t\t\t\t\tGame.params.delayStrictness === 2)\n\t\t\t\t) {\n\t\t\t\t\tconsole.log(\"eee\");\n\t\t\t\t\tsound.raisesidebgm();\n\t\t\t\t}\n\t\t\t} else if (Mutable.alarmtest == false && Mutable.alarm == true) {\n\t\t\t\tMutable.alarm = false;\n\t\t\t\tsound.stopSFX(\"alarm\");\n\t\t\t\t$(\"bgStack\").classList.remove(\"alarm\");\n\t\t\t\tif (\n\t\t\t\t\tGame.type === GameType.Survival ||\n\t\t\t\t\tGame.type === 7 ||\n\t\t\t\t\t(Game.type === GameType.Master &&\n\t\t\t\t\t\tGame.params.delayStrictness === 2)\n\t\t\t\t) {\n\t\t\t\t\tsound.lowersidebgm();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcheckAlarm(stack.grid);\n\t\tthis.dirty = true;\n\t}\n\n\t/**\n\t * Raise a garbage line.\n\t * @author farter\n\t */\n\tclearLines() {\n\t\t// console.log(\"clearrow\")\n\n\t\tMutable.clearRows.forEach((element) => {\n\t\t\tfor (let y = element; y >= 1; y--) {\n\t\t\t\tfor (let x = 0; x < stack.width; x++) {\n\t\t\t\t\tstack.grid[x][y] = stack.grid[x][y - 1];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (Mutable.clearRows.length !== 0) {\n\t\t\tif (Mutable.lineARE != 0) {\n\t\t\t\tsound.playSFX(\"linefall\");\n\t\t\t}\n\t\t\tMutable.clearRows = [];\n\t\t\tstack.draw();\n\t\t}\n\t}\n\n\trowRise(arrRow, objPiece) {\n\t\tlet isEmpty = true;\n\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\tfor (let y = 0; y < this.height - 1; y++) {\n\t\t\t\tthis.grid[x][y] = this.grid[x][y + 1];\n\t\t\t}\n\t\t\tif (arrRow[x]) isEmpty = false;\n\t\t\tthis.grid[x][this.height - 1] = arrRow[x];\n\t\t}\n\t\tlet topout = false;\n\t\tfor (let y = 0; y < Mutable.digLines.length; y++) {\n\t\t\tMutable.digLines[y]--;\n\t\t\tif (Mutable.digLines[y] < 0) {\n\t\t\t\t// top out, but only detecting added lines\n\t\t\t\ttopout = true;\n\t\t\t}\n\t\t}\n\t\tif (topout) {\n\t\t\tGame.state = GameState.BlockOut;\n\t\t\t$setText(Elements.msg, \"TOP OUT!\");\n\t\t\tmenu(3);\n\t\t\tGame.types[Game.type].die();\n\t\t\tsound.playSFX(\"gameover\");\n\t\t\tsound.playvox(\"lose\");\n\t\t}\n\t\tif (!isEmpty) {\n\t\t\tMutable.digLines.push(this.height - 1);\n\t\t}\n\t\tif (!piece.dead) {\n\t\t\tif (!piece.moveValid(0, 0, piece.tetro)) {\n\t\t\t\tpiece.y -= 1;\n\t\t\t\tif (\n\t\t\t\t\tpiece.y + pieces[piece.index].rect[3] <=\n\t\t\t\t\tthis.hiddenHeight - 2\n\t\t\t\t) {\n\t\t\t\t\t// the bottom is >=2 cell away from visible part\n\t\t\t\t\tGame.state = GameState.BlockOut;\n\t\t\t\t\t$setText(Elements.msg, \"OOPS!\");\n\t\t\t\t\tmenu(3);\n\t\t\t\t\tGame.types[Game.type].die();\n\n\t\t\t\t\tsound.playSFX(\"gameover\");\n\t\t\t\t\tsound.playvox(\"lose\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tpiece.dirty = true;\n\t\t}\n\t\tthis.dirty = true;\n\t}\n\n\t/**\n\t * Draws the stack.\n\t * TODO: remove this, switch to only webgl\n\t * @deprecated\n\t */\n\tdraw() {\n\t\tclear(Elements.stackCtx);\n\t\tif (\n\t\t\tsettings.Outline === 0 ||\n\t\t\tsettings.Outline === 1 ||\n\t\t\t(settings.Outline === 2 &&\n\t\t\t\t(Game.state === GameState.Loss || Game.state === GameState.Win))\n\t\t) {\n\t\t\tdraw(\n\t\t\t\tthis.grid,\n\t\t\t\t0,\n\t\t\t\t-this.hiddenHeight,\n\t\t\t\tElements.stackCtx,\n\t\t\t\tundefined,\n\t\t\t\t0.3\n\t\t\t);\n\t\t}\n\n\t\t// Darken Stack\n\t\t// TODO wrap this with an option.\n\t\t// no fullscreen flush, see above\n\t\t//stackCtx.globalCompositeOperation = 'source-atop';\n\t\t//stackCtx.fillStyle = 'rgba(0,0,0,0.3)';\n\t\t//stackCtx.fillRect(0, 0, stackCanvas.width, stackCanvas.height);\n\t\t//stackCtx.globalCompositeOperation = 'source-over';\n\n\t\tif (settings.Outline === 1 || settings.Outline === 3) {\n\t\t\tconst b = ~~(Mutable.cellSize / 8);\n\t\t\tconst c = Mutable.cellSize;\n\t\t\tconst hhc = this.hiddenHeight * c;\n\t\t\tconst pi = Math.PI;\n\t\t\tconst lineCanvas = document.createElement(\"canvas\");\n\t\t\tlineCanvas.width = Elements.stackCanvas.width;\n\t\t\tlineCanvas.height = Elements.stackCanvas.height;\n\n\t\t\tconst lineCtx = lineCanvas.getContext(\"2d\");\n\t\t\tlineCtx.fillStyle = \"rgba(255,255,255,.5)\";\n\t\t\tlineCtx.beginPath();\n\t\t\tfor (let x = 0, len = this.width; x < len; x++) {\n\t\t\t\tfor (let y = 0, wid = this.height; y < wid; y++) {\n\t\t\t\t\tif (this.grid[x][y]) {\n\t\t\t\t\t\tif (x < this.width - 1 && !this.grid[x + 1][y]) {\n\t\t\t\t\t\t\tlineCtx.fillRect(x * c + c - b, y * c - hhc, b, c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (x > 0 && !this.grid[x - 1][y]) {\n\t\t\t\t\t\t\tlineCtx.fillRect(x * c, y * c - hhc, b, c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (y < this.height - 1 && !this.grid[x][y + 1]) {\n\t\t\t\t\t\t\tlineCtx.fillRect(x * c, y * c - hhc + c - b, c, b);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!this.grid[x][y - 1]) {\n\t\t\t\t\t\t\tlineCtx.fillRect(x * c, y * c - hhc, c, b);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Diags\n\t\t\t\t\t\tif (x < this.width - 1 && y < this.height - 1) {\n\t\t\t\t\t\t\tif (!this.grid[x + 1][y] && !this.grid[x][y + 1]) {\n\t\t\t\t\t\t\t\tlineCtx.clearRect(\n\t\t\t\t\t\t\t\t\tx * c + c - b,\n\t\t\t\t\t\t\t\t\ty * c - hhc + c - b,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tb\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tlineCtx.fillRect(\n\t\t\t\t\t\t\t\t\tx * c + c - b,\n\t\t\t\t\t\t\t\t\ty * c - hhc + c - b,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tb\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t!this.grid[x + 1][y + 1] &&\n\t\t\t\t\t\t\t\tthis.grid[x + 1][y] &&\n\t\t\t\t\t\t\t\tthis.grid[x][y + 1]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlineCtx.moveTo(x * c + c, y * c - hhc + c - b);\n\t\t\t\t\t\t\t\tlineCtx.lineTo(x * c + c, y * c - hhc + c);\n\t\t\t\t\t\t\t\tlineCtx.lineTo(x * c + c - b, y * c - hhc + c);\n\t\t\t\t\t\t\t\tlineCtx.arc(\n\t\t\t\t\t\t\t\t\tx * c + c,\n\t\t\t\t\t\t\t\t\ty * c - hhc + c,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\t(3 * pi) / 2,\n\t\t\t\t\t\t\t\t\tpi,\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (x < this.width - 1 && y > -this.hiddenHeight) {\n\t\t\t\t\t\t\tif (!this.grid[x + 1][y] && !this.grid[x][y - 1]) {\n\t\t\t\t\t\t\t\tlineCtx.clearRect(\n\t\t\t\t\t\t\t\t\tx * c + c - b,\n\t\t\t\t\t\t\t\t\ty * c - hhc,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tb\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tlineCtx.fillRect(\n\t\t\t\t\t\t\t\t\tx * c + c - b,\n\t\t\t\t\t\t\t\t\ty * c - hhc,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tb\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t!this.grid[x + 1][y - 1] &&\n\t\t\t\t\t\t\t\tthis.grid[x + 1][y] &&\n\t\t\t\t\t\t\t\tthis.grid[x][y - 1]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlineCtx.moveTo(x * c + c - b, y * c - hhc);\n\t\t\t\t\t\t\t\tlineCtx.lineTo(x * c + c, y * c - hhc);\n\t\t\t\t\t\t\t\tlineCtx.lineTo(x * c + c, y * c - hhc + b);\n\t\t\t\t\t\t\t\tlineCtx.arc(\n\t\t\t\t\t\t\t\t\tx * c + c,\n\t\t\t\t\t\t\t\t\ty * c - hhc,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tpi / 2,\n\t\t\t\t\t\t\t\t\tpi,\n\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (x > 0 && y < this.height - 1) {\n\t\t\t\t\t\t\tif (!this.grid[x - 1][y] && !this.grid[x][y + 1]) {\n\t\t\t\t\t\t\t\tlineCtx.clearRect(\n\t\t\t\t\t\t\t\t\tx * c,\n\t\t\t\t\t\t\t\t\ty * c - hhc + c - b,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tb\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tlineCtx.fillRect(\n\t\t\t\t\t\t\t\t\tx * c,\n\t\t\t\t\t\t\t\t\ty * c - hhc + c - b,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tb\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t!this.grid[x - 1][y + 1] &&\n\t\t\t\t\t\t\t\tthis.grid[x - 1][y] &&\n\t\t\t\t\t\t\t\tthis.grid[x][y + 1]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlineCtx.moveTo(x * c, y * c - hhc + c - b);\n\t\t\t\t\t\t\t\tlineCtx.lineTo(x * c, y * c - hhc + c);\n\t\t\t\t\t\t\t\tlineCtx.lineTo(x * c + b, y * c - hhc + c);\n\t\t\t\t\t\t\t\tlineCtx.arc(\n\t\t\t\t\t\t\t\t\tx * c,\n\t\t\t\t\t\t\t\t\ty * c - hhc + c,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tpi * 2,\n\t\t\t\t\t\t\t\t\t(3 * pi) / 2,\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (x > 0 && y > -this.hiddenHeight) {\n\t\t\t\t\t\t\tif (!this.grid[x - 1][y] && !this.grid[x][y - 1]) {\n\t\t\t\t\t\t\t\tlineCtx.clearRect(x * c, y * c - hhc, b, b);\n\t\t\t\t\t\t\t\tlineCtx.fillRect(x * c, y * c - hhc, b, b);\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t!this.grid[x - 1][y - 1] &&\n\t\t\t\t\t\t\t\tthis.grid[x - 1][y] &&\n\t\t\t\t\t\t\t\tthis.grid[x][y - 1]\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tlineCtx.moveTo(x * c + b, y * c - hhc);\n\t\t\t\t\t\t\t\tlineCtx.lineTo(x * c, y * c - hhc);\n\t\t\t\t\t\t\t\tlineCtx.lineTo(x * c, y * c - hhc + b);\n\t\t\t\t\t\t\t\tlineCtx.arc(\n\t\t\t\t\t\t\t\t\tx * c,\n\t\t\t\t\t\t\t\t\ty * c - hhc,\n\t\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\t\tpi / 2,\n\t\t\t\t\t\t\t\t\tpi * 2,\n\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlineCtx.fill();\n\t\t\tElements.stackCtx.globalCompositeOperation = \"source-over\";\n\t\t\tElements.stackCtx.drawImage(lineCanvas, 0, 0);\n\t\t\tElements.stackCtx.fillStyle = \"#ffffff\";\n\t\t}\n\n\t\tstatisticsStack();\n\n\t\tthis.dirty = false;\n\t}\n}\n\nconst classicLineClear = 0;\n/**\n * Adds tetro to the stack, and clears lines if they fill up.\n */\nexport function testSpace(x, y) {\n\tif (stack.grid[x] !== undefined && y < 24) {\n\t\treturn stack.grid[x][y] !== undefined;\n\t}\n\treturn true;\n}\n\nexport function spinCheck() {\n\tMutable.isSpin = false;\n\tMutable.isMini = false;\n\tif (piece.index !== 0 && piece.index !== 3) {\n\t\tlet spinCheckCount = 0;\n\t\tfor (let i = 0; i < pieces[piece.index].spin.highX[0].length; i++) {\n\t\t\tif (\n\t\t\t\ttestSpace(\n\t\t\t\t\tpiece.x + pieces[piece.index].spin.highX[piece.pos][i],\n\t\t\t\t\tpiece.y + pieces[piece.index].spin.highY[piece.pos][i]\n\t\t\t\t) == true\n\t\t\t) {\n\t\t\t\tspinCheckCount++;\n\t\t\t}\n\t\t}\n\t\tif (spinCheckCount < 2) {\n\t\t\tMutable.isMini = true;\n\t\t}\n\t\tfor (let i = 0; i < pieces[piece.index].spin.lowX[0].length; i++) {\n\t\t\tif (\n\t\t\t\ttestSpace(\n\t\t\t\t\tpiece.x + pieces[piece.index].spin.lowX[piece.pos][i],\n\t\t\t\t\tpiece.y + pieces[piece.index].spin.lowY[piece.pos][i]\n\t\t\t\t) == true\n\t\t\t) {\n\t\t\t\tspinCheckCount++;\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tspinCheckCount >= 3 &&\n\t\t\tMutable.spinX == piece.x &&\n\t\t\tMutable.spinY == piece.y &&\n\t\t\t!Mutable.rotationFailed\n\t\t) {\n\t\t\tMutable.isSpin = true;\n\t\t}\n\t} else if (piece.index == 0) {\n\t\tlet spinCheckCount = 0;\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tif (\n\t\t\t\ttestSpace(\n\t\t\t\t\tpiece.x + pieces[piece.index].spin.highX[piece.pos][i],\n\t\t\t\t\tpiece.y + pieces[piece.index].spin.highY[piece.pos][i]\n\t\t\t\t) == true ||\n\t\t\t\ttestSpace(\n\t\t\t\t\tpiece.x + pieces[piece.index].spin.highX[piece.pos][i + 2],\n\t\t\t\t\tpiece.y + pieces[piece.index].spin.highY[piece.pos][i + 2]\n\t\t\t\t) == true\n\t\t\t) {\n\t\t\t\tspinCheckCount++;\n\t\t\t}\n\t\t}\n\t\tif (spinCheckCount < 2) {\n\t\t\tMutable.isMini = true;\n\t\t}\n\t\tfor (let i = 0; i < 2; i++) {\n\t\t\tif (\n\t\t\t\ttestSpace(\n\t\t\t\t\tpiece.x + pieces[piece.index].spin.lowX[piece.pos][i],\n\t\t\t\t\tpiece.y + pieces[piece.index].spin.lowY[piece.pos][i]\n\t\t\t\t) == true ||\n\t\t\t\ttestSpace(\n\t\t\t\t\tpiece.x + pieces[piece.index].spin.lowX[piece.pos][i + 2],\n\t\t\t\t\tpiece.y + pieces[piece.index].spin.lowY[piece.pos][i + 2]\n\t\t\t\t) == true\n\t\t\t) {\n\t\t\t\tspinCheckCount++;\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tspinCheckCount >= 3 &&\n\t\t\tMutable.spinX == piece.x &&\n\t\t\tMutable.spinY == piece.y &&\n\t\t\t!Mutable.rotationFailed\n\t\t) {\n\t\t\tMutable.isSpin = true;\n\t\t}\n\t}\n}\n\nexport const stack = new Stack();\n", "import { settings } from \"../../settings\";\nimport { $ } from \"../../utils/utils\";\n\nexport const matrix = {\n\tposition: {\n\t\thorizontal: 0,\n\t\tvertical: 0,\n\t},\n\tvelocity: {\n\t\tright: 0,\n\t\tleft: 0,\n\t\tdown: 0,\n\t},\n};\n\nexport enum MatrixDir {\n\tRIGHT,\n\tLEFT,\n\tDOWN,\n}\n\nexport enum MatrixPosition {\n\tHORIZONTAL = \"horizontal\",\n\tVERTICAL = \"vertical\",\n}\n\nexport function shiftMatrix(direction: MatrixDir) {\n\tif (settings.MatrixSway) {\n\t\tif (direction === MatrixDir.RIGHT) {\n\t\t\tmatrix.velocity.left = 0;\n\t\t\tmatrix.velocity.right = 1;\n\t\t} else if (direction === MatrixDir.LEFT) {\n\t\t\tmatrix.velocity.right = 0;\n\t\t\tmatrix.velocity.left = 1;\n\t\t} else if (direction === MatrixDir.DOWN) {\n\t\t\tmatrix.velocity.down = 1;\n\t\t}\n\t}\n}\n\nexport enum Sign {\n\tPOSITIVE = 1,\n\tNEGATIVE = -1,\n}\n\nexport function matrixReturn(\n\tdirection: MatrixDir,\n\ttype: MatrixPosition,\n\tsign: Sign\n) {\n\tconst { velocity, position } = matrix;\n\tif (velocity[direction] > 1) {\n\t\tvelocity[direction] = 1;\n\t}\n\tif (position[type] < 0.5 && position[type] > -0.5) {\n\t\tposition[type] += sign * 0.2;\n\t}\n\tvelocity[direction] -= 0.2;\n\tif (velocity[direction] < 0) {\n\t\tvelocity[direction] = 0;\n\t}\n}\n\nexport function updateMatrixPosition() {\n\tif (matrix.velocity.right === 0 && matrix.velocity.left === 0) {\n\t\tmatrix.position.horizontal /= 1.1;\n\t} else if (matrix.velocity.right !== 0) {\n\t\tmatrixReturn(MatrixDir.RIGHT, MatrixPosition.HORIZONTAL, Sign.POSITIVE);\n\t} else if (matrix.velocity.left !== 0) {\n\t\tmatrixReturn(MatrixDir.LEFT, MatrixPosition.HORIZONTAL, Sign.NEGATIVE);\n\t}\n\n\tif (matrix.velocity.down === 0) {\n\t\tmatrix.position.vertical /= 1.1;\n\t} else {\n\t\tmatrixReturn(MatrixDir.DOWN, MatrixPosition.VERTICAL, Sign.POSITIVE);\n\t}\n\tif (Math.abs(matrix.position.horizontal) < 0.01) {\n\t\tmatrix.position.horizontal = 0;\n\t}\n\tif (matrix.position.vertical < 0.01) {\n\t\tmatrix.position.vertical = 0;\n\t}\n\n\t$(\"b\").style.transform = `translate(${matrix.position.horizontal / 3}em, ${\n\t\tmatrix.position.vertical / 3\n\t}em)`;\n\t// elements.statsDiv.style.transform = \"translate(\" + matrix.position.horizontal + \"em, \" + matrix.position.vertical + \"em)\"\n}\n", "const strs = {\n\tready: {\n\t\ten: \"READY\",\n\t\tes: \"LISTOS\",\n\t\tfr: \"PR\u00CAT?\",\n\t},\n\tstart: {\n\t\ten: \"GO!\",\n\t\tes: \"\u00A1YA!\",\n\t\tfr: \"C'EST PARTI!\",\n\t},\n\tcombo: {\n\t\ten: \"<b>%d</b> COMBO!\",\n\t},\n\tren: {\n\t\ten: \"<b>%d</b> REN!\",\n\t},\n\tb2b: {\n\t\ten: \"<b>BACK-TO</b>-BACK %s\",\n\t},\n\tb2b_streak: {\n\t\ten: \"%d <b>STREAK!</b>\",\n\t},\n\tstreak: {\n\t\ten: \"<b>%d</b> STREAK\",\n\t},\n\tspin: {\n\t\ten: \"%s-<b>SPIN</b>\",\n\t},\n\tmini: {\n\t\ten: \" %s-<b>SPIN</b> MINI\",\n\t},\n\tline: {\n\t\ten: \"$line%d\",\n\t},\n\tline1: {\n\t\ten: \"SINGLE\",\n\t},\n\tline2: {\n\t\ten: \"DOUBLE\",\n\t},\n\tline3: {\n\t\ten: \"TRIPLE\",\n\t},\n\tline4: {\n\t\ten: \"QUAD\",\n\t},\n\tline5: {\n\t\ten: \"QUINT\",\n\t},\n\tline6: {\n\t\ten: \"SEXT\",\n\t},\n\tline7: {\n\t\ten: \"SEPT\",\n\t},\n\tline8: {\n\t\ten: \"OCT\",\n\t},\n\tline9: {\n\t\ten: \"NON\",\n\t},\n\tline10: {\n\t\ten: \"DECI\",\n\t},\n\tline11: {\n\t\ten: \"UNDECI\",\n\t},\n\tline12: {\n\t\ten: \"DODECI\",\n\t},\n\tline13: {\n\t\ten: \"TREEDECI\",\n\t},\n\tline14: {\n\t\ten: \"QUADREDECI\",\n\t},\n\tline15: {\n\t\ten: \"QUINTDECI\",\n\t},\n\tline16: {\n\t\ten: \"SEXDECI\",\n\t},\n\tline17: {\n\t\ten: \"SEPTDECI\",\n\t},\n\tline18: {\n\t\ten: \"OCTDECI\",\n\t},\n\tline19: {\n\t\ten: \"NONDECI\",\n\t},\n\tline20: {\n\t\ten: \"VIGESI\",\n\t},\n\tline21: {\n\t\ten: \"UNVIGESI\",\n\t},\n\tlock_out: {\n\t\ten: \"LOCK OUT!\",\n\t},\n\tperfect_clear: {\n\t\ten: \"<b>PERFECT</b> CLEAR!\",\n\t},\n\tlevel: {\n\t\ten: \"<b>LEVEL</b> %d\",\n\t},\n\tlevel_m: {\n\t\ten: \"<b>LEVEL</b> M%d\",\n\t},\n\t\"setting-Size-title\": {\n\t\ten: \"Game Size\",\n\t},\n\t\"setting-Size-desc\": {\n\t\ten: \"The size the game takes in the browser window\",\n\t},\n\t\"setting-Next-title\": {\n\t\ten: \"Next Queue Count\",\n\t},\n\t\"setting-Next-desc\": {\n\t\ten: \"Changes the length in pieces of the next queue\",\n\t},\n\t\"setting-NextSide-title\": {\n\t\ten: \"Next Queue Side\",\n\t},\n\t\"setting-NextSide-desc\": {\n\t\ten: \"Changes the side of the next queue\",\n\t},\n\t\"setting-Block-title\": {\n\t\ten: \"Block Skin\",\n\t},\n\t\"setting-Block-desc\": {\n\t\ten: \"The desired block skin\",\n\t},\n\t\"setting-Monochrome-title\": {\n\t\ten: \"Monochrome\",\n\t},\n\t\"setting-Monochrome-desc\": {\n\t\ten: \"Use only white for block skins\",\n\t},\n\t\"setting-Outline-title\": {\n\t\ten: \"Outline\",\n\t},\n\t\"setting-Outline-desc\": {\n\t\ten: \"Options for an outline around the pieces. 'Hidden' hides the stack.\",\n\t},\n\t\"setting-Ghost-title\": {\n\t\ten: \"Ghost\",\n\t},\n\t\"setting-Ghost-desc\": {\n\t\ten: \"Options for the ghost piece. 'Hidden' hides the active piece.\",\n\t},\n\t\"setting-Grid-title\": {\n\t\ten: \"Grid\",\n\t},\n\t\"setting-Grid-desc\": {\n\t\ten: \"Displays the background grid.\",\n\t},\n\t\"setting-Messages-title\": {\n\t\ten: \"Action Text\",\n\t},\n\t\"setting-Messages-desc\": {\n\t\ten: 'Displays flying text for things like \"SINGLE\", \"DOUBLE\", etc. Also shows the combo and back-to-back streak counter.',\n\t},\n\t\"setting-MatrixSway-title\": {\n\t\ten: \"Matrix Sway\",\n\t},\n\t\"setting-MatrixSway-desc\": {\n\t\ten: \"When enabled, the playfield will react to the force of the pieces and move slightly.\",\n\t},\n\t\"setting-InitialVis-title\": {\n\t\ten: \"Visual Initial Systems\",\n\t},\n\t\"setting-InitialVis-desc\": {\n\t\ten: \"When enabled, the initials systems will show during gameplay\",\n\t},\n\t\"setting-Sound-title\": { en: \"Enable Sound\" },\n\t\"setting-Sound-desc\": {\n\t\ten: \"Completely enable or disable the sound system\",\n\t},\n\t\"setting-Volume-title\": { en: \"Sound Volume\" },\n\t\"setting-Volume-desc\": { en: \"\" },\n\t\"setting-MusicVol-title\": { en: \"Music Volume\" },\n\t\"setting-MusicVol-desc\": { en: \"\" },\n\t\"setting-Soundbank-title\": { en: \"Soundbank\" },\n\t\"setting-Soundbank-desc\": { en: \"Modifies the audio bank of the game\" },\n\t\"setting-NextSound-title\": { en: \"Next Queue Audio Indicator\" },\n\t\"setting-NextSound-desc\": {\n\t\ten: \"Plays a sound for a specific piece when it arrives in the next queue\",\n\t},\n\t\"setting-NextType-title\": { en: \"Next Queue Soundbank\" },\n\t\"setting-NextType-desc\": {\n\t\ten: \"Modifies the audio bank of the next queue audio indicators\",\n\t},\n\t\"setting-Voice-title\": { en: \"Voice\" },\n\t\"setting-Voice-desc\": { en: \"Enable the announcer\" },\n\t\"setting-Voicebank-title\": { en: \"Voicebank\" },\n\t\"setting-Voicebank-desc\": { en: \"Modifies the soundbank of the announcer\" },\n\t\"setting-ARR-title\": { en: \"Autoshift Delay\" },\n\t\"setting-ARR-desc\": {\n\t\ten: \"How long it takes before the autoshift kicks in; default 10 frames\",\n\t},\n\t\"setting-DAS-title\": { en: \"Autoshift Rate\" },\n\t\"setting-DAS-desc\": { en: \"How fast the autoshift goes; default 2 frames\" },\n\t\"setting-Gravity-title\": { en: \"Gravity\" },\n\t\"setting-Gravity-desc\": {\n\t\ten: \"Override the speed at which pieces fall; default 'Auto'\",\n\t},\n\t\"setting-SoftDrop-title\": { en: \"Soft Drop Speed\" },\n\t\"setting-SoftDrop-desc\": {\n\t\ten: \"Speed at which the piece soft drops; default 1G\",\n\t},\n\t\"setting-LockDelay-title\": { en: \"Lock Delay\" },\n\t\"setting-LockDelay-desc\": {\n\t\ten: \"The amount of time a piece can stay landed before it locks to the stack; default 30 frames\",\n\t},\n\t\"setting-IRSMode-title\": { en: \"Initial Rotation\" },\n\t\"setting-IRSMode-desc\": {\n\t\ten: \"Allow the rotation of a piece before it appears\",\n\t},\n\t\"setting-IHSMode-title\": { en: \"Initial Hold\" },\n\t\"setting-IHSMode-desc\": {\n\t\ten: \"Allow the holding of a piece before it appears\",\n\t},\n\t\"setting-RotSys-title\": { en: \"Rotation System\" },\n\t\"setting-RotSys-desc\": {\n\t\ten: \"The desired rotation system; default 'Super'\",\n\t},\n\t\"setting-DigCheckered-title\": { en: \"Checkered\" },\n\t\"setting-DigCheckered-desc\": {\n\t\ten: \"Dig through a checkered stack instead of a diagonal one\",\n\t},\n\t\"setting-GradesGameRule-title\": { en: \"Game Rule\" },\n\t\"setting-GradesGameRule-desc\": { en: \"Determines the tuning of the game\" },\n\t\"setting-MarathonGoal-title\": { en: \"Goal\" },\n\t\"setting-MarathonGoal-desc\": { en: \"Lines to reach before winning\" },\n\t\"setting-MarathonLevelCap-title\": { en: \"Level Cap\" },\n\t\"setting-MarathonLevelCap-desc\": {\n\t\ten: \"When on, set the maximum level to 15. When off, level will continously rise with the lock delay shortening after 20G.\",\n\t},\n\t\"setting-MarathonEntryDelay-title\": { en: \"Entry Delay\" },\n\t\"setting-MarathonEntryDelay-desc\": {\n\t\ten: \"Determines how long the game pauses between pieces\",\n\t},\n\t\"setting-MarathonNoGravity-title\": { en: \"0G Mode\" },\n\t\"setting-MarathonNoGravity-desc\": {\n\t\ten: \"Disable gravity for a more relaxed game\",\n\t},\n\t\"setting-MarathonInvisible-title\": { en: \"Invisible Bonus\" },\n\t\"setting-MarathonInvisible-desc\": {\n\t\ten: \"Make the stack become invisible at level 21\",\n\t},\n\t\"setting-SurvivalZenMode-title\": { en: \"Zen Mode\" },\n\t\"setting-SurvivalZenMode-desc\": {\n\t\ten: \"Garbage will appear by piece instead of by time\",\n\t},\n\t\"setting-SurvivalStartingLevel-title\": { en: \"Starting Level\" },\n\t\"setting-SurvivalStartingLevel-desc\": {\n\t\ten: \"Determines how far ahead you'll start in the challenge (not compatible with zen, currently)\",\n\t},\n\t\"setting-SprintLimit-title\": { en: \"Goal\" },\n\t\"setting-SprintLimit-desc\": { en: \"Total lines to clear\" },\n\t\"setting-SprintPieceSet-title\": { en: \"Piece Set\" },\n\t\"setting-SprintPieceSet-desc\": {\n\t\ten: \"The types of pieces used during the game\",\n\t},\n\t\"setting-SprintBackfire-title\": { en: \"Backfire\" },\n\t\"setting-SprintBackfire-desc\": { en: \"Have lines sent back to you\" },\n\t\"setting-RetroGameType-title\": { en: \"Game Type\" },\n\t\"setting-RetroGameType-desc\": {\n\t\ten: \"A-Type: Play Forever \\nB-Type: Reach 25 Lines\",\n\t},\n\t\"setting-RetroStartingLevel-title\": { en: \"Starting Level\" },\n\t\"setting-RetroStartingLevel-desc\": { en: \"Choose a level to start\" },\n\t\"setting-RetroSkin-title\": { en: \"Retro Skin\" },\n\t\"setting-RetroSkin-desc\": { en: \"Enable the colour-changing retro skin\" },\n\t\"setting-RetroHardDrop-title\": { en: \"Hard Drop\" },\n\t\"setting-RetroHardDrop-desc\": { en: \"Allow the use of hard drop\" },\n\t\"setting-RetroFlashing-title\": { en: \"Flashing Effect\" },\n\t\"setting-RetroFlashing-desc\": {\n\t\ten: \"Show a screen flash upon clearing a Quad\",\n\t},\n\t\"setting-MasterLock-title\": { en: \"Lockdown Mode\" },\n\t\"setting-MasterLock-desc\": {\n\t\ten: \"Determines how the lockdown will function.\\n\\nForgiving: Lock delay will reset upon all manipulations\\n\\nLimited: Lock delay will reset for a limited amount of manipulations\\n\\nStrict: Lock delay will reset only when a piece has fallen\",\n\t},\n\t\"setting-ResetPB-title\": { en: \"Reset PB\" },\n\t\"setting-ResetPB-desc\": { en: \"Reset if over personal best\" },\n\t\"setting-DigZen-title\": { en: \"Zen Mode\" },\n\t\"setting-DigZen-desc\": { en: \"\" },\n\t\"menu-back\": { en: \"Back\" },\n\t\"menu-start\": { en: \"Start\" },\n\t\"menu-done\": { en: \"Done\" },\n\t\"menu-retry\": { en: \"Retry\" },\n\t\"menu-replay\": { en: \"Replay\" },\n\t\"menu-settings\": { en: \"Settings\" },\n\t\"menu-controls\": { en: \"Controls\" },\n\t\"game-sprint\": { en: \"Sprint\" },\n\t\"game-survival\": { en: \"Survival\" },\n\t\"game-marathon\": { en: \"Marathon\" },\n\t\"game-retro\": { en: \"Retro\" },\n\t\"game-master\": { en: \"Master\" },\n\t\"game-dig\": { en: \"Dig\" },\n\t\"game-grades\": { en: \"Grades (WIP)\" },\n} as const;\n\nconst lang = navigator.language.substring(0, 2);\n\ntype Specifiers = {\n\ts: string;\n\td: number;\n\tb: boolean;\n\tD: Date;\n};\n\ntype Spec = keyof Specifiers;\n\ntype Values<T extends string> = T extends `${infer _}%${infer K}${infer Rest}`\n\t? K extends Spec\n\t\t? [Specifiers[K], ...Values<Rest>]\n\t\t: Values<`${K}${Rest}`>\n\t: [];\n\ntype STRS = typeof strs;\n\nconst reg = /%(s|d|b|D)/g;\nexport function t<T extends keyof STRS>(\n\tstr: T,\n\t...replacements: Values<STRS[T][\"en\"]>\n): string {\n\tlet final: string = strs[str][lang] ?? strs[str].en;\n\tif (str && replacements.length > 0) {\n\t\tlet i = 0;\n\t\tfinal = final.replace(reg, () => replacements[i++] as string);\n\t\tif (final[0] == \"$\") {\n\t\t\tconst sliced = final.substring(1);\n\t\t\tfinal = strs[sliced][lang];\n\t\t}\n\t}\n\treturn final;\n}\n", "import { settings } from \"../../settings\";\nimport { Mutable } from \"../../utils/data\";\nimport { piece } from \"./piece\";\nimport { $ } from \"../../utils/utils\";\nimport { t } from \"../../utils/lang\";\n\nexport function showTetrisMessage(contents) {\n\tif (settings.Messages) {\n\t\tconst clearEle = $(\"clear\");\n\t\tclearEle.innerHTML = contents;\n\t\tclearEle.classList.remove(\"flyaway\");\n\t\tvoid clearEle.offsetWidth;\n\t\tclearEle.classList.add(\"flyaway\");\n\n\t\tconst comboname =\n\t\t\tsettings.Voice && settings.Voicebank == 2 ? \"ren\" : \"combo\";\n\n\t\tconst renEle = $(\"renmsg\");\n\t\tconst renDiv = $(\"rendiv\");\n\t\tif (Mutable.combo < 2) {\n\t\t\trenEle.innerHTML = \"\";\n\t\t} else if (Mutable.combo > 19) {\n\t\t\trenEle.innerHTML = t(comboname, Mutable.combo - 1);\n\t\t\trenDiv.style[\"animation-duration\"] = \"0.041s\";\n\t\t} else {\n\t\t\trenEle.innerHTML = t(comboname, Mutable.combo - 1);\n\t\t\trenDiv.style[\"animation-duration\"] =\n\t\t\t\t0.5 - 0.485 * ((Mutable.combo - 2) / 18) + \"s\";\n\t\t}\n\t\tconst b2bEle = $(\"b2bmsg\");\n\t\tconst b2bDiv = $(\"b2bdiv\");\n\t\tif (Mutable.b2b <= 0) {\n\t\t\tb2bEle.innerHTML = \"\";\n\t\t} else {\n\t\t\tb2bEle.innerHTML = t(\"streak\", Mutable.b2b);\n\t\t\tb2bDiv.classList.remove(\"b2b-fade\");\n\t\t\tvoid b2bDiv.offsetWidth;\n\t\t\tb2bDiv.classList.add(\"b2b-fade\");\n\t\t}\n\t}\n}\n\nexport function showSpinMessage(piece, mini) {\n\tshowTetrisMessage(t(mini ? \"mini\" : \"spin\", piece));\n}\n\nexport function sendClearTetrisMessage(spin, mini) {\n\tconst pieceName = [\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"][piece.index];\n\tlet message = \"\";\n\n\tif (spin) {\n\t\tmessage = t(\"spin\", pieceName);\n\t} else if (mini) {\n\t\tmessage = t(\"mini\", pieceName);\n\t}\n\n\tif (Mutable.b2b > 1 && (Mutable.lineClear > 3 || spin)) {\n\t\tmessage = t(\"b2b\", message) + \"<br>\";\n\t}\n\tmessage += t(\"line\", Mutable.lineClear);\n\tif (Mutable.b2b > 1 && (Mutable.lineClear > 3 || spin)) {\n\t\tmessage += \"<br>\" + t(\"b2b_streak\", Mutable.b2b) + \"</small>\";\n\t}\n\n\tshowTetrisMessage(message);\n}\n\nexport function clearTetrisMessage() {\n\t$(\"clear\").innerHTML = \"\";\n\t$(\"renmsg\").innerHTML = \"\";\n\t$(\"b2bmsg\").innerHTML = \"\";\n}\n", "import { Game } from \"../../game\";\nimport { makeSprite, nes } from \"../../logic/view\";\nimport { Elements, Mutable } from \"../../utils/data\";\nimport { GameType } from \"../../utils/enums\";\nimport { t } from \"../../utils/lang\";\nimport { timeString } from \"../../utils/string\";\nimport { $, $setText } from \"../../utils/utils\";\n\nexport function statistics() {\n\tconst {\n\t\ttimeCanvas,\n\t\ttimeCtx,\n\t} = Elements;\n\n\tconst time = timeString(Mutable.scoreTime || 0);\n\n\tconst fsbl = 30; /* frameskip bar length */\n\tlet skipL = Mutable.frameSkipped % (fsbl * 2);\n\tlet skipR = Mutable.frameSkipped % (fsbl * 2);\n\tskipL = skipL - fsbl < 0 ? 0 : skipL - fsbl;\n\tskipR = skipR > fsbl ? fsbl : skipR;\n\tskipL = (skipL / fsbl) * timeCanvas.width;\n\tskipR = (skipR / fsbl) * timeCanvas.width;\n\n\ttimeCtx.clearRect(0, 0, timeCanvas.width, timeCanvas.height);\n\ttimeCtx.fillText(time, timeCanvas.width / 2, timeCanvas.height / 2);\n\ttimeCtx.fillRect(skipL, timeCanvas.height - 0.2, skipR, timeCanvas.height);\n}\n\n/**\n * Draws the stats about the stack next to the tetrion.\n */\n// /* farter */\n\nexport function statisticsStack() {\n\tconst {\n\t\tstatsPiece,\n\t\tstatsLines,\n\t\tstatsLevel,\n\t\tstatsIpieces,\n\t\tstatsScore,\n\t\tstatsFinesse\n\t} = Elements;\n\n\t$setText(statsPiece, Mutable.piecesSet);\n\t$setText(statsFinesse, Mutable.statsFinesse);\n\n\tconst scoreEle = $(\"score\");\n\tconst scoreLabelEle = $(\"score-label\");\n\tconst newScoreEle = $(\"nesscore\");\n\tconst nesratetr = $(\"nesratetr\");\n\tif (Game.type === GameType.Retro) {\n\t\tscoreEle.classList.add(\"gone\");\n\t\tscoreLabelEle.classList.remove(\"gone\");\n\t\tnewScoreEle.classList.remove(\"gone\");\n\t\tnesratetr.classList.remove(\"gone\");\n\t} else if (Game.type === GameType.Grades) {\n\t\tscoreEle.classList.add(\"gone\");\n\t\tscoreLabelEle.classList.add(\"gone\");\n\t} else {\n\t\tscoreEle.classList.remove(\"gone\");\n\t\tscoreLabelEle.classList.remove(\"gone\");\n\t\tnewScoreEle.classList.add(\"gone\");\n\t\tnesratetr.classList.add(\"gone\");\n\t}\n\tconst levelEle = $(\"level\");\n\tif (Game.type === GameType.Sprint || Game.type === GameType.ScoreAttack) {\n\t\t$setText(statsLines, Mutable.lineLimit - Mutable.lines);\n\t\t$setText(statsLevel, \"\");\n\t} else if (Game.type === GameType.Marathon || Game.type === 7) {\n\t\t$setText(statsLines, Mutable.lines);\n\t\tif (Game.params.noGravity != true) {\n\t\t\tlevelEle.innerHTML = t(\"level\", Mutable.level + 1);\n\t\t}\n\t} else if (Game.type === GameType.Retro) {\n\t\t$setText(statsLines, Mutable.lines);\n\t\tlevelEle.innerHTML = t(\"level\", Mutable.level + 1);\n\t\tif (Mutable.lineDrought < 13) {\n\t\t\t$setText(statsIpieces, Mutable.lineAmount);\n\t\t}\n\t\tif (Game.params.bType == true) {\n\t\t\t$setText(statsLines, Mutable.lineLimit - Mutable.lines);\n\t\t}\n\t} else if (Game.type === GameType.Master) {\n\t\t$setText(statsLines, Mutable.lines);\n\t\tlevelEle.innerHTML = t(\"level_m\", Mutable.level + 1);\n\t} else if (Game.type === GameType.Survival) {\n\t\tif (Game.params.digOffset || Game.params.digOffset !== 0) {\n\t\t\t$setText(statsLevel, Game.params.digOffset + \"+\");\n\t\t} else {\n\t\t\t$setText(statsLevel, \"\");\n\t\t}\n\t\t$setText(statsLines, Mutable.lines);\n\t} else if (Game.type === GameType.Grades) {\n\t\t$setText(statsLines, Mutable.lines);\n\t\t$setText(\n\t\t\tstatsLevel,\n\t\t\t`${Mutable.leveltgmvisible}/${\n\t\t\t\t(Math.floor((Mutable.leveltgm / 100) % 10) + 1) * 100\n\t\t\t}`\n\t\t);\n\t}\n\t//else if (Game.type === GameType.Dig){\n\t// $setText(statsLines, Mutable.digLines.length);\n\t//}\n\telse {\n\t\t$setText(statsLines, Mutable.lines);\n\t\t$setText(statsLevel, \"\");\n\t}\n\tconst holdTextEle = $(\"holdtext\");\n\tif (Game.type !== 8) {\n\t\tholdTextEle.innerHTML = \"<span class='white-border-span'>Hold</span>\";\n\t} else {\n\t\tholdTextEle.innerHTML = \"\";\n\t}\n\n\tif (Game.type === GameType.Retro) {\n\t\t$(\"lineshower\").classList.remove(\"gone\");\n\t} else {\n\t\t$(\"lineshower\").classList.add(\"gone\");\n\t}\n\n\tif (Game.type !== GameType.Master) {\n\t\t$(\"rainbow\").classList.add(\"gone\");\n\t} else {\n\t\t// $(\"rainbow\").classList.remove(\"gone\");\n\t}\n\n\tif (Game.type === GameType.Retro && Game.params.retroSkin == true) {\n\t\tmakeSprite();\n\t\tswitch (\n\t\t\tparseInt(\n\t\t\t\tMutable.level\n\t\t\t\t\t.toString()\n\t\t\t\t\t.charAt(Mutable.level.toString().length - 1)\n\t\t\t)\n\t\t) {\n\t\t\tcase 0:\n\t\t\t\tnes[9] = [\"#0058f8\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#0058f8\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#3ebeff\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tnes[9] = [\"#00a800\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#00a800\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#80d010\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tnes[9] = [\"#db00cd\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#db00cd\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#f878f8\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tnes[9] = [\"#0058f8\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#0058f8\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#5bdb57\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tnes[9] = [\"#e7005b\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#e7005b\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#58f898\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tnes[9] = [\"#58f898\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#58f898\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#6b88ff\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 6:\n\t\t\t\tnes[9] = [\"#f83800\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#f83800\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#7f7f7f\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 7:\n\t\t\t\tnes[9] = [\"#6b47ff\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#6b47ff\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#ab0023\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 8:\n\t\t\t\tnes[9] = [\"#0058f8\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#0058f8\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#f83800\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t\tcase 9:\n\t\t\t\tnes[9] = [\"#f83800\", \"#ffffff\"];\n\t\t\t\tnes[2] = [\"#f83800\", \"#ffffff00\"];\n\t\t\t\tnes[7] = [\"#ffa347\", \"#ffffff00\"];\n\t\t\t\tbreak;\n\t\t}\n\t} else {\n\t\tnes[0] = [\"#c1c1c1\", \"#ffffff00\"];\n\t\tnes[1] = [\"#3ebeff\", \"#ffffff\"];\n\t\tnes[2] = [\"#0058f8\", \"#ffffff00\"];\n\t\tnes[3] = [\"#f83800\", \"#ffffff00\"];\n\t\tnes[4] = [\"#ffa347\", \"#ffffff\"];\n\t\tnes[5] = [\"#80d010\", \"#ffffff00\"];\n\t\tnes[6] = [\"#db00cd\", \"#ffffff\"];\n\t\tnes[7] = [\"#ab0023\", \"#ffffff00\"];\n\t\tnes[8] = [\"#898989\", \"#ffffff00\"];\n\t\tnes[9] = [\"#0058f8\", \"#ffffff\"];\n\t}\n\t/*\n\tconst light = [\n\t\t\"#ffffff\",\n\t\t\"#EFB08C\",\n\t\t\"#EDDD82\",\n\t\t\"#8489C7\",\n\t\t\"#FFDB94\",\n\t\t\"#EFAFC5\",\n\t\t\"#98DF6E\",\n\t\t\"#6FC5C5\",\n\t\t\"#9A7FD1\",\n\t\t\"#78D4A3\",\n\t];\n\tstatsScore.style.color = (Mutable.b2b === 0 ? '' : light[Mutable.b2b % 10]);\n\tstatsScore.style.textShadow = (Scores.combo === 0 ? '' : ('0 0 0.5em ' + light[(Scores.combo - 1) % 10]));\n\t$setText(statsScore, scorestring(Mutable.score.toString(), 2));\n\t*/\n\t$setText(statsScore, (~~Mutable.newScore).toLocaleString());\n}\n", "import { fixed } from \"./math\";\n\nexport function padZero(v: number) {\n\treturn (v < 10 ? \"0\" : \"\") + v.toString();\n}\n\nexport function timeString(ms: number) {\n\tconst seconds = fixed((ms % 60000) / 1000, 2);\n\tconst minutes = ~~(ms / 60000);\n\treturn `${padZero(minutes)}:${(seconds < 10 ? \"0\" : \"\")}${seconds.toFixed(2)}`;\n}\n", "/**\n * Add divisor method so we can do clock arithmetics. This is later used to\n *  determine tetromino orientation.\n */\nexport function mod(v: number, n: number) {\n\treturn ((v % n) + n) % n;\n}\n\nexport function clamp(v: number, min: number, max: number) {\n\treturn Math.min(Math.max(v, min), max);\n}\n\nexport function fixed(v: number, digits: number) {\n\treturn Math.round(v * Math.pow(10, digits)) / Math.pow(10, digits);\n}\n\n", "\nimport { Game } from \"./game\";\nimport { keyUpDown } from \"./logic/view\";\nimport { Mutable } from \"./utils/data\";\nimport { clamp } from \"./utils/math\";\nimport { $setText, $ } from \"./utils/utils\";\n\nlet scoreNes = 0;\n\nexport function scoreNesRefresh() {\n\tscoreNes = clamp(scoreNes, 0, 999999);\n\t$setText($(\"nesscore\"), scoreNes);\n}\n\nexport function tetRateNesRefresh() {\n\tconst nesRate = $(\"nesrate\");\n\tif (\n\t\tMutable.tetRateNes <= 0.25 &&\n\t\t(Mutable.tetNes > 0 || Mutable.nontetNes > 3) &&\n\t\tGame.params.proMode == true\n\t) {\n\t\tnesRate.style.color = \"#ff0000\";\n\t\tnesRate.classList.add(\"drought-flash\");\n\t} else {\n\t\tnesRate.style.color = \"#ffffff\";\n\t\tnesRate.classList.remove(\"drought-flash\");\n\t}\n\t$setText(nesRate, Math.floor(Mutable.tetRateNes * 100).toString() + \"%\");\n}\n/**\n * ========================== Model ===========================================\n */\n\nexport function scorestring(s, n) {\n\tconst strsplit = s.split(\"\");\n\tlet spacetoggle = 0;\n\tfor (let i = strsplit.length - 1 - 3; i >= 0; i -= 3) {\n\t\tstrsplit[i] += spacetoggle === n - 1 ? \" \" : \"\\xA0\";\n\t\tspacetoggle = (spacetoggle + 1) % n;\n\t}\n\treturn strsplit.join(\"\");\n}\n\nexport function updateScoreTime() {\n\tMutable.scoreTime = Date.now() - Mutable.scoreStartTime - Game.pauseTime;\n}\n\n// ========================== View ============================================\n\naddEventListener(\"keydown\", keyUpDown, false);\naddEventListener(\"keyup\", keyUpDown, false);\n\n// ========================== Loop ============================================\n\n// break when game over\n\n//TODO Cleanup gameloop and update.\n", "import { hold } from \"../logic/hold\";\nimport { makeSprite, bg } from \"../logic/view\";\nimport { settings } from \"../settings\";\nimport { Elements, Mutable } from \"../utils/data\";\nimport { piece } from \"./tetrion/piece\";\nimport { preview } from \"./tetrion/preview\";\nimport { stack } from \"./tetrion/stack\";\nimport { $ } from \"../utils/utils\";\nimport { touchButtonsLayout } from \"../touch\";\nimport { statistics, statisticsStack } from \"./tetrion/stats\";\n\nexport function resize() {\n\tconst {\n\t\tstats,\n\t\tstackCanvas,\n\t\tactiveCanvas,\n\t\tbgStackCanvas,\n\t\tholdCanvas,\n\t\tpreviewCanvas,\n\t\tmsg,\n\t\th3,\n\t\ttimeCanvas,\n\t\ttimeCtx,\n\t\tbgStackCtx,\n\t} = Elements;\n\n\tconst a = $(\"a\");\n\tconst b = $(\"b\");\n\tconst c = $(\"c\");\n\tconst d = $(\"d\");\n\tconst content = $(\"content\");\n\t/*\n\tif (settings.NextSide === 1) {\n\t\tcontent.innerHTML = \"\";\n\t\tcontent.appendChild(c);\n\t\tcontent.appendChild(b);\n\t\tcontent.appendChild(d);\n\t} else {\n\t\tcontent.innerHTML = \"\";\n\t\tcontent.appendChild(d);\n\t\tcontent.appendChild(b);\n\t\tcontent.appendChild(c);\n\t}\n\t*/\n\t// TODO Finalize this.\n\t// Aspect ratio: 1.024\n\tconst padH = 12;\n\tlet screenHeight = window.innerHeight - padH * 2;\n\tconst screenWidth = ~~(screenHeight * 1.0);\n\tif (screenWidth > window.innerWidth)\n\t\tscreenHeight = ~~(window.innerWidth / 1.0);\n\n\tMutable.cellSize = Math.max(~~(screenHeight / 20), 10);\n\tif (settings.Size === 1 && Mutable.cellSize >= 16) Mutable.cellSize = 16;\n\telse if (settings.Size === 2 && Mutable.cellSize >= 24)\n\t\tMutable.cellSize = 24;\n\telse if (settings.Size === 3 && Mutable.cellSize >= 32)\n\t\tMutable.cellSize = 32;\n\telse if (settings.Size === 4 && Mutable.cellSize >= 48)\n\t\tMutable.cellSize = 48;\n\n\tconst pad = window.innerHeight - (Mutable.cellSize * 20 + 2);\n\tconst padFinal = Math.min(pad / 2, padH);\n\t//console.log(pad);\n\tcontent.style.padding =\n\t\t//\"0 0\";\n\t\t//(pad / 2) + 'px' + ' 0';\n\t\tpadFinal + \"px\" + \" 0\";\n\n\tstats.style.bottom =\n\t\t//(pad) + 'px';\n\t\t//(pad / 2) + 'px';\n\t\tpad - padFinal + \"px\";\n\t//(pad - padH) + 'px';\n\n\t// Size elements\n\ta.style.padding = \"0 0.5rem \" + ~~(Mutable.cellSize / 2) + \"px\";\n\n\tstackCanvas.width =\n\t\tactiveCanvas.width =\n\t\tbgStackCanvas.width =\n\t\t\tMutable.cellSize * 10;\n\tstackCanvas.height =\n\t\tactiveCanvas.height =\n\t\tbgStackCanvas.height =\n\t\t\tMutable.cellSize * 20;\n\tb.style.width = stackCanvas.width + \"px\";\n\tb.style.height = stackCanvas.height + \"px\";\n\n\tholdCanvas.width = Mutable.cellSize * 4;\n\tholdCanvas.height = Mutable.cellSize * 3;\n\ta.style.width = holdCanvas.width + \"px\";\n\ta.style.height = holdCanvas.height + \"px\";\n\n\tpreviewCanvas.width = Mutable.cellSize * 4;\n\tpreviewCanvas.height = stackCanvas.height - Mutable.cellSize * 2;\n\tc.style.width = previewCanvas.width + \"px\";\n\tc.style.height = b.style.height;\n\n\t// Scale the text so it fits in the thing.\n\t// TODO get rid of extra font sizes here.\n\t$(\"msgdiv\").style.lineHeight = b.style.height;\n\tmsg.style.fontSize = ~~(stackCanvas.width / 6) + \"px\";\n\tmsg.style.lineHeight = msg.style.fontSize;\n\tstats.style.fontSize = ~~(stackCanvas.width / 11) + \"px\";\n\tdocument.documentElement.style.fontSize = ~~(stackCanvas.width / 16) + \"px\";\n\n\tfor (let i = 0, len = h3.length; i < len; i++) {\n\t\th3[i].style.lineHeight = Mutable.cellSize * 2 + \"px\";\n\t\th3[i].style.fontSize = stats.style.fontSize;\n\t}\n\tstats.style.width = d.clientWidth + \"px\";\n\n\ttimeCanvas.width = d.clientWidth;\n\ttimeCanvas.height =\n\t\ttimeCanvas.clientHeight ||\n\t\ttimeCanvas.offsetHeight ||\n\t\ttimeCanvas.getBoundingClientRect().height;\n\n\ttimeCtx.font = '1em Roboto Mono, \"Trebuchet MS\"';\n\ttimeCtx.textAlign = \"center\";\n\ttimeCtx.textBaseline = \"middle\";\n\n\ttouchButtonsLayout();\n\n\t// Redraw graphics\n\tmakeSprite();\n\n\tif (settings.Grid) bg(bgStackCtx);\n\n\t//if (Game.state === GameState.Normal) {\n\ttry {\n\t\tpiece.draw();\n\t\tstack.draw();\n\n\t\tpreview.draw();\n\t\tif (hold.piece !== undefined) {\n\t\t\thold.draw();\n\t\t}\n\t\tstatistics();\n\t\tstatisticsStack();\n\t} catch (e) {}\n\t//}\n}\n", "import { resize } from \"./display/size\";\nimport { keyUpDown } from \"./logic/view\";\nimport { binds } from \"./utils/data\";\nimport { $ } from \"./utils/utils\";\n\ntype Weird = HTMLElement & { follow: FollowingButton; bindsMemberName: string };\n\nconst touchLayout = $(\"touchLayout\");\n\nclass FollowingButton {\n\tenabled: boolean;\n\n\trectX0: any;\n\n\trectY0: any;\n\n\trectX1: any;\n\n\trectY1: any;\n\n\tx: number;\n\n\ty: number;\n\n\trecentTouches: any[];\n\n\tconstructor(button) {\n\t\tthis.rectX0 = button.offsetLeft;\n\t\tthis.rectY0 = button.offsetTop;\n\t\tthis.rectX1 = button.offsetLeft + button.offsetWidth;\n\t\tthis.rectY1 = button.offsetTop + button.offsetHeight;\n\t\tthis.x = (this.rectX0 + this.rectX1) / 2;\n\t\tthis.y = (this.rectY0 + this.rectY1) / 2;\n\t\tthis.recentTouches = [];\n\t\tthis.enabled = true;\n\t}\n}\n\nclass FollowingButtonSet {\n\tstatic readonly RANGE = 96;\n\n\ttouchStart(pos) {\n\t\t//\n\t}\n\n\tposToBinds(pos) {\n\t\tlet mindist = Infinity;\n\t\tlet minbtnid = undefined;\n\t\tfor (let i = 0; i < touchButtons.length; i++) {\n\t\t\tconst btnflw = touchButtons[i].follow;\n\t\t\tconst dist = Math.hypot(pos.x - btnflw.x, pos.y - btnflw.y);\n\t\t\tif (dist < mindist) {\n\t\t\t\tmindist = dist;\n\t\t\t\tminbtnid = i;\n\t\t\t}\n\t\t}\n\t\treturn minbtnid;\n\t}\n}\n\nconst touchLeft: Weird = $(\"touchLeft\");\nconst touchRight: Weird = $(\"touchRight\");\nconst touchDown: Weird = $(\"touchDown\");\nconst touchDrop: Weird = $(\"touchDrop\");\nconst touchHold: Weird = $(\"touchHold\");\nconst touchRotLeft: Weird = $(\"touchRotLeft\");\nconst touchRotRight: Weird = $(\"touchRotRight\");\nconst touchRot180: Weird = $(\"touchRot180\");\n\nconst touchButtons = [\n\ttouchLeft,\n\ttouchRight,\n\ttouchDown,\n\ttouchDrop,\n\ttouchHold,\n\ttouchRotRight,\n\ttouchRotLeft,\n\ttouchRot180,\n];\n\ntouchLeft.bindsMemberName = \"moveLeft\";\ntouchRight.bindsMemberName = \"moveRight\";\ntouchDown.bindsMemberName = \"moveDown\";\ntouchDrop.bindsMemberName = \"hardDrop\";\ntouchHold.bindsMemberName = \"holdPiece\";\ntouchRotRight.bindsMemberName = \"rotRight\";\ntouchRotLeft.bindsMemberName = \"rotLeft\";\ntouchRot180.bindsMemberName = \"rot180\";\n\nfor (let i = 0; i < touchButtons.length; i++) {\n\tconst btn = touchButtons[i];\n\tbtn.follow = new FollowingButton(btn);\n}\n\nexport function touchButtonsLayout() {\n\tconst dpiX = 96;\n\tconst dpiY = 96;\n\tconst winW = window.innerWidth / dpiX;\n\tconst winH = window.innerHeight / dpiY;\n\tconst buttonH = 0.7;\n\tlet buttonW = 1;\n\tconst fontSize = 0.55;\n\tconst margin = 0.1;\n\tconst unit = \"in\";\n\n\tconst setPos = (\n\t\telem,\n\t\tposX,\n\t\tposY,\n\t\tsizeW,\n\t\tsizeH,\n\t\talignX,\n\t\talignY,\n\t\toffsetX,\n\t\toffsetY\n\t) => {\n\t\telem.style.width = \"\" + sizeW + unit;\n\t\telem.style.height = \"\" + sizeH + unit;\n\t\t// border ignored, for now\n\t\telem.style.left =\n\t\t\t\"\" +\n\t\t\t(offsetX +\n\t\t\t\talignX * 0.5 * (winW - sizeW) +\n\t\t\t\tposX * sizeW -\n\t\t\t\t((alignX - 1) * margin) / 2) +\n\t\t\tunit;\n\t\telem.style.top =\n\t\t\t\"\" +\n\t\t\t(offsetY +\n\t\t\t\talignY * 0.5 * (winH - sizeH) +\n\t\t\t\tposY * sizeH -\n\t\t\t\t((alignY - 1) * margin) / 2) +\n\t\t\tunit;\n\t\telem.classList.remove(\"gone\");\n\t\telem.style.fontSize = \"\" + fontSize + unit;\n\t};\n\n\tconst layouts = {\n\t\t//function array\n\t\tNONE: function () {\n\t\t\tfor (let i = 0, len = touchButtons.length; i < len; i++)\n\t\t\t\ttouchButtons[i].classList.add(\"gone\");\n\t\t},\n\t\tKBD_R: function () {\n\t\t\tsetPos(touchRotLeft, 0, -1, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchRot180, 0.5, -2, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchRotRight, 1, -1, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchHold, 1.5, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchRight, 0, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchLeft, -2, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchDown, -1, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchDrop, -1, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t},\n\t\tKBD_L: function () {\n\t\t\tsetPos(touchRotLeft, -1, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRot180, -0.4, -2, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRotRight, 0, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchHold, -1.5, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRight, 2, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchLeft, 0, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchDown, 1, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchDrop, 1, -1, buttonW, buttonH, 0, 2, 0, 0);\n\t\t},\n\t\tJOY: function () {\n\t\t\tlet oy /*offset Y by block*/;\n\t\t\tlet ay /*align Y*/;\n\t\t\tif (winH - winW > buttonH * 1.5) {\n\t\t\t\toy = -1;\n\t\t\t\tay = 2;\n\t\t\t} else {\n\t\t\t\toy = 0;\n\t\t\t\tay = 1;\n\t\t\t}\n\t\t\t/* single finger */\n\t\t\tbuttonW = 0.8;\n\t\t\tif ((winW - 0.1) / 4 < buttonW) {\n\t\t\t\tbuttonW = (winW - 0.1) / 4;\n\t\t\t}\n\t\t\tsetPos(touchRotLeft, -0.5, 1 + oy, buttonW, buttonH, 2, ay, 0, 0);\n\t\t\tsetPos(touchRot180, -0.5, -1 + oy, buttonW, buttonH, 2, ay, 0, 0);\n\t\t\tsetPos(touchRotRight, 0, 0 + oy, buttonW, buttonH, 2, ay, 0, 0);\n\t\t\tsetPos(touchHold, -1, 0 + oy, buttonW, buttonH, 2, ay, 0, 0);\n\t\t\tsetPos(touchRight, 1, 0 + oy, buttonW, buttonH, 0, ay, 0, 0);\n\t\t\tsetPos(touchLeft, 0, 0 + oy, buttonW, buttonH, 0, ay, 0, 0);\n\t\t\tsetPos(touchDown, 0.5, 1 + oy, buttonW, buttonH, 0, ay, 0, 0);\n\t\t\tsetPos(touchDrop, 0.5, -1 + oy, buttonW, buttonH, 0, ay, 0, 0);\n\t\t},\n\t\tJOY2: function () {\n\t\t\tlet oy /*offset Y by block*/;\n\t\t\tlet ay /*align Y*/;\n\t\t\tif (winH - winW > buttonH * 1.5) {\n\t\t\t\toy = -1;\n\t\t\t\tay = 2;\n\t\t\t} else {\n\t\t\t\toy = 0;\n\t\t\t\tay = 1;\n\t\t\t}\n\t\t\t/* single finger */\n\t\t\tbuttonW = 0.8;\n\t\t\tif ((winW - 0.1) / 4 < buttonW) {\n\t\t\t\tbuttonW = (winW - 0.1) / 4;\n\t\t\t}\n\t\t\tsetPos(touchRotLeft, -1, 1 + oy, buttonW, buttonH, 2, ay, 0, 0);\n\t\t\tsetPos(touchRot180, -1, -1 + oy, buttonW, buttonH, 2, ay, 0, 0);\n\t\t\tsetPos(touchRotRight, 0, 0 + oy, buttonW, buttonH, 2, ay, 0, 0);\n\t\t\tsetPos(touchHold, -2, 0 + oy, buttonW, buttonH, 2, ay, 0, 0);\n\t\t\tsetPos(touchRight, 2, 0 + oy, buttonW, buttonH, 0, ay, 0, 0);\n\t\t\tsetPos(touchLeft, 0, 0 + oy, buttonW, buttonH, 0, ay, 0, 0);\n\t\t\tsetPos(touchDown, 1, 1 + oy, buttonW, buttonH, 0, ay, 0, 0);\n\t\t\tsetPos(touchDrop, 1, -1 + oy, buttonW, buttonH, 0, ay, 0, 0);\n\t\t},\n\n\t\tNARROW: function () {\n\t\t\tsetPos(touchLeft, -2, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRight, 0, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tif (winH - winW > buttonH * 1.5) {\n\t\t\t\tsetPos(touchDown, -1, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\t\tsetPos(touchDrop, -1, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\t} else {\n\t\t\t\tsetPos(touchDown, 0, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\t\tsetPos(touchDrop, -1, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\t}\n\t\t\tsetPos(touchRotLeft, 0, -1.2, buttonW, buttonH, 0, 1, 0, 0);\n\t\t\tsetPos(touchRotRight, 0, 0, buttonW, buttonH, 0, 1, 0, 0);\n\t\t\tsetPos(touchHold, 0, 1.2, buttonW, buttonH, 0, 1, 0, 0);\n\t\t\tsetPos(touchRot180, 0, -2.4, buttonW, buttonH, 0, 1, 0, 0);\n\t\t},\n\t\tNARROW_L: function () {\n\t\t\tsetPos(touchRotLeft, -2, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRotRight, -1, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchDrop, 0, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tif (winH - winW > buttonH * 1.5) {\n\t\t\t\tsetPos(touchRot180, -1, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\t} else {\n\t\t\t\tsetPos(touchRot180, 0, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\t}\n\t\t\tsetPos(touchLeft, 0, -1.2, buttonW, buttonH, 0, 1, 0, 0);\n\t\t\tsetPos(touchDown, 0, 0, buttonW, buttonH, 0, 1, 0, 0);\n\t\t\tsetPos(touchRight, 0, 1.2, buttonW, buttonH, 0, 1, 0, 0);\n\t\t\tsetPos(touchHold, 0, -2.4, buttonW, buttonH, 0, 1, 0, 0);\n\t\t},\n\t\tNARROW_LM: function () {\n\t\t\tsetPos(touchLeft, 0, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchRight, 2, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tif (winH - winW > buttonH * 1.5) {\n\t\t\t\tsetPos(touchDown, 1, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\t\tsetPos(touchDrop, 1, -1, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\t} else {\n\t\t\t\tsetPos(touchDown, 0, -1, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\t\tsetPos(touchDrop, 1, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\t}\n\t\t\tsetPos(touchRotLeft, 0, -1.2, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRotRight, 0, -2.4, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchHold, 0, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRot180, 0, -3.6, buttonW, buttonH, 2, 2, 0, 0);\n\t\t},\n\n\t\tDELUXE: function () {\n\t\t\tbuttonW = 0.8;\n\t\t\tif ((winW - 0.1) / 4 < buttonW) {\n\t\t\t\tbuttonW = (winW - 0.1) / 4;\n\t\t\t}\n\t\t\tsetPos(touchLeft, 0, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchRight, 1, 0, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\tsetPos(touchDown, 0, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchDrop, 0, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRotLeft, -1, 0, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchRotRight, -1, -1, buttonW, buttonH, 2, 2, 0, 0);\n\t\t\tsetPos(touchHold, 0.5, -1, buttonW, buttonH, 0, 2, 0, 0);\n\t\t\t//setPos(touchRot180,   0, -buttonH*2.4, buttonW, buttonH, 0, 1, 0, 0);\n\t\t\ttouchRot180.classList.add(\"gone\");\n\t\t},\n\t};\n\n\tsetPos(touchLayout, 0, 0, buttonW, buttonH, 2, 0, 0, 0);\n\tif (currLayout === -2) {\n\t\t// none\n\t\tlayouts[\"NONE\"]();\n\t} else if (currLayout === -1) {\n\t\t// auto detection\n\t\tif (winW < buttonW * 3) {\n\t\t\tlayouts[\"NONE\"]();\n\t\t} else if (\n\t\t\twinW - winH * 0.5 > buttonW * 4.5 ||\n\t\t\t(winH - winW > 4 * buttonH && winW > buttonW * 5.5)\n\t\t) {\n\t\t\tlayouts[\"KBD_R\"]();\n\t\t} else if (winW - winH * 0.5 > buttonW * 3) {\n\t\t\tlayouts[\"JOY\"]();\n\t\t} else if (winH - winW > 0) {\n\t\t\tlayouts[\"NARROW\"]();\n\t\t} else if (winW >= buttonW * 4) {\n\t\t\tlayouts[\"DELUXE\"]();\n\t\t} else {\n\t\t\tlayouts[\"NONE\"]();\n\t\t}\n\t} else {\n\t\tlayouts[\n\t\t\t[\n\t\t\t\t\"KBD_R\",\n\t\t\t\t\"KBD_L\",\n\t\t\t\t\"JOY\",\n\t\t\t\t\"JOY2\",\n\t\t\t\t\"NARROW\",\n\t\t\t\t\"NARROW_L\",\n\t\t\t\t\"NARROW_LM\",\n\t\t\t\t\"DELUXE\",\n\t\t\t][currLayout]\n\t\t]();\n\t}\n}\n\nconst nLayouts = 7;\nlet currLayout = -2; /* none */\n\nfunction touch(e) {\n\t//if (e.type===\"touchmove\")\n\t//e.preventDefault();\n\tif (\n\t\t(e.type === \"touchstart\" || e.type === \"click\") &&\n\t\te.target === touchLayout\n\t) {\n\t\tcurrLayout++;\n\t\tif (currLayout === nLayouts) {\n\t\t\tcurrLayout = -2; //none, auto, 0, 1, 2...\n\t\t}\n\t\tresize();\n\t}\n\tif (\n\t\te.type === \"touchstart\" ||\n\t\te.type === \"touchmove\" ||\n\t\te.type === \"touchend\"\n\t) {\n\t\tfor (const i in binds)\n\t\t\tkeyUpDown({\n\t\t\t\ttype: \"keyup\",\n\t\t\t\tkeyCode: binds[i],\n\t\t\t\tpreventDefault: () => {},\n\t\t\t});\n\t\tfor (let i = 0, l = e.touches.length; i < l; i++) {\n\t\t\tconst tX = e.touches[i].pageX;\n\t\t\tconst tY = e.touches[i].pageY;\n\t\t\tfor (let j = 0; j < touchButtons.length; j++) {\n\t\t\t\tconst oRef = touchButtons[j];\n\t\t\t\tif (\n\t\t\t\t\ttX >= oRef.offsetLeft &&\n\t\t\t\t\ttX < oRef.offsetLeft + oRef.offsetWidth &&\n\t\t\t\t\ttY >= oRef.offsetTop &&\n\t\t\t\t\ttY < oRef.offsetTop + oRef.offsetHeight\n\t\t\t\t) {\n\t\t\t\t\tkeyUpDown({\n\t\t\t\t\t\ttype: \"keydown\",\n\t\t\t\t\t\tkeyCode: binds[oRef.bindsMemberName],\n\t\t\t\t\t\tpreventDefault: () => {},\n\t\t\t\t\t});\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst preventDefault = (e) => {\n\te.preventDefault();\n};\n\ndocument.addEventListener(\"touchstart\", touch, false);\ndocument.addEventListener(\"touchmove\", touch, false);\ndocument.addEventListener(\"touchend\", touch, false);\ndocument.addEventListener(\"click\", touch, false);\n\ndocument.addEventListener(\"gesturestart\", preventDefault, false);\ndocument.addEventListener(\"gestureend\", preventDefault, false);\ndocument.addEventListener(\"gesturechange\", preventDefault, false);\n", "import { sound } from \"../display/sound/sound\";\nimport { preview } from \"../display/tetrion/preview\";\nimport { Game } from \"../game\";\nimport { guideline, iOnly, noI } from \"../utils/blackjack\";\nimport { Mutable } from \"../utils/data\";\nimport { timeString } from \"../utils/string\";\nimport { $setText, $ } from \"../utils/utils\";\nimport { GameType } from \"./base\";\n\nexport class Sprint extends GameType {\n\tupdate(): void {\n\t\t// TODO: figure out if any code needs to go here\n\t}\n\n\tinit() {\n\t\tsound.loadbgm(\"sprint\");\n\n\t\tGame.params.pieceSet = Game.settings.sprint.piece.val;\n\n\t\tpreview.randomizer.reset();\n\n\t\tswitch (Game.params.pieceSet) {\n\t\t\tcase 0:\n\t\t\t\tpreview.randomizer = guideline;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tpreview.randomizer = noI;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tpreview.randomizer = iOnly;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tpreview.reset();\n\n\t\tGame.params.backFire = Game.settings.sprint.backfire.val;\n\t\tswitch (Game.settings.sprint.limit.val) {\n\t\t\tcase 0:\n\t\t\t\tMutable.lineLimit = 40;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tMutable.lineLimit = 100;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tMutable.lineLimit = 200;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\twin() {\n\t\tconst sprintPB = localStorage.getItem(\"sprint40pb\");\n\t\tif (\n\t\t\t(!sprintPB || Mutable.scoreTime < parseFloat(sprintPB)) &&\n\t\t\tMutable.watchingReplay == false &&\n\t\t\tGame.params.pieceSet == 0 &&\n\t\t\tGame.params.backFire == 0 &&\n\t\t\tMutable.lineLimit == 40\n\t\t) {\n\t\t\tlocalStorage.setItem(\"sprint40pb\", Mutable.scoreTime.toString());\n\t\t\t$setText($(\"sprint-pb\"), timeString(Mutable.scoreTime));\n\t\t}\n\t}\n}\n", "export abstract class GameType {\n\tabstract init(): void;\n\t\n\tabstract update(): void;\n\t\n\twin(): void {}\n\t\n\tdie(): void {}\n\t\n\tdone() {}\n\n\tlineClear(lineClear: number) {}\n}\n", "import { sound } from \"../display/sound/sound\";\nimport { piece } from \"../display/tetrion/piece\";\nimport { stack } from \"../display/tetrion/stack\";\nimport { Game } from \"../game\";\nimport { Elements, Mutable } from \"../utils/data\";\nimport { clamp } from \"../utils/math\";\nimport { rng } from \"../utils/randomizer\";\nimport { range, $setText } from \"../utils/utils\";\nimport { GameType } from \"./base\";\n\nexport class Dig extends GameType {\n\tupdate(): void {\n\t\tif (Game.params.zen) {\n\t\t\tfor (\n\t\t\t\t;\n\t\t\t\tMutable.lastPiecesSet < Mutable.piecesSet;\n\t\t\t\tMutable.lastPiecesSet++\n\t\t\t) {\n\t\t\t\tMutable.digZenBuffer++;\n\t\t\t\tconst piecePerRise = [\n\t\t\t\t\t8,\n\t\t\t\t\t6.5,\n\t\t\t\t\t4,\n\t\t\t\t\t3.5,\n\t\t\t\t\t10 / 3,\n\t\t\t\t\t3,\n\t\t\t\t\t2.8,\n\t\t\t\t\t2.6,\n\t\t\t\t\t2.4,\n\t\t\t\t\t2.2,\n\t\t\t\t\t2,\n\t\t\t\t][clamp(Mutable.level, 0, 10)];\n\t\t\t\tif (Mutable.digZenBuffer - piecePerRise > -0.000000001) {\n\t\t\t\t\tMutable.digZenBuffer -= piecePerRise;\n\t\t\t\t\tif (Math.abs(Mutable.digZenBuffer) < -0.000000001) {\n\t\t\t\t\t\tMutable.digZenBuffer = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst arrRow = [8, 8, 8, 8, 8, 8, 8, 8, 8, 8];\n\t\t\t\t\tarrRow[~~(rng.next() * 10)] = 0;\n\n\t\t\t\t\tstack.rowRise(arrRow, piece);\n\t\t\t\t\tsound.playSFX(\"garbage\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tinit() {\n\t\tsound.loadbgm(\"sprint\");\n\n\t\tMutable.lastPiecesSet = 0;\n\t\tMutable.digZenBuffer = 0;\n\t\t\n\t\tif (Game.settings.dig.checker.val == 1) {\n\t\t\tGame.params.digraceType = \"checker\";\n\t\t} else {\n\t\t\tGame.params.digraceType = \"easy\";\n\t\t}\n\n\t\tif (\n\t\t\tGame.params.digraceType === undefined ||\n\t\t\tGame.params.digraceType === \"checker\"\n\t\t) {\n\t\t\t// harder digrace: checkerboard\n\t\t\tMutable.digLines = range(stack.height - 10, stack.height);\n\t\t\t$setText(Elements.statsLines, 10);\n\t\t\tfor (let y = stack.height - 1; y > stack.height - 10 - 1; y--) {\n\t\t\t\tfor (let x = 0; x < stack.width; x++) {\n\t\t\t\t\tif ((x + y) & 1) stack.grid[x][y] = 8;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Game.params.digraceType === \"easy\") {\n\t\t\tconst begin = ~~(rng.next() * stack.width);\n\t\t\tconst dire = ~~(rng.next() * 2) * 2 - 1;\n\t\t\tMutable.digLines = range(stack.height - 10, stack.height);\n\t\t\t$setText(Elements.statsLines, 10);\n\t\t\tfor (let y = stack.height - 1; y > stack.height - 10 - 1; y--) {\n\t\t\t\tfor (let x = 0; x < stack.width; x++) {\n\t\t\t\t\tif ((begin + dire * y + x + stack.width * 2) % 10 !== 0)\n\t\t\t\t\t\tstack.grid[x][y] = 8;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tGame.params.zen = Game.settings.dig.zen.val == 1;\n\n\t\t//stack.draw(); //resize\n\t}\n\n\tlineClear(lines: number): void {}\n}\n", "import { sound } from \"../display/sound/sound\";\nimport { Game } from \"../game\";\nimport { settings } from \"../settings\";\nimport { GameType } from \"./base\";\n\nexport class Marathon extends GameType {\n\tupdate(): void {\n\t\t// TODO: figure out if any code needs to go here\n\t}\n\n\tinit() {\n\t\tswitch (Game.settings.marathon.limit.val) {\n\t\t\tcase 0:\n\t\t\t\tGame.params.marathonLimit = 150;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tGame.params.marathonLimit = 200;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tGame.params.marathonLimit = undefined;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tGame.params.marathonLimit = 300;\n\t\t\t\tbreak;\n\t\t}\n\t\tGame.params.entryDelay = Game.settings.marathon.delay.val;\n\t\tif (Game.settings.marathon.nograv.val == 1) {\n\t\t\tGame.params.noGravity = true;\n\t\t} else {\n\t\t\tGame.params.noGravity = false;\n\t\t}\n\t\tif (Game.settings.marathon.invisible.val == 1) {\n\t\t\tGame.params.invisibleMarathon = true;\n\t\t}\n\t\tif (Game.settings.marathon.cap.val == 1) {\n\t\t\tGame.params.levelCap = 1;\n\t\t}\n\n\t\tsound.loadbgm(\"marathon\");\n\t\tsound.loadbgm(\"marathon2\");\n\t\tsound.loadbgm(\"marathon3\");\n\n\t\tsettings.Gravity = 0;\n\t}\n}\n", "import { sound } from \"../display/sound/sound\";\nimport { Game } from \"../game\";\nimport { GameType } from \"./base\";\n\nexport class Master extends GameType {\n\tupdate(): void {\n\t\t// TODO: figure out if any code needs to go here\n\t}\n\n\tinit() {\n\t\tif (Game.params.delayStrictness === 2) {\n\t\t\tsound.loadbgm(\"masterstrict\");\n\t\t\tsound.loadsidebgm(\"masterstrictdire\");\n\t\t} else {\n\t\t\tsound.loadbgm(\"master\");\n\t\t}\n\n\t\tGame.params.delayStrictness = Game.settings.master.lock.val;\n\t}\n}\n", "import { sound } from \"../display/sound/sound\";\nimport { preview } from \"../display/tetrion/preview\";\nimport { Game } from \"../game\";\nimport { settings } from \"../settings\";\nimport { nes } from \"../utils/blackjack\";\nimport { RotSys } from \"../utils/enums\";\nimport { GameType } from \"./base\";\n\nexport class Retro extends GameType {\n\tupdate(): void {\n\t\t// TODO: figure out if any code needs to go here\n\t}\n\t\n\tinit() {\n\t\tif (Game.params.proMode == false) {\n\t\t\tsound.loadbgm(\"retro\");\n\t\t} else {\n\t\t\tsound.cutsidebgm();\n\t\t\tsound.loadbgm(\"retropro\");\n\t\t\tsound.loadsidebgm(\"retroprodrought\");\n\t\t}\n\n\t\tif (Game.settings.retro.type.val == 1) {\n\t\t\tGame.params.bType = true;\n\t\t}\n\t\tif (Game.settings.retro.level.val >= 16) {\n\t\t\tGame.params.proMode = true;\n\t\t}\n\t\tif (Game.settings.retro.drop.val == 1) {\n\t\t\tGame.params.allowHardDrop = true;\n\t\t}\n\t\tif (Game.settings.retro.skin.val == 1) {\n\t\t\tGame.params.retroSkin = true;\n\t\t}\n\t\tGame.params.startingLevel = Game.settings.retro.level.val;\n\n\t\tsettings.Next = 1;\n\t\tsettings.set(\"RotSys\", RotSys.Nintendo);\n\t\tsettings.LockDelay = 80;\n\t\tsettings.DAS = 16;\n\t\tsettings.ARR = 6;\n\t\tsettings.SoftDrop = 5;\n\t\tsettings.Ghost = 2;\n\t\tif (Game.params.retroSkin == true) {\n\t\t\tsettings.Block = 8;\n\t\t}\n\n\t\tsettings.Outline = 0;\n\t\tsettings.Grid = false;\n\t\tsettings.Gravity = 0;\n\n\t\tpreview.randomizer = nes;\n\t}\n}\n", "import { sound } from \"../display/sound/sound\";\nimport { Mutable } from \"../utils/data\";\nimport { GameType } from \"./base\";\n\nexport class ScoreAttack extends GameType {\n\tupdate(): void {\n\t\t// TODO: figure out if any code needs to go here\n\t}\n\n\tinit() {\n\t\tsound.loadbgm(\"sprint\");\n\n\t\tMutable.lineLimit = 200;\n\t}\n}\n", "import { sound } from \"../display/sound/sound\";\nimport { piece } from \"../display/tetrion/piece\";\nimport { preview } from \"../display/tetrion/preview\";\nimport { Game } from \"../game\";\nimport { settings } from \"../settings\";\nimport { tgm3 } from \"../utils/blackjack\";\nimport { Mutable } from \"../utils/data\";\nimport { RotSys } from \"../utils/enums\";\nimport { GameType } from \"./base\";\n\nexport class Grades extends GameType {\n\tupdate(): void {\n\t\t// TODO: figure out if any code needs to go here\n\t}\n\n\tinit() {\n\t\tpiece.areLimit = 25;\n\t\tMutable.lineARE = 40;\n\t\tMutable.lineAREb = 0;\n\t\tsettings.Next = 3;\n\t\tsettings.DAS = 14;\n\t\tsettings.LockDelay = 30;\n\t\tif (Game.params.classicRule === true) {\n\t\t\tsettings.set(\"RotSys\", RotSys.Arika);\n\t\t\tsettings.Block = 3;\n\t\t} else {\n\t\t\tsettings.set(\"RotSys\", RotSys.Super);\n\t\t\tsettings.Block = 2;\n\t\t}\n\n\t\tif (Game.settings.grades.rule.val == 1) {\n\t\t\tGame.params.classicRule = false;\n\t\t} else {\n\t\t\tGame.params.classicRule = true;\n\t\t}\n\t\tsound.loadbgm(\"grade1\");\n\t\tsound.loadbgm(\"grade2\");\n\t\tsound.loadbgm(\"grade3\");\n\n\t\tpreview.randomizer = tgm3;\n\t}\n}\n", "import { menu } from \"../display/menu\";\nimport { sound } from \"../display/sound/sound\";\nimport { piece } from \"../display/tetrion/piece\";\nimport { stack } from \"../display/tetrion/stack\";\nimport { Game } from \"../game\";\nimport { flags, arrStages, Mutable, Elements } from \"../utils/data\";\nimport { GameState } from \"../utils/enums\";\nimport { rng } from \"../utils/randomizer\";\nimport { $setText } from \"../utils/utils\";\nimport { GameType } from \"./base\";\n\nlet frameLastRise;\n\nexport class Survival extends GameType {\n\tinit() {\n\t\tsound.cutsidebgm();\n\t\tsound.loadbgm(\"survival\");\n\t\tsound.loadsidebgm(\"survivaldire\");\n\n\t\tframeLastRise = 0;\n\t\tMutable.frameLastRise = 0;\n\n\t\tif (Game.settings.survival.zen.val == 1) {\n\t\t\tGame.params.zen = true;\n\t\t}\n\t\tGame.params.digOffset = 500 * Game.settings.survival.slevel.val;\n\t}\n\n\tupdate() {\n\t\t//Dig\n\t\tconst fromLastRise = Mutable.frame - frameLastRise;\n\t\tconst fromLastHD =\n\t\t\tflags.hardDrop & Mutable.keysDown\n\t\t\t\t? Mutable.frame - Mutable.frameLastRise\n\t\t\t\t: 0;\n\n\t\tconst arrRow = [8, 8, 8, 8, 8, 8, 8, 8, 8, 8];\n\t\tlet curStage = 0;\n\t\tconst objCurStage = arrStages[curStage];\n\n\t\twhile (\n\t\t\tcurStage < arrStages.length &&\n\t\t\tarrStages[curStage].begin <=\n\t\t\t\tMutable.lines + (Game.params.digOffset || 0)\n\t\t) {\n\t\t\tcurStage++;\n\t\t}\n\t\tcurStage--;\n\t\t// console.log(objCurStage.delay - fromLastRise)\n\t\t// rise display\n\t\tif (\n\t\t\tfromLastRise >= objCurStage.delay ||\n\t\t\t(fromLastHD >= 20 && fromLastRise >= 15)\n\t\t) {\n\t\t\t//IJLOSTZ\n\t\t\tconst arrRainbow = [\n\t\t\t\t2, -1, 1, 5, 4, 3, 7, 6, -1, 8, 8, 8, 8, 6, 6, 2, 1, 5, 8, -1,\n\t\t\t\t7, 7, -1, 8, 8,\n\t\t\t];\n\t\t\tconst flagAll = ~~(objCurStage.begin / 50) % 2;\n\t\t\tlet idxRainbow = ~~(objCurStage.begin / 100);\n\t\t\tif (idxRainbow >= arrRainbow.length) {\n\t\t\t\tidxRainbow = arrRainbow.length - 1;\n\t\t\t}\n\t\t\tconst colorUsed = arrRainbow[idxRainbow];\n\t\t\tfor (\n\t\t\t\tlet x = 0;\n\t\t\t\tx < stack.width;\n\t\t\t\tx += flagAll === 1 ? 1 : stack.width - 1\n\t\t\t) {\n\t\t\t\tif (colorUsed === -1) {\n\t\t\t\t\tarrRow[x] = ~~(rng.next() * 8 + 1);\n\t\t\t\t} else {\n\t\t\t\t\tarrRow[x] = colorUsed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tobjCurStage.gen(arrRow, stack);\n\t\t\tstack.rowRise(arrRow, piece);\n\t\t\tframeLastRise = Mutable.frame;\n\t\t\tsound.playSFX(\"garbage\");\n\t\t\tlet topOut = false;\n\t\t\tfor (const test in stack.grid) {\n\t\t\t\tif (stack.grid[test][0] != undefined) {\n\t\t\t\t\ttopOut = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (topOut) {\n\t\t\t\tpiece.dead = true;\n\t\t\t\tGame.state = GameState.BlockOut;\n\t\t\t\t$setText(Elements.msg, \"TOP OUT!\");\n\t\t\t\tmenu(3);\n\t\t\t\tGame.types[Game.type].die();\n\t\t\t\tsound.playSFX(\"gameover\");\n\t\t\t\tsound.playvox(\"lose\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { SectionMiddle } from \"./center/SectionMiddle\";\nimport { SectionLeft } from \"./left/SectionLeft\";\nimport { SectionRight } from \"./right/SectionRight\";\n\nexport default function MainComponent() {\n\treturn (\n\t\t<>\n\t\t{/* TODO: Flex layout */}\n\t\t\t<SectionLeft />\n\n\t\t\t<SectionMiddle />\n\n\t\t\t<SectionRight />\n\t\t</>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\nimport { AudioMenu } from \"./AudioMenu\";\nimport { ControlsMenu } from \"./ControlsMenu\";\nimport { DigMenu } from \"./DigMenu\";\nimport { FailedMenu } from \"./FailedMenu\";\nimport { GradesMenu } from \"./GradesMenu\";\nimport { GraphicsMenu } from \"./GraphicsMenu\";\nimport { MainMenu } from \"./MainMenu\";\nimport { MarathonMenu } from \"./MarathonMenu\";\nimport { MasterMenu } from \"./MasterMenu\";\nimport { PauseMenu } from \"./PauseMenu\";\nimport { RankingsMenu } from \"./RankingsMenu\";\nimport { ReplayMenu } from \"./ReplayMenu\";\nimport { RetroMenu } from \"./RetroMenu\";\nimport { SettingsMenu } from \"./SettingsMenu\";\nimport { SprintMenu } from \"./SprintMenu\";\nimport { SurvialMenu } from \"./SurvialMenu\";\nimport { TuningMenu } from \"./TuningMenu\";\n\nexport function SectionMiddle() {\n\treturn (\n\t\t<div id=\"b\">\n\t\t\t<canvas id=\"bgStack\" />\n\t\t\t<canvas id=\"stack\">\n\t\t\t\tYou need an up-to-date web browser to play this game.\n\t\t\t</canvas>\n\t\t\t<canvas id=\"active\" />\n\n\t\t\t<div id=\"msgdiv\">\n\t\t\t\t<span id=\"msg\" />\n\t\t\t</div>\n\n\t\t\t<div id=\"cleardiv\">\n\t\t\t\t<span id=\"clear\" />\n\t\t\t</div>\n\n\t\t\t<div id=\"rendiv\">\n\t\t\t\t<span id=\"renmsg\" />\n\t\t\t</div>\n\t\t\t<div id=\"b2bdiv\">\n\t\t\t\t<span id=\"b2bmsg\" />\n\t\t\t</div>\n\n\t\t\t<MainMenu />\n\n\t\t\t<div class=\"menu\">\n\t\t\t\t<h2 id=\"settings-button\">Settings</h2>\n\n\t\t\t\t<div id=\"settings\" />\n\t\t\t\t<div id=\"settings-done\">\n\t\t\t\t\t<a class=\"btn\" onClick={() => menu(0)}>\n\t\t\t\t\t\tDone\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ControlsMenu />\n\t\t\t<FailedMenu />\n\t\t\t<PauseMenu />\n\t\t\t<RankingsMenu />\n\t\t\t<ReplayMenu />\n\n\t\t\t<DigMenu />\n\t\t\t<RetroMenu />\n\t\t\t<SprintMenu />\n\t\t\t<MarathonMenu />\n\t\t\t<MasterMenu />\n\t\t\t<SettingsMenu />\n\t\t\t<TuningMenu />\n\t\t\t<AudioMenu />\n\t\t\t<GraphicsMenu />\n\t\t\t<SurvialMenu />\n\t\t\t<GradesMenu />\n\t\t</div>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\nimport { settings } from \"../../settings\";\nimport { getStringKeys } from \"../../utils/enum\";\nimport { Soundbank, NextType, Voicebank } from \"../../utils/enums\";\nimport { t } from \"../../utils/lang\";\nimport { GroupListSetting } from \"../settings/GroupListSetting\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { GroupSliderSetting } from \"../settings/GroupSliderSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function AudioMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Audio</h1>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"Sound\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.Sound ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Sound = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSliderSetting\n\t\t\t\tsetting=\"Volume\"\n\t\t\t\tmin={0}\n\t\t\t\tmax={100}\n\t\t\t\tvalue={settings.Volume ?? 50}\n\t\t\t\tonInput={(value) => {\n\t\t\t\t\tsettings.Volume = value;\n\t\t\t\t}}\n\t\t\t\tgetName={(index) => `${index}%`}\n\t\t\t/>\n\n\t\t\t<GroupSliderSetting \n\t\t\t\tsetting=\"MusicVol\"\n\t\t\t\tmin={0}\n\t\t\t\tmax={100}\n\t\t\t\tvalue={settings.MusicVol ?? 50}\n\t\t\t\tonInput={(value) => {\n\t\t\t\t\tsettings.MusicVol = value;\n\t\t\t\t}}\n\t\t\t\tgetName={(index) => `${index}%`}\n\t\t\t/>\n\n\t\t\t<GroupListSetting\n\t\t\t\tsetting=\"Soundbank\"\n\t\t\t\tdata={getStringKeys(Soundbank)}\n\t\t\t\tselected={settings.Soundbank}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Soundbank = index;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"NextSound\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.NextSound ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.NextSound = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupListSetting\n\t\t\t\tsetting=\"NextType\"\n\t\t\t\tdata={getStringKeys(NextType)}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.NextType = index;\n\t\t\t\t}}\n\t\t\t\tselected={settings.NextType}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"Voice\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.Voice ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Voice = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupListSetting\n\t\t\t\tsetting=\"Voicebank\"\n\t\t\t\tdata={getStringKeys(Voicebank)}\n\t\t\t\tselected={settings.Voicebank}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Voicebank = index;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<br />\n\n\t\t\t<Btn click={() => menu(12)}>{t(\"menu-back\")}</Btn>\n\t\t</nav>\n\t);\n}\n", "import { t } from \"../../utils/lang\";\nimport { ButtonGroup as ButtonGroupList } from \"../utils/ButtonGroup\";\nimport { SettingMap } from \"../../settings\";\nimport { GeneralSettings } from \"../../utils/types\";\n\ninterface GroupListSettingProps {\n\tsetting: keyof SettingMap | keyof GeneralSettings;\n\tonClick: (index: number) => void;\n\tdata: string[];\n\tselected: number;\n}\n\nexport function GroupListSetting({\n\tsetting,\n\tonClick,\n\tdata,\n\tselected,\n}: GroupListSettingProps) {\n\treturn (\n\t\t<>\n\t\t\t<h4 class=\"option-header\">\n\t\t\t\t{t(`setting-${setting}-title`)}\n\t\t\t</h4>\n\t\t\t<p class=\"option-description\">\n\t\t\t\t{t(`setting-${setting}-desc`)}\n\t\t\t</p>\n\t\t\t<ButtonGroupList data={data} selected={selected} onClick={onClick} />\n\t\t</>\n\t);\n}\n", "import { useState } from \"preact/hooks\";\n\ninterface ButtonGroupProps {\n\tonClick: (index: number) => void;\n\tdata: string[];\n\tselected: number;\n}\n\nexport function ButtonGroup({ onClick, data, selected }: ButtonGroupProps) {\n\tconst [selectedIndex, setSelectedIndex] = useState(selected);\n\n\treturn (\n\t\t<div class=\"btn-group\">\n\t\t\t{data.map((item, index) => (\n\t\t\t\t<button\n\t\t\t\t\tkey={index}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonClick(index);\n\t\t\t\t\t\tsetSelectedIndex(index);\n\t\t\t\t\t}}\n\t\t\t\t\t{...(selectedIndex == index ? { class: \"active\" } : {})}\n\t\t\t\t>\n\t\t\t\t\t{item}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n", "import { options } from 'preact';\r\n\r\n/** @type {number} */\r\nlet currentIndex;\r\n\r\n/** @type {import('./internal').Component} */\r\nlet currentComponent;\r\n\r\n/** @type {number} */\r\nlet currentHook = 0;\r\n\r\n/** @type {Array<import('./internal').Component>} */\r\nlet afterPaintEffects = [];\r\n\r\nlet oldBeforeDiff = options._diff;\r\nlet oldBeforeRender = options._render;\r\nlet oldAfterDiff = options.diffed;\r\nlet oldCommit = options._commit;\r\nlet oldBeforeUnmount = options.unmount;\r\n\r\nconst RAF_TIMEOUT = 100;\r\nlet prevRaf;\r\n\r\noptions._diff = vnode => {\r\n\tcurrentComponent = null;\r\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\r\n};\r\n\r\noptions._render = vnode => {\r\n\tif (oldBeforeRender) oldBeforeRender(vnode);\r\n\r\n\tcurrentComponent = vnode._component;\r\n\tcurrentIndex = 0;\r\n\r\n\tconst hooks = currentComponent.__hooks;\r\n\tif (hooks) {\r\n\t\thooks._pendingEffects.forEach(invokeCleanup);\r\n\t\thooks._pendingEffects.forEach(invokeEffect);\r\n\t\thooks._pendingEffects = [];\r\n\t}\r\n};\r\n\r\noptions.diffed = vnode => {\r\n\tif (oldAfterDiff) oldAfterDiff(vnode);\r\n\r\n\tconst c = vnode._component;\r\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\r\n\t\tafterPaint(afterPaintEffects.push(c));\r\n\t}\r\n\tcurrentComponent = null;\r\n};\r\n\r\noptions._commit = (vnode, commitQueue) => {\r\n\tcommitQueue.some(component => {\r\n\t\ttry {\r\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\r\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\r\n\t\t\t\tcb._value ? invokeEffect(cb) : true\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\tcommitQueue.some(c => {\r\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\r\n\t\t\t});\r\n\t\t\tcommitQueue = [];\r\n\t\t\toptions._catchError(e, component._vnode);\r\n\t\t}\r\n\t});\r\n\r\n\tif (oldCommit) oldCommit(vnode, commitQueue);\r\n};\r\n\r\noptions.unmount = vnode => {\r\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\r\n\r\n\tconst c = vnode._component;\r\n\tif (c && c.__hooks) {\r\n\t\tlet hasErrored;\r\n\t\tc.__hooks._list.forEach(s => {\r\n\t\t\ttry {\r\n\t\t\t\tinvokeCleanup(s);\r\n\t\t\t} catch (e) {\r\n\t\t\t\thasErrored = e;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\r\n\t}\r\n};\r\n\r\n/**\r\n * Get a hook's state from the currentComponent\r\n * @param {number} index The index of the hook to get\r\n * @param {number} type The index of the hook to get\r\n * @returns {any}\r\n */\r\nfunction getHookState(index, type) {\r\n\tif (options._hook) {\r\n\t\toptions._hook(currentComponent, index, currentHook || type);\r\n\t}\r\n\tcurrentHook = 0;\r\n\r\n\t// Largely inspired by:\r\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\r\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\r\n\t// Other implementations to look at:\r\n\t// * https://codesandbox.io/s/mnox05qp8\r\n\tconst hooks =\r\n\t\tcurrentComponent.__hooks ||\r\n\t\t(currentComponent.__hooks = {\r\n\t\t\t_list: [],\r\n\t\t\t_pendingEffects: []\r\n\t\t});\r\n\r\n\tif (index >= hooks._list.length) {\r\n\t\thooks._list.push({});\r\n\t}\r\n\treturn hooks._list[index];\r\n}\r\n\r\n/**\r\n * @param {import('./index').StateUpdater<any>} [initialState]\r\n */\r\nexport function useState(initialState) {\r\n\tcurrentHook = 1;\r\n\treturn useReducer(invokeOrReturn, initialState);\r\n}\r\n\r\n/**\r\n * @param {import('./index').Reducer<any, any>} reducer\r\n * @param {import('./index').StateUpdater<any>} initialState\r\n * @param {(initialState: any) => void} [init]\r\n * @returns {[ any, (state: any) => void ]}\r\n */\r\nexport function useReducer(reducer, initialState, init) {\r\n\t/** @type {import('./internal').ReducerHookState} */\r\n\tconst hookState = getHookState(currentIndex++, 2);\r\n\thookState._reducer = reducer;\r\n\tif (!hookState._component) {\r\n\t\thookState._value = [\r\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\r\n\r\n\t\t\taction => {\r\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\r\n\t\t\t\tif (hookState._value[0] !== nextValue) {\r\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\r\n\t\t\t\t\thookState._component.setState({});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\thookState._component = currentComponent;\r\n\t}\r\n\r\n\treturn hookState._value;\r\n}\r\n\r\n/**\r\n * @param {import('./internal').Effect} callback\r\n * @param {any[]} args\r\n */\r\nexport function useEffect(callback, args) {\r\n\t/** @type {import('./internal').EffectHookState} */\r\n\tconst state = getHookState(currentIndex++, 3);\r\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\r\n\t\tstate._value = callback;\r\n\t\tstate._args = args;\r\n\r\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {import('./internal').Effect} callback\r\n * @param {any[]} args\r\n */\r\nexport function useLayoutEffect(callback, args) {\r\n\t/** @type {import('./internal').EffectHookState} */\r\n\tconst state = getHookState(currentIndex++, 4);\r\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\r\n\t\tstate._value = callback;\r\n\t\tstate._args = args;\r\n\r\n\t\tcurrentComponent._renderCallbacks.push(state);\r\n\t}\r\n}\r\n\r\nexport function useRef(initialValue) {\r\n\tcurrentHook = 5;\r\n\treturn useMemo(() => ({ current: initialValue }), []);\r\n}\r\n\r\n/**\r\n * @param {object} ref\r\n * @param {() => object} createHandle\r\n * @param {any[]} args\r\n */\r\nexport function useImperativeHandle(ref, createHandle, args) {\r\n\tcurrentHook = 6;\r\n\tuseLayoutEffect(\r\n\t\t() => {\r\n\t\t\tif (typeof ref == 'function') ref(createHandle());\r\n\t\t\telse if (ref) ref.current = createHandle();\r\n\t\t},\r\n\t\targs == null ? args : args.concat(ref)\r\n\t);\r\n}\r\n\r\n/**\r\n * @param {() => any} factory\r\n * @param {any[]} args\r\n */\r\nexport function useMemo(factory, args) {\r\n\t/** @type {import('./internal').MemoHookState} */\r\n\tconst state = getHookState(currentIndex++, 7);\r\n\tif (argsChanged(state._args, args)) {\r\n\t\tstate._value = factory();\r\n\t\tstate._args = args;\r\n\t\tstate._factory = factory;\r\n\t}\r\n\r\n\treturn state._value;\r\n}\r\n\r\n/**\r\n * @param {() => void} callback\r\n * @param {any[]} args\r\n */\r\nexport function useCallback(callback, args) {\r\n\tcurrentHook = 8;\r\n\treturn useMemo(() => callback, args);\r\n}\r\n\r\n/**\r\n * @param {import('./internal').PreactContext} context\r\n */\r\nexport function useContext(context) {\r\n\tconst provider = currentComponent.context[context._id];\r\n\t// We could skip this call here, but than we'd not call\r\n\t// `options._hook`. We need to do that in order to make\r\n\t// the devtools aware of this hook.\r\n\t/** @type {import('./internal').ContextHookState} */\r\n\tconst state = getHookState(currentIndex++, 9);\r\n\t// The devtools needs access to the context object to\r\n\t// be able to pull of the default value when no provider\r\n\t// is present in the tree.\r\n\tstate._context = context;\r\n\tif (!provider) return context._defaultValue;\r\n\t// This is probably not safe to convert to \"!\"\r\n\tif (state._value == null) {\r\n\t\tstate._value = true;\r\n\t\tprovider.sub(currentComponent);\r\n\t}\r\n\treturn provider.props.value;\r\n}\r\n\r\n/**\r\n * Display a custom label for a custom hook for the devtools panel\r\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\r\n */\r\nexport function useDebugValue(value, formatter) {\r\n\tif (options.useDebugValue) {\r\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {(error: any) => void} cb\r\n */\r\nexport function useErrorBoundary(cb) {\r\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\r\n\tconst state = getHookState(currentIndex++, 10);\r\n\tconst errState = useState();\r\n\tstate._value = cb;\r\n\tif (!currentComponent.componentDidCatch) {\r\n\t\tcurrentComponent.componentDidCatch = err => {\r\n\t\t\tif (state._value) state._value(err);\r\n\t\t\terrState[1](err);\r\n\t\t};\r\n\t}\r\n\treturn [\r\n\t\terrState[0],\r\n\t\t() => {\r\n\t\t\terrState[1](undefined);\r\n\t\t}\r\n\t];\r\n}\r\n\r\n/**\r\n * After paint effects consumer.\r\n */\r\nfunction flushAfterPaintEffects() {\r\n\tlet component;\r\n\t// sort the queue by depth (outermost to innermost)\r\n\tafterPaintEffects.sort((a, b) => a._vnode._depth - b._vnode._depth);\r\n\twhile (component = afterPaintEffects.pop()) {\r\n\t\tif (!component._parentDom) continue;\r\n\t\ttry {\r\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\r\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\r\n\t\t\tcomponent.__hooks._pendingEffects = [];\r\n\t\t} catch (e) {\r\n\t\t\tcomponent.__hooks._pendingEffects = [];\r\n\t\t\toptions._catchError(e, component._vnode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\r\n\r\n/**\r\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\r\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\r\n * the next browser frame.\r\n *\r\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\r\n * even if RAF doesn't fire (for example if the browser tab is not visible)\r\n *\r\n * @param {() => void} callback\r\n */\r\nfunction afterNextFrame(callback) {\r\n\tconst done = () => {\r\n\t\tclearTimeout(timeout);\r\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\r\n\t\tsetTimeout(callback);\r\n\t};\r\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\r\n\r\n\tlet raf;\r\n\tif (HAS_RAF) {\r\n\t\traf = requestAnimationFrame(done);\r\n\t}\r\n}\r\n\r\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\r\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\r\n// Perhaps this is not such a big deal.\r\n/**\r\n * Schedule afterPaintEffects flush after the browser paints\r\n * @param {number} newQueueLength\r\n */\r\nfunction afterPaint(newQueueLength) {\r\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\r\n\t\tprevRaf = options.requestAnimationFrame;\r\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\r\n\t}\r\n}\r\n\r\n/**\r\n * @param {import('./internal').EffectHookState} hook\r\n */\r\nfunction invokeCleanup(hook) {\r\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\r\n\t// and move the currentComponent away.\r\n\tconst comp = currentComponent;\r\n\tlet cleanup = hook._cleanup;\r\n\tif (typeof cleanup == 'function') {\r\n\t\thook._cleanup = undefined;\r\n\t\tcleanup();\r\n\t}\r\n\tcurrentComponent = comp;\r\n}\r\n\r\n/**\r\n * Invoke a Hook's effect\r\n * @param {import('./internal').EffectHookState} hook\r\n */\r\nfunction invokeEffect(hook) {\r\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\r\n\t// and move the currentComponent away.\r\n\tconst comp = currentComponent;\r\n\thook._cleanup = hook._value();\r\n\tcurrentComponent = comp;\r\n}\r\n\r\n/**\r\n * @param {any[]} oldArgs\r\n * @param {any[]} newArgs\r\n */\r\nfunction argsChanged(oldArgs, newArgs) {\r\n\treturn (\r\n\t\t!oldArgs ||\r\n\t\toldArgs.length !== newArgs.length ||\r\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\r\n\t);\r\n}\r\n\r\nfunction invokeOrReturn(arg, f) {\r\n\treturn typeof f == 'function' ? f(arg) : f;\r\n}\r\n", "import { t } from \"../../utils/lang\";\nimport { ButtonGroup } from \"../utils/ButtonGroup\";\nimport { SettingMap } from \"../../settings\";\nimport { GeneralSettings } from \"../../utils/types\";\n\ninterface GroupSettingProps {\n\tsetting: keyof SettingMap | keyof GeneralSettings;\n\tonClick: (index: number) => void;\n\tdata: string[];\n\tselected: number;\n}\n\nexport function GroupSetting({\n\tsetting,\n\tonClick,\n\tdata,\n\tselected,\n}: GroupSettingProps) {\n\treturn (\n\t\t<>\n\t\t\t<h4 class=\"option-header\">\n\t\t\t\t{t(`setting-${setting}-title`)}\n\t\t\t</h4>\n\t\t\t<p class=\"option-description\">\n\t\t\t\t{t(`setting-${setting}-desc`)}\n\t\t\t</p>\n\t\t\t<ButtonGroup data={data} selected={selected} onClick={onClick} />\n\t\t</>\n\t);\n}\n", "import { useState } from \"preact/hooks\";\nimport { SettingMap } from \"../../settings\";\nimport { t } from \"../../utils/lang\";\nimport { GeneralSettings } from \"../../utils/types\";\n\nexport function GroupSliderSetting({\n\tsetting,\n\tonInput,\n\tgetName = (value) => value.toString(),\n\tvalue: initValue,\n\tmin,\n\tmax,\n\tstep = 1,\n}: GroupSliderSettingProps) {\n\tconst [value, setValue] = useState(initValue);\n\n\treturn (\n\t\t<>\n\t\t\t<h4 class=\"option-header\">{t(`setting-${setting}-title`)}</h4>\n\t\t\t<div class=\"slidecontainer\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin={min}\n\t\t\t\t\tmax={max}\n\t\t\t\t\tstep={step}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tclass=\"slider\"\n\t\t\t\t\tonInput={(e) => {\n\t\t\t\t\t\tconst val = parseInt(e.currentTarget.value);\n\t\t\t\t\t\tsetValue(val);\n\t\t\t\t\t\tonInput(val);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<p class=\"slidervalue\">{getName(value)}</p>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\ninterface GroupSliderSettingProps {\n\tsetting: keyof SettingMap | keyof GeneralSettings;\n\tonInput: (index: number) => void;\n\tvalue: number;\n\tgetName?: (index: number) => string;\n\tmin: number;\n\tmax: number;\n\tstep?: number;\n}\n", "export function Btn({ click, children, class: clazz = \"\" }) {\n\treturn (\n\t\t<a class={\"btn \" + clazz} onClick={click}>\n\t\t\t{children}\n\t\t</a>\n\t);\n}\n", "import { useEffect, useRef, useState } from \"preact/hooks\";\nimport { menu } from \"../../display/menu\";\nimport { key } from \"../../logic/view\";\nimport { binds, defaultBinds, setBinds } from \"../../utils/data\";\nimport { t } from \"../../utils/lang\";\nimport { $, $setText } from \"../../utils/utils\";\nimport { Btn } from \"../utils/Btn\";\nimport { ButtonGroupList } from \"../utils/ButtonGroupList\";\nimport { Icon } from \"../utils/Icon\";\n\n/**\n * Controls Menu\n */\nlet newKey: number;\nlet currCell;\nlet tempKey: number;\n\nconst bobBinds = {\n\tpause: 27,\n\tmoveLeft: 37,\n\tmoveRight: 39,\n\tmoveLeft3: 0,\n\tmoveRight3: 0,\n\tmoveDown: 40,\n\thardDrop: 38,\n\tholdPiece: 32,\n\trotRight: 88,\n\trotLeft: 90,\n\trot180: 67,\n\tretry: 82,\n};\n\ndocument.addEventListener(\n\t\"keyup\",\n\t(e) => {\n\t\t// if click outside of cell or press esc clear currCell\n\t\t// reset binds button.\n\t\tif (currCell) {\n\t\t\tnewKey = e.keyCode;\n\t\t\tif (newKey === 8) {\n\t\t\t\tnewKey = undefined;\n\t\t\t}\n\t\t\t// Checks if key already in use, and unbinds it.\n\t\t\tif (newKey) {\n\t\t\t\tfor (const i in binds) {\n\t\t\t\t\tif (newKey === binds[i]) {\n\t\t\t\t\t\tbinds[i] = undefined;\n\t\t\t\t\t\t$setText($(i), key.undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Binds the key and saves the data.\n\t\t\tbinds[currCell.id] = newKey;\n\t\t\t$setText(currCell, key[newKey] || newKey);\n\t\t\tlocalStorage.setItem(\"binds\", JSON.stringify(binds));\n\t\t\tcurrCell = undefined;\n\t\t}\n\t},\n\tfalse\n);\n\nconst buttons = [];\nexport const updatedBinds = () => {\n\tfor (const cb of buttons) {\n\t\tcb();\n\t}\n}\n\nfunction ControlButton({ default: def, icon, text, id }) {\n\tconst keycode = binds[id];\n\tconst keyText = key[keycode] || keycode;\n\n\tconst [txt, setTxt] = useState(keyText || def);\n\tconst ref = useRef(null);\n\n\tuseEffect(() => {\n\t\tconst cb = () => {\n\t\t\tconst kc = binds[id];\n\t\t\tsetTxt(key[kc] || kc)\n\t\t}\n\t\tbuttons.push(cb)\n\t\treturn () => {\n\t\t\tbuttons.splice(buttons.indexOf(cb), 1)\n\t\t}\n\t})\n\n\treturn (\n\t\t<tr>\n\t\t\t<th>\n\t\t\t\t{text} <Icon id={icon} />\n\t\t\t</th>\n\t\t\t<td\n\t\t\t\tid={id}\n\t\t\t\tref={ref}\n\t\t\t\tonClick={() => {\n\t\t\t\t\t// First check if we're already waiting for an input.\n\t\t\t\t\tif (currCell) {\n\t\t\t\t\t\t// TODO DRY\n\t\t\t\t\t\t// Make this into a function and call it when we press Esc.\n\t\t\t\t\t\tbinds[currCell.id] = tempKey;\n\t\t\t\t\t\t$setText(currCell, key[tempKey] || tempKey);\n\t\t\t\t\t}\n\t\t\t\t\ttempKey = binds[id];\n\t\t\t\t\tsetTxt(\"Press key\");\n\t\t\t\t\tcurrCell = ref.current;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{txt}\n\t\t\t</td>\n\t\t</tr>\n\t);\n}\n\nexport function ControlsMenu() {\n\treturn (\n\t\t<div class=\"menu\">\n\t\t\t<h2 class=\"no-margin\">Controls</h2>\n\n\t\t\t<p class=\"no-margin\">\n\t\t\t\tClick on the item you want to change, then press any key.\n\t\t\t</p>\n\n\t\t\t<ButtonGroupList\n\t\t\t\tdata={[\"Custom\", \"Preset 1\", \"Preset 2\"]}\n\t\t\t\tselected={0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tsetBinds(defaultBinds);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tsetBinds(bobBinds);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tupdatedBinds();\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<table id=\"controls\" style=\"margin-top: 0px\">\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"\u2190\"\n\t\t\t\t\ttext=\"Move\"\n\t\t\t\t\ticon=\"left\"\n\t\t\t\t\tid=\"moveLeft\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"\u2192\"\n\t\t\t\t\ttext=\"Move\"\n\t\t\t\t\ticon=\"right\"\n\t\t\t\t\tid=\"moveRight\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"---\"\n\t\t\t\t\ttext=\"Triple\"\n\t\t\t\t\ticon=\"left\"\n\t\t\t\t\tid=\"moveLeft3\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"---\"\n\t\t\t\t\ttext=\"Triple\"\n\t\t\t\t\ticon=\"right\"\n\t\t\t\t\tid=\"moveRight3\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"\u2193\"\n\t\t\t\t\ttext=\"Move\"\n\t\t\t\t\ticon=\"soft-drop\"\n\t\t\t\t\tid=\"moveDown\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"Space\"\n\t\t\t\t\ttext=\"Drop\"\n\t\t\t\t\ticon=\"hard-drop\"\n\t\t\t\t\tid=\"hardDrop\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"C\"\n\t\t\t\t\ttext=\"Hold\"\n\t\t\t\t\ticon=\"hold\"\n\t\t\t\t\tid=\"holdPiece\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"X\"\n\t\t\t\t\ttext=\"Spin\"\n\t\t\t\t\ticon=\"rot-right\"\n\t\t\t\t\tid=\"rotRight\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"Z\"\n\t\t\t\t\ttext=\"Spin\"\n\t\t\t\t\ticon=\"rot-left\"\n\t\t\t\t\tid=\"rotLeft\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"Shift\"\n\t\t\t\t\ttext=\"Spin\"\n\t\t\t\t\ticon=\"rot-180\"\n\t\t\t\t\tid=\"rot180\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"R\"\n\t\t\t\t\ttext=\"Retry\"\n\t\t\t\t\ticon=\"retry\"\n\t\t\t\t\tid=\"retry\"\n\t\t\t\t/>\n\t\t\t\t<ControlButton\n\t\t\t\t\tdefault=\"Esc\"\n\t\t\t\t\ttext=\"Pause\"\n\t\t\t\t\ticon=\"pause\"\n\t\t\t\t\tid=\"pause\"\n\t\t\t\t/>\n\t\t\t</table>\n\n\t\t\t<Btn click={() => menu(0)} class=\"btn-bottom\">\n\t\t\t\t{t(\"menu-done\")}\n\t\t\t</Btn>\n\t\t</div>\n\t);\n}\n", "import { useState } from \"preact/hooks\";\n\ninterface ButtonGroupListProps {\n\tonClick: (index: number) => void;\n\tdata: string[];\n\tselected: number;\n}\n\nexport function ButtonGroupList({ onClick, data, selected }: ButtonGroupListProps) {\n\tconst [selectedIndex, setSelectedIndex] = useState(selected);\n\n\treturn (\n\t\t<div class=\"btn-group\">\n\t\t\t{data.map((item, index) => (\n\t\t\t\t<button\n\t\t\t\t\tkey={index}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonClick(index);\n\t\t\t\t\t\tsetSelectedIndex(index);\n\t\t\t\t\t}}\n\t\t\t\t\t{...(selectedIndex == index ? { class: \"active\" } : {})}\n\t\t\t\t>\n\t\t\t\t\t{item}\n\t\t\t\t</button>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n", "const ids = {\n\t\"rising-arrow\": <>&#xE8E5;</>,\n\twrench: <>&#xE869;</>,\n\tdpad: <>&#xE021;</>,\n\treplay: <>&#xE04A;</>,\n\tleft: <>&#xE5C4;</>,\n\tright: <>&#xE5C8;</>,\n\t\"soft-drop\": <>&#xE906;</>,\n\t\"hard-drop\": <>&#xE2C4;</>,\n\thold: <>&#xE8D4;</>,\n\t\"rot-right\": <>&#xE15A;</>,\n\t\"rot-left\": <>&#xE166;</>,\n\t\"rot-180\": <>&#xE5D5;</>,\n\tretry: <>&#xE040;</>,\n\tpause: <>&#xE034;</>,\n} as const;\n\nexport function Icon({ id }: { id: keyof typeof ids }) {\n\treturn <i class=\"material-icons\">{ids[id]}</i>;\n}\n", "import { changeGameSetting, menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\nimport { t } from \"../../utils/lang\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function DigMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Dig</h1>\n\t\t\t<p class=\"no-margin\">\n\t\t\t\tClear the bottom as line as soon as possible\n\t\t\t</p>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"DigCheckered\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={Game.settings.dig.checker.val ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"dig\", \"checker\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"DigZen\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={Game.settings.dig.zen.val ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"dig\", \"zen\", index);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<br />\n\n\t\t\t<Btn click={() => Game.init(4)} class=\"btn-inline width-50\">\n\t\t\t\t{t(\"menu-start\")}\n\t\t\t</Btn>\n\t\t\t<Btn click={() => menu(undefined, -1)} class=\"btn-inline width25-7\">\n\t\t\t\t{t(\"menu-back\")}\n\t\t\t</Btn>\n\t\t</nav>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\nimport { showreplaydata, curreplaydata } from \"../../leaderboard/replays\";\nimport { t } from \"../../utils/lang\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function FailedMenu() {\n\treturn (\n\t\t<nav id=\"go\" class=\"menu\">\n\t\t\t<div class=\"btn-container btn-container-bottom\">\n\t\t\t\t<Btn click={() => Game.init(Game.type, Game.params)}>\n\t\t\t\t\t{t(\"menu-retry\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn\n\t\t\t\t\tclick={() => Game.init(\"replay\")}\n\t\t\t\t\tclass=\"btn-inline width-50\"\n\t\t\t\t>\n\t\t\t\t\t{t(\"menu-replay\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn\n\t\t\t\t\tclick={() => showreplaydata(curreplaydata())}\n\t\t\t\t\tclass=\"btn-inline width25-7\"\n\t\t\t\t>\n\t\t\t\t\t<i class=\"material-icons\">&#xE161;</i>\n\t\t\t\t</Btn>\n\t\t\t\t{/*\n\t\t\t\t<a\n\t\t\t\t\tclass=\"btn highlight\"\n\t\t\t\t\tonclick=\"menu(5,1);this.classList.remove('highlight')\"\n\t\t\t\t>\n\t\t\t\t\tRankings\n\t\t\t\t</a>\n\t\t\t\tCommented out rankings because they don't work\n\t\t\t\t*/}\n\t\t\t\t<Btn click={() => Game.init(1)} class=\"btn-inline width-50\">\n\t\t\t\t\t{t(\"menu-start\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(0)}>{t(\"menu-back\")}</Btn>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n", "import { changeGameSetting, menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\nimport { t } from \"../../utils/lang\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function GradesMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Grades</h1>\n\t\t\t<p class=\"no-margin\">\n\t\t\t\t<span style=\"color: red\">UNFINISHED</span>\n\t\t\t\t<br />\n\t\t\t\tPlay as fast as possible to earn the highest grade!\n\t\t\t</p>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"GradesGameRule\"\n\t\t\t\tdata={[\"Classic\", \"World\"]}\n\t\t\t\tselected={Game.settings.grades.rule.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"grades\", \"rule\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<br />\n\n\t\t\t<Btn click={() => Game.init(9)} class=\"btn-inline width-50\">\n\t\t\t\t{t(\"menu-start\")}\n\t\t\t</Btn>\n\t\t\t<Btn click={() => menu(undefined, -1)} class=\"btn-inline width25-7\">\n\t\t\t\t{t(\"menu-back\")}\n\t\t\t</Btn>\n\t\t</nav>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\nimport { makeSprite } from \"../../logic/view\";\nimport { settings } from \"../../settings\";\nimport { getStringKeys } from \"../../utils/enum\";\nimport { Size, Block, Outline, Ghost } from \"../../utils/enums\";\nimport { t } from \"../../utils/lang\";\nimport { GroupListSetting } from \"../settings/GroupListSetting\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { GroupSliderSetting } from \"../settings/GroupSliderSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function GraphicsMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Graphics</h1>\n\n\t\t\t<GroupListSetting\n\t\t\t\tsetting=\"Size\"\n\t\t\t\tdata={getStringKeys(Size)}\n\t\t\t\tselected={settings.Size}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Size = index;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSliderSetting\n\t\t\t\tsetting=\"Next\"\n\t\t\t\tmax={6}\n\t\t\t\tmin={0}\n\t\t\t\tstep={1}\n\t\t\t\tvalue={settings.Next}\n\t\t\t\tonInput={(value) => {\n\t\t\t\t\tsettings.Next = value;\n\t\t\t\t}}\n\t\t\t\tgetName={(index) =>\n\t\t\t\t\tindex != 0 ? `${index} PIECES` : \"DISABLED\"\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"NextSide\"\n\t\t\t\tdata={[\"Left\", \"Right\"]}\n\t\t\t\tselected={settings.NextSide ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.NextSide = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupListSetting\n\t\t\t\tsetting=\"Block\"\n\t\t\t\tdata={getStringKeys(Block)}\n\t\t\t\tselected={settings.Block}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Block = index;\n\t\t\t\t\tmakeSprite();\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<canvas id=\"sprite\" />\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"Monochrome\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.Monochrome ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Monochrome = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"Outline\"\n\t\t\t\tdata={getStringKeys(Outline)}\n\t\t\t\tselected={settings.Outline}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Outline = index;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"Ghost\"\n\t\t\t\tdata={getStringKeys(Ghost)}\n\t\t\t\tselected={settings.Ghost}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Ghost = index;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"Grid\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.Grid ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Grid = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"Messages\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.Messages ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.Messages = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"MatrixSway\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.MatrixSway ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.MatrixSway = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"InitialVis\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.InitialVis ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.InitialVis = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<br />\n\n\t\t\t<Btn click={() => menu(12)}>{t(\"menu-back\")}</Btn>\n\t\t</nav>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\nimport { version } from \"../../utils/data\";\nimport { t } from \"../../utils/lang\";\nimport { Btn } from \"../utils/Btn\";\nimport { Icon } from \"../utils/Icon\";\n\nexport function MainMenu() {\n\treturn (\n\t\t<nav class=\"menu on\">\n\t\t\t{/*\n\t\t\t<img\n\t\t\t\tclass=\"no-margin\"\n\t\t\t\twidth=\"72%\"\n\t\t\t\tsrc=\"tetrjslogoenhanced.svg\"\n\t\t\t/> \n\t\t\t*/}\n\t\t\t<h1 style=\"font-weight: 4; font-size: 2rem; margin: 0px\">\n\t\t\t\tPolyomino\n\t\t\t</h1>\n\t\t\t<p class=\"no-margin\">\n\t\t\t\t{version}\n\t\t\t\t{/*\n\t\t\t\t<a class=\"link\" href=\"changelog.html\">\n\t\t\t\t\t(view changelog)\n\t\t\t\t</a>\n\t\t\t\t*/}\n\t\t\t</p>\n\n\t\t\t<div class=\"btn-container no-margin\">\n\t\t\t\t<a\n\t\t\t\t\tclass=\"btn btn-inline\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tstyle=\"margin-bottom: 1.1em\"\n\t\t\t\t>\n\t\t\t\t\tDiscord\n\t\t\t\t</a>\n\n\t\t\t\t<Btn click={() => menu(9, 1)}>\n\t\t\t\t\t<Icon id=\"rising-arrow\" />\n\t\t\t\t\t{t(\"game-sprint\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(10, 1)}>\n\t\t\t\t\t<Icon id=\"rising-arrow\" />\n\t\t\t\t\t{t(\"game-marathon\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(11, 1)}>\n\t\t\t\t\t<Icon id=\"rising-arrow\" />\n\t\t\t\t\t{t(\"game-master\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(8, 1)}>\n\t\t\t\t\t<Icon id=\"rising-arrow\" />\n\t\t\t\t\t{t(\"game-retro\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(7, 1)}>\n\t\t\t\t\t<Icon id=\"rising-arrow\" />\n\t\t\t\t\t{t(\"game-dig\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(16, 1)}>\n\t\t\t\t\t<Icon id=\"rising-arrow\" />\n\t\t\t\t\t{t(\"game-survival\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(17, 1)} class=\"margin-bottom-1-1\">\n\t\t\t\t\t<Icon id=\"rising-arrow\" />\n\t\t\t\t\t{t(\"game-grades\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(2)}>\n\t\t\t\t\t<Icon id=\"dpad\" />\n\t\t\t\t\t{t(\"menu-controls\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(12)}>\n\t\t\t\t\t<Icon id=\"wrench\" />\n\t\t\t\t\t{t(\"menu-settings\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn click={() => menu(6, 1)}>\n\t\t\t\t\t<Icon id=\"replay\" />\n\t\t\t\t\t{t(\"menu-replay\")}\n\t\t\t\t</Btn>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n", "import { changeGameSetting, menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\nimport { t } from \"../../utils/lang\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function MarathonMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Marathon</h1>\n\t\t\t<p class=\"no-margin\">Standard game. Aim for a high score.</p>\n\t\t\t\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"MarathonGoal\"\n\t\t\t\tdata={[\"150\", \"200\", \"300\", \"Endless\"]}\n\t\t\t\tselected={Game.settings.marathon.limit.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"marathon\", \"limit\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"MarathonLevelCap\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={Game.settings.marathon.cap.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"marathon\", \"cap\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"MarathonEntryDelay\"\n\t\t\t\tdata={[\"None\", \"Short\", \"Long\"]}\n\t\t\t\tselected={Game.settings.marathon.delay.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"marathon\", \"delay\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"MarathonNoGravity\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={Game.settings.marathon.nograv.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"marathon\", \"nograv\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"MarathonInvisible\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={Game.settings.marathon.invisible.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"marathon\", \"invisible\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<br />\n\n\t\t\t<Btn click={() => Game.init(1)} class=\"btn-inline width-50\">\n\t\t\t\t{t(\"menu-start\")}\n\t\t\t</Btn>\n\t\t\t<Btn click={() => menu(undefined, -1)} class=\"btn-inline width25-7\">\n\t\t\t\t{t(\"menu-back\")}\n\t\t\t</Btn>\n\t\t</nav>\n\t);\n}\n", "import { changeGameSetting, menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\nimport { t } from \"../../utils/lang\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function MasterMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Master</h1>\n\t\t\t<p class=\"no-margin\">Super-fast game. Aim for 300 lines.</p>\n\n\t\t\t<GroupSetting \n\t\t\t\tsetting=\"MasterLock\"\n\t\t\t\tdata={[\"Forgiving\", \"Limited\", \"Strict\"]}\n\t\t\t\tselected={Game.settings.master.lock.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting('master', 'lock', index)\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<br />\n\n\t\t\t<Btn click={() => Game.init(6)} class=\"btn-inline width-50\">\n\t\t\t\t{t(\"menu-start\")}\n\t\t\t</Btn>\n\t\t\t<Btn click={() => menu(undefined, -1)} class=\"btn-inline width25-7\">\n\t\t\t\t{t(\"menu-back\")}\n\t\t\t</Btn>\n\t\t</nav>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\n\nexport function PauseMenu() {\n\treturn (\n\t\t<nav id=\"pause\" class=\"menu\">\n\t\t\t<div class=\"btn-container btn-container-bottom\">\n\t\t\t\t<a class=\"btn\" onClick={() => Game.unpause()}>\n\t\t\t\t\tResume\n\t\t\t\t</a>\n\t\t\t\t<a class=\"btn\" onClick={() => Game.init(Game.type,Game.params)}>\n\t\t\t\t\tRestart\n\t\t\t\t</a>\n\t\t\t\t<a class=\"btn\" onClick={() => menu(0)}>\n\t\t\t\t\tMain Menu\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\n\nexport function RankingsMenu() {\n\treturn (\n\t\t<div id=\"leader\" class=\"menu\">\n\t\t\t<h2>Rankings</h2>\n\n\t\t\t<div id=\"leaderboard\" />\n\t\t\t<div style=\"clear: both\">\n\t\t\t\t<a class=\"btn\" onClick={() => menu(undefined,-1)}>\n\t\t\t\t\tBack\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\nimport { sound } from \"../../display/sound/sound\";\nimport { tryreplaydata } from \"../../leaderboard/replays\";\n\nexport function ReplayMenu() {\n\treturn (\n\t\t<nav id=\"replay\" class=\"menu\">\n\t\t\t<h2>Replay</h2>\n\n\t\t\t<p>Ctrl+C / Ctrl+V</p>\n\t\t\t<textarea id=\"replaydata\" spellcheck={false} />\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclass=\"btn\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\ttryreplaydata();\n\t\t\t\t\t\t\tsound.init();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWatch\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<a class=\"btn\" onClick={() => menu(undefined, -1)}>\n\t\t\t\t\t\tBack\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</nav>\n\t);\n}\n", "import { changeGameSetting, menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\n\nexport function RetroMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Retro</h1>\n\t\t\t<p class=\"no-margin\">Classic game with a variety of options.</p>\n\t\t\t<div class=\"no-margin btn-container\">\n\t\t\t\t<GroupSetting\n\t\t\t\t\tsetting=\"RetroGameType\"\n\t\t\t\t\tdata={[\"A-Type\", \"B-Type\"]}\n\t\t\t\t\tselected={Game.settings.retro.type.val}\n\t\t\t\t\tonClick={(index) => {\n\t\t\t\t\t\tchangeGameSetting(\"retro\", \"type\", index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{/*TODO: Change this into a jsx component */}\n\t\t\t\t<h4 class=\"option-header\">Starting Level</h4>\n\t\t\t\t<p class=\"option-description\">Choose a level to start</p>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"btn-group btn-ensquishened\"\n\t\t\t\t\tstyle=\"margin-left: 1em\"\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-0\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 0)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t00\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-1\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 1)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t01\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-2\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 2)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t02\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-3\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 3)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t03\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-4\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 4)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t04\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-5\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 5)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t05\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-6\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 6)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t06\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-7\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 7)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t07\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-8\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 8)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t08\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-9\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 9)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t09\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"btn-group btn-ensquishened\"\n\t\t\t\t\tstyle=\"margin-left: 1em\"\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-10\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 10)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t10\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-11\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 11)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t11\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-12\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 12)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t12\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-13\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 13)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t13\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-14\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 14)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t14\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-15\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 15)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t15\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-16\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 16)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t16\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-17\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 17)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t17\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-18\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 18)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t18\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tid=\"retro-level-19\"\n\t\t\t\t\t\tonclick=\"changeSetting('retro', 'level', 19)\"\n\t\t\t\t\t>\n\t\t\t\t\t\t19\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<GroupSetting\n\t\t\t\t\tsetting=\"RetroHardDrop\"\n\t\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\t\tselected={Game.settings.retro.drop.val}\n\t\t\t\t\tonClick={(index) => {\n\t\t\t\t\t\tchangeGameSetting(\"retro\", \"drop\", index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<GroupSetting\n\t\t\t\t\tsetting=\"RetroFlashing\"\n\t\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\t\tselected={Game.settings.retro.flash.val}\n\t\t\t\t\tonClick={(index) => {\n\t\t\t\t\t\tchangeGameSetting(\"retro\", \"flash\", index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<br />\n\n\t\t\t\t<a\n\t\t\t\t\tclass=\"btn btn-inline width-50\"\n\t\t\t\t\tonClick={() => Game.init(8, { proMode: false })}\n\t\t\t\t>\n\t\t\t\t\tStart\n\t\t\t\t</a>\n\t\t\t\t<a\n\t\t\t\t\tclass=\"btn btn-inline width25-7\"\n\t\t\t\t\tonClick={() => menu(undefined, -1)}\n\t\t\t\t>\n\t\t\t\t\tBack\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\n\nexport function SettingsMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Settings</h1>\n\t\t\t<a class=\"btn\" onClick={() => menu(13)}>\n\t\t\t\tTuning\n\t\t\t</a>\n\t\t\t<a class=\"btn\" onClick={() => menu(15)}>\n\t\t\t\tGraphics\n\t\t\t</a>\n\t\t\t<a class=\"btn\" onClick={() => menu(14)}>\n\t\t\t\tAudio\n\t\t\t</a>\n\t\t\t<a class=\"btn\" onClick={() => menu(0)}>\n\t\t\t\tBack\n\t\t\t</a>\n\t\t</nav>\n\t);\n}\n", "import { changeGameSetting, menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\nimport { t } from \"../../utils/lang\";\nimport { timeString } from \"../../utils/string\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function SprintMenu() {\n\tconst sprintPB = localStorage.getItem(\"sprint40pb\");\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Sprint</h1>\n\t\t\t<p class=\"no-margin\">\n\t\t\t\tClear the lines as fast as you can! <br />\n\t\t\t\tFastest time:{\" \"}\n\t\t\t\t<span id=\"sprint-pb\">\n\t\t\t\t\t{timeString(sprintPB ? parseFloat(sprintPB) : 0)}\n\t\t\t\t</span>\n\t\t\t</p>\n\n\t\t\t<div class=\"no-margin btn-container\">\n\t\t\t\t<GroupSetting\n\t\t\t\t\tsetting=\"SprintLimit\"\n\t\t\t\t\tdata={[\"40\", \"100\", \"200\"]}\n\t\t\t\t\tselected={Game.settings.sprint.limit.val}\n\t\t\t\t\tonClick={(index) => {\n\t\t\t\t\t\tchangeGameSetting(\"sprint\", \"limit\", index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<GroupSetting\n\t\t\t\t\tsetting=\"SprintPieceSet\"\n\t\t\t\t\tdata={[\"Standard\", \"No I\", \"I Only\"]}\n\t\t\t\t\tselected={Game.settings.sprint.piece.val}\n\t\t\t\t\tonClick={(index) => {\n\t\t\t\t\t\tchangeGameSetting(\"sprint\", \"piece\", index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<GroupSetting\n\t\t\t\t\tsetting=\"SprintBackfire\"\n\t\t\t\t\tdata={[\"Off\", \"Low\", \"Med\", \"High\"]}\n\t\t\t\t\tselected={Game.settings.sprint.backfire.val}\n\t\t\t\t\tonClick={(index) => {\n\t\t\t\t\t\tchangeGameSetting(\"sprint\", \"backfire\", index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<br />\n\n\t\t\t\t<Btn click={() => Game.init(0)} class=\"btn-inline width-50\">\n\t\t\t\t\t{t(\"menu-start\")}\n\t\t\t\t</Btn>\n\t\t\t\t<Btn\n\t\t\t\t\tclick={() => menu(undefined, -1)}\n\t\t\t\t\tclass=\"btn-inline width25-7\"\n\t\t\t\t>\n\t\t\t\t\t{t(\"menu-back\")}\n\t\t\t\t</Btn>\n\t\t\t</div>\n\t\t</nav>\n\t);\n}\n", "import { changeGameSetting, menu } from \"../../display/menu\";\nimport { Game } from \"../../game\";\nimport { t } from \"../../utils/lang\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function SurvialMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Survival</h1>\n\t\t\t<p class=\"no-margin\">\n\t\t\t\tClear the bottom as line as soon as possible\n\t\t\t</p>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"SurvivalZenMode\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={Game.settings.survival.zen.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"survival\", \"zen\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"SurvivalStartingLevel\"\n\t\t\t\tdata={[\"0\", \"500\", \"1000\", \"1500\", \"2000\"]}\n\t\t\t\tselected={Game.settings.survival.slevel.val}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tchangeGameSetting(\"survival\", \"slevel\", index);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<br />\n\n\t\t\t<Btn click={() => Game.init(3)} class=\"btn-inline width-50\">\n\t\t\t\t{t(\"menu-start\")}\n\t\t\t</Btn>\n\t\t\t<Btn click={() => menu(undefined, -1)} class=\"btn-inline width25-7\">\n\t\t\t\t{t(\"menu-back\")}\n\t\t\t</Btn>\n\t\t</nav>\n\t);\n}\n", "import { menu } from \"../../display/menu\";\nimport { settings } from \"../../settings\";\nimport { getStringKeys } from \"../../utils/enum\";\nimport { Gravity, SoftDrop, IRSMode, IHSMode, RotSys } from \"../../utils/enums\";\nimport { t } from \"../../utils/lang\";\nimport { GroupListSetting } from \"../settings/GroupListSetting\";\nimport { GroupSetting } from \"../settings/GroupSetting\";\nimport { GroupSliderSetting } from \"../settings/GroupSliderSetting\";\nimport { Btn } from \"../utils/Btn\";\n\nexport function TuningMenu() {\n\treturn (\n\t\t<nav class=\"menu\">\n\t\t\t<h1 class=\"boldish\">Tuning</h1>\n\n\t\t\t<GroupSliderSetting\n\t\t\t\tsetting=\"DAS\"\n\t\t\t\tmax={30}\n\t\t\t\tmin={0}\n\t\t\t\tstep={1}\n\t\t\t\tvalue={settings.DAS ?? 10}\n\t\t\t\tonInput={(value) => {\n\t\t\t\t\tsettings.DAS = value;\n\t\t\t\t}}\n\t\t\t\tgetName={(index) =>\n\t\t\t\t\t`${index} FRAMES; ${\n\t\t\t\t\t\tMath.round(((1000 / 60) * index + 0.00001) * 100) / 100\n\t\t\t\t\t} MS`\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<GroupSliderSetting\n\t\t\t\tsetting=\"ARR\"\n\t\t\t\tmax={10}\n\t\t\t\tmin={0}\n\t\t\t\tstep={1}\n\t\t\t\tvalue={settings.ARR ?? 2}\n\t\t\t\tonInput={(value) => {\n\t\t\t\t\tsettings.ARR = value;\n\t\t\t\t}}\n\t\t\t\tgetName={(index) =>\n\t\t\t\t\tindex != 0\n\t\t\t\t\t\t? `${index} FRAMES; ${\n\t\t\t\t\t\t\t\tMath.round((60 / index + 0.00001) * 100) / 100\n\t\t\t\t\t\t  } HZ`\n\t\t\t\t\t\t: \"INSTANT\"\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<GroupSliderSetting\n\t\t\t\tsetting=\"Gravity\"\n\t\t\t\tmax={9}\n\t\t\t\tmin={0}\n\t\t\t\tstep={1}\n\t\t\t\tvalue={settings.Gravity ?? 0}\n\t\t\t\tonInput={(value) => {\n\t\t\t\t\tsettings.Gravity = value;\n\t\t\t\t}}\n\t\t\t\tgetName={(index) => Gravity[index]}\n\t\t\t/>\n\n\t\t\t<GroupSliderSetting\n\t\t\t\tsetting=\"SoftDrop\"\n\t\t\t\tmax={7}\n\t\t\t\tmin={0}\n\t\t\t\tstep={1}\n\t\t\t\tvalue={settings.SoftDrop ?? 6}\n\t\t\t\tonInput={(value) => {\n\t\t\t\t\tsettings.SoftDrop = value;\n\t\t\t\t}}\n\t\t\t\tgetName={(index) => SoftDrop[index + 2]}\n\t\t\t/>\n\n\t\t\t<GroupSliderSetting\n\t\t\t\tsetting=\"LockDelay\"\n\t\t\t\tmax={100}\n\t\t\t\tmin={0}\n\t\t\t\tstep={0.1}\n\t\t\t\tvalue={settings.LockDelay ?? 30}\n\t\t\t\tonInput={(value) => {\n\t\t\t\t\tsettings.LockDelay = value;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupListSetting\n\t\t\t\tsetting=\"IRSMode\"\n\t\t\t\tdata={getStringKeys(IRSMode)}\n\t\t\t\tselected={settings.IRSMode}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.IRSMode = index;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupListSetting\n\t\t\t\tsetting=\"IHSMode\"\n\t\t\t\tdata={getStringKeys(IHSMode)}\n\t\t\t\tselected={settings.IHSMode}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.IHSMode = index;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupListSetting\n\t\t\t\tsetting=\"RotSys\"\n\t\t\t\tdata={getStringKeys(RotSys)}\n\t\t\t\tselected={settings.RotSys}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.set(\"RotSys\", index);\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<GroupSetting\n\t\t\t\tsetting=\"ResetPB\"\n\t\t\t\tdata={[\"Off\", \"On\"]}\n\t\t\t\tselected={settings.ResetPB ? 1 : 0}\n\t\t\t\tonClick={(index) => {\n\t\t\t\t\tsettings.ResetPB = index == 1;\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<br />\n\t\t\t<Btn click={() => menu(12)}>{t(\"menu-back\")}</Btn>\n\t\t</nav>\n\t);\n}\n", "import { Stats } from \"./Stats\";\n\nexport function SectionLeft() {\n\treturn (\n\t\t<div id=\"d\">\n\t\t\t<h3 id=\"holdtext\">\n\t\t\t\t<span class=\"white-border-span\">Hold</span>\n\t\t\t</h3>\n\n\t\t\t<div id=\"a\">\n\t\t\t\t<canvas id=\"hold\" class=\"glow-flash-animation\" />\n\t\t\t\t<br />\n\n\t\t\t\t<div id=\"divInp\" />\n\t\t\t</div>\n\t\t\t<h3 id=\"ihs-indicator\" class=\"flashing\">\n\t\t\t\tINITIAL\n\t\t\t</h3>\n\t\t\t<Stats />\n\t\t</div>\n\t);\n}\n\n\n", "export function Stats({ }) {\n\treturn (\n\t\t<table id=\"stats\">\n\t\t\t<tr id=\"nesratetr\" class=\"gone\">\n\t\t\t\t<th class=\"white-border-span\" style=\"font-size: 0.5em\">\n\t\t\t\t\t<b>Tetris</b> Rate\n\t\t\t\t</th>\n\t\t\t\t<td id=\"nesrate\">0</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th id=\"score-label\" class=\"white-border-span\">\n\t\t\t\t\tScore\n\t\t\t\t</th>\n\t\t\t\t<td id=\"score\">0</td>\n\t\t\t\t<td id=\"nesscore\">0</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th id=\"level\" class=\"white-border-span\" />\n\t\t\t\t<th id=\"strict-ind\">STRICT MODE</th>\n\t\t\t</tr>\n\n\t\t\t<tr>\n\t\t\t\t<th class=\"white-border-span\">Lines</th>\n\t\t\t\t<td id=\"levelline\">\n\t\t\t\t\t<div id=\"promode\" />\n\t\t\t\t\t<div id=\"line\">0</div>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th class=\"white-border-span\">Pieces</th>\n\t\t\t\t<td id=\"piece\">0</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th class=\"white-border-span\">Finesse</th>\n\t\t\t\t<td id=\"finesse\">0</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<th id=\"time\">\n\t\t\t\t\t<canvas />\n\t\t\t\t</th>\n\t\t\t</tr>\n\t\t</table>\n\t);\n}\n", "import ProgressBar from \"../utils/ProgressBar\";\nimport { LineShower } from \"../utils/LineShower\";\n\nexport function SectionRight() {\n\treturn (\n\t\t<div id=\"c\">\n\t\t\t<div id=\"sounds-loading\">\n\t\t\t\t<ProgressBar\n\t\t\t\t\tid={\"sound-loading-bar\"}\n\t\t\t\t\tlabel-id={\"sound-name\"}\n\t\t\t\t\tvalue={0}\n\t\t\t\t\tmax={100}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<h3 id=\"irs-indicator\" class=\"flashing\">\n\t\t\t\tINITIAL\n\t\t\t</h3>\n\t\t\t<h3 style=\"font-weight: 300\">\n\t\t\t\t<span class=\"white-border-span\">Next</span>\n\t\t\t</h3>\n\n\t\t\t<canvas id=\"preview\" />\n\n\t\t\t<LineShower />\n\t\t</div>\n\t);\n}\n", "import { guid } from \"../../utils/random-id\";\n\ninterface ProgressBarProps {\n\tid?: string;\n\t\"label-id\"?: string;\n\tvalue: number;\n\tmax: number;\n}\n\nexport default function ProgressBar({\n\tid,\n\t\"label-id\": labelId,\n\tvalue,\n\tmax,\n}: ProgressBarProps) {\n\tconst eleId = id || `progress-bar-${guid(5)}`;\n\n\treturn (\n\t\t<>\n\t\t\t{labelId && (\n\t\t\t\t<label id={labelId} for={eleId} style=\"display: block\" />\n\t\t\t)}\n\t\t\t<progress id={eleId} value={value} max={max} />\n\t\t</>\n\t);\n}", "export function guid(len) {\n\treturn Math.random().toString(36).substring(2, len);\n}", "export function LineShower() {\n\treturn (\n\t\t<div\n\t\t\tid=\"lineshower\"\n\t\t\tstyle=\"\n\t\t\t\tfont-size: 2.5em;\n\t\t\t\ttransform: translate(0, 9em);\n\t\t\t\tdisplay: none;\n\t\t\t\"\n\t\t>\n\t\t\t<img id=\"linevector\" src=\"./assets/linevector.svg\" />\n\t\t\t<p\n\t\t\t\tid=\"ivalue\"\n\t\t\t\tstyle={`\n\t\t\t\t\tmargin: 0px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tfont-family: 'Roboto Mono';\n\t\t\t\t\tfont-weight: 200;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t0\n\t\t\t</p>\n\t\t</div>\n\t);\n}\n"],
  "mappings": "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G;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA,IAEJ;AAAA,MACC,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAA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",
  "names": []
}
